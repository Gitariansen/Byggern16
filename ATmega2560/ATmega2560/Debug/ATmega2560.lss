
ATmega2560.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b8  00800200  00001746  000017da  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001746  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  008002b8  008002b8  00001892  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001892  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000288  00000000  00000000  000018ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001c8d  00000000  00000000  00001b76  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000f59  00000000  00000000  00003803  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000141e  00000000  00000000  0000475c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000550  00000000  00000000  00005b7c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000077d  00000000  00000000  000060cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000c7d  00000000  00000000  00006849  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001f8  00000000  00000000  000074c6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c2 c0       	rjmp	.+388    	; 0x186 <__ctors_end>
       2:	00 00       	nop
       4:	e0 c0       	rjmp	.+448    	; 0x1c6 <__bad_interrupt>
       6:	00 00       	nop
       8:	de c0       	rjmp	.+444    	; 0x1c6 <__bad_interrupt>
       a:	00 00       	nop
       c:	4a c2       	rjmp	.+1172   	; 0x4a2 <__vector_3>
       e:	00 00       	nop
      10:	da c0       	rjmp	.+436    	; 0x1c6 <__bad_interrupt>
      12:	00 00       	nop
      14:	d8 c0       	rjmp	.+432    	; 0x1c6 <__bad_interrupt>
      16:	00 00       	nop
      18:	d6 c0       	rjmp	.+428    	; 0x1c6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	d4 c0       	rjmp	.+424    	; 0x1c6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	d2 c0       	rjmp	.+420    	; 0x1c6 <__bad_interrupt>
      22:	00 00       	nop
      24:	d0 c0       	rjmp	.+416    	; 0x1c6 <__bad_interrupt>
      26:	00 00       	nop
      28:	ce c0       	rjmp	.+412    	; 0x1c6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	cc c0       	rjmp	.+408    	; 0x1c6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	ca c0       	rjmp	.+404    	; 0x1c6 <__bad_interrupt>
      32:	00 00       	nop
      34:	c8 c0       	rjmp	.+400    	; 0x1c6 <__bad_interrupt>
      36:	00 00       	nop
      38:	c6 c0       	rjmp	.+396    	; 0x1c6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	c4 c0       	rjmp	.+392    	; 0x1c6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	c2 c0       	rjmp	.+388    	; 0x1c6 <__bad_interrupt>
      42:	00 00       	nop
      44:	c0 c0       	rjmp	.+384    	; 0x1c6 <__bad_interrupt>
      46:	00 00       	nop
      48:	be c0       	rjmp	.+380    	; 0x1c6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	bc c0       	rjmp	.+376    	; 0x1c6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	ba c0       	rjmp	.+372    	; 0x1c6 <__bad_interrupt>
      52:	00 00       	nop
      54:	b8 c0       	rjmp	.+368    	; 0x1c6 <__bad_interrupt>
      56:	00 00       	nop
      58:	b6 c0       	rjmp	.+364    	; 0x1c6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b4 c0       	rjmp	.+360    	; 0x1c6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	b2 c0       	rjmp	.+356    	; 0x1c6 <__bad_interrupt>
      62:	00 00       	nop
      64:	b0 c0       	rjmp	.+352    	; 0x1c6 <__bad_interrupt>
      66:	00 00       	nop
      68:	ae c0       	rjmp	.+348    	; 0x1c6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ac c0       	rjmp	.+344    	; 0x1c6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	aa c0       	rjmp	.+340    	; 0x1c6 <__bad_interrupt>
      72:	00 00       	nop
      74:	a8 c0       	rjmp	.+336    	; 0x1c6 <__bad_interrupt>
      76:	00 00       	nop
      78:	a6 c0       	rjmp	.+332    	; 0x1c6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a4 c0       	rjmp	.+328    	; 0x1c6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	a2 c0       	rjmp	.+324    	; 0x1c6 <__bad_interrupt>
      82:	00 00       	nop
      84:	a0 c0       	rjmp	.+320    	; 0x1c6 <__bad_interrupt>
      86:	00 00       	nop
      88:	9e c0       	rjmp	.+316    	; 0x1c6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	9c c0       	rjmp	.+312    	; 0x1c6 <__bad_interrupt>
      8e:	00 00       	nop
      90:	9a c0       	rjmp	.+308    	; 0x1c6 <__bad_interrupt>
      92:	00 00       	nop
      94:	98 c0       	rjmp	.+304    	; 0x1c6 <__bad_interrupt>
      96:	00 00       	nop
      98:	96 c0       	rjmp	.+300    	; 0x1c6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	2b c4       	rjmp	.+2134   	; 0x8f4 <__vector_39>
      9e:	00 00       	nop
      a0:	92 c0       	rjmp	.+292    	; 0x1c6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	90 c0       	rjmp	.+288    	; 0x1c6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	8e c0       	rjmp	.+284    	; 0x1c6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	8c c0       	rjmp	.+280    	; 0x1c6 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	8a c0       	rjmp	.+276    	; 0x1c6 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	88 c0       	rjmp	.+272    	; 0x1c6 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	86 c0       	rjmp	.+268    	; 0x1c6 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	84 c0       	rjmp	.+264    	; 0x1c6 <__bad_interrupt>
      be:	00 00       	nop
      c0:	82 c0       	rjmp	.+260    	; 0x1c6 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	80 c0       	rjmp	.+256    	; 0x1c6 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	7e c0       	rjmp	.+252    	; 0x1c6 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	7c c0       	rjmp	.+248    	; 0x1c6 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	7a c0       	rjmp	.+244    	; 0x1c6 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	78 c0       	rjmp	.+240    	; 0x1c6 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	76 c0       	rjmp	.+236    	; 0x1c6 <__bad_interrupt>
      da:	00 00       	nop
      dc:	74 c0       	rjmp	.+232    	; 0x1c6 <__bad_interrupt>
      de:	00 00       	nop
      e0:	72 c0       	rjmp	.+228    	; 0x1c6 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	95 04       	cpc	r9, r5
      e6:	e7 04       	cpc	r14, r7
      e8:	e7 04       	cpc	r14, r7
      ea:	e7 04       	cpc	r14, r7
      ec:	e7 04       	cpc	r14, r7
      ee:	e7 04       	cpc	r14, r7
      f0:	e7 04       	cpc	r14, r7
      f2:	e7 04       	cpc	r14, r7
      f4:	95 04       	cpc	r9, r5
      f6:	e7 04       	cpc	r14, r7
      f8:	e7 04       	cpc	r14, r7
      fa:	e7 04       	cpc	r14, r7
      fc:	e7 04       	cpc	r14, r7
      fe:	e7 04       	cpc	r14, r7
     100:	e7 04       	cpc	r14, r7
     102:	e7 04       	cpc	r14, r7
     104:	97 04       	cpc	r9, r7
     106:	e7 04       	cpc	r14, r7
     108:	e7 04       	cpc	r14, r7
     10a:	e7 04       	cpc	r14, r7
     10c:	e7 04       	cpc	r14, r7
     10e:	e7 04       	cpc	r14, r7
     110:	e7 04       	cpc	r14, r7
     112:	e7 04       	cpc	r14, r7
     114:	e7 04       	cpc	r14, r7
     116:	e7 04       	cpc	r14, r7
     118:	e7 04       	cpc	r14, r7
     11a:	e7 04       	cpc	r14, r7
     11c:	e7 04       	cpc	r14, r7
     11e:	e7 04       	cpc	r14, r7
     120:	e7 04       	cpc	r14, r7
     122:	e7 04       	cpc	r14, r7
     124:	97 04       	cpc	r9, r7
     126:	e7 04       	cpc	r14, r7
     128:	e7 04       	cpc	r14, r7
     12a:	e7 04       	cpc	r14, r7
     12c:	e7 04       	cpc	r14, r7
     12e:	e7 04       	cpc	r14, r7
     130:	e7 04       	cpc	r14, r7
     132:	e7 04       	cpc	r14, r7
     134:	e7 04       	cpc	r14, r7
     136:	e7 04       	cpc	r14, r7
     138:	e7 04       	cpc	r14, r7
     13a:	e7 04       	cpc	r14, r7
     13c:	e7 04       	cpc	r14, r7
     13e:	e7 04       	cpc	r14, r7
     140:	e7 04       	cpc	r14, r7
     142:	e7 04       	cpc	r14, r7
     144:	e3 04       	cpc	r14, r3
     146:	e7 04       	cpc	r14, r7
     148:	e7 04       	cpc	r14, r7
     14a:	e7 04       	cpc	r14, r7
     14c:	e7 04       	cpc	r14, r7
     14e:	e7 04       	cpc	r14, r7
     150:	e7 04       	cpc	r14, r7
     152:	e7 04       	cpc	r14, r7
     154:	c0 04       	cpc	r12, r0
     156:	e7 04       	cpc	r14, r7
     158:	e7 04       	cpc	r14, r7
     15a:	e7 04       	cpc	r14, r7
     15c:	e7 04       	cpc	r14, r7
     15e:	e7 04       	cpc	r14, r7
     160:	e7 04       	cpc	r14, r7
     162:	e7 04       	cpc	r14, r7
     164:	e7 04       	cpc	r14, r7
     166:	e7 04       	cpc	r14, r7
     168:	e7 04       	cpc	r14, r7
     16a:	e7 04       	cpc	r14, r7
     16c:	e7 04       	cpc	r14, r7
     16e:	e7 04       	cpc	r14, r7
     170:	e7 04       	cpc	r14, r7
     172:	e7 04       	cpc	r14, r7
     174:	b4 04       	cpc	r11, r4
     176:	e7 04       	cpc	r14, r7
     178:	e7 04       	cpc	r14, r7
     17a:	e7 04       	cpc	r14, r7
     17c:	e7 04       	cpc	r14, r7
     17e:	e7 04       	cpc	r14, r7
     180:	e7 04       	cpc	r14, r7
     182:	e7 04       	cpc	r14, r7
     184:	d2 04       	cpc	r13, r2

00000186 <__ctors_end>:
     186:	11 24       	eor	r1, r1
     188:	1f be       	out	0x3f, r1	; 63
     18a:	cf ef       	ldi	r28, 0xFF	; 255
     18c:	d1 e2       	ldi	r29, 0x21	; 33
     18e:	de bf       	out	0x3e, r29	; 62
     190:	cd bf       	out	0x3d, r28	; 61
     192:	00 e0       	ldi	r16, 0x00	; 0
     194:	0c bf       	out	0x3c, r16	; 60

00000196 <__do_copy_data>:
     196:	12 e0       	ldi	r17, 0x02	; 2
     198:	a0 e0       	ldi	r26, 0x00	; 0
     19a:	b2 e0       	ldi	r27, 0x02	; 2
     19c:	e6 e4       	ldi	r30, 0x46	; 70
     19e:	f7 e1       	ldi	r31, 0x17	; 23
     1a0:	00 e0       	ldi	r16, 0x00	; 0
     1a2:	0b bf       	out	0x3b, r16	; 59
     1a4:	02 c0       	rjmp	.+4      	; 0x1aa <__do_copy_data+0x14>
     1a6:	07 90       	elpm	r0, Z+
     1a8:	0d 92       	st	X+, r0
     1aa:	a8 3b       	cpi	r26, 0xB8	; 184
     1ac:	b1 07       	cpc	r27, r17
     1ae:	d9 f7       	brne	.-10     	; 0x1a6 <__do_copy_data+0x10>

000001b0 <__do_clear_bss>:
     1b0:	22 e0       	ldi	r18, 0x02	; 2
     1b2:	a8 eb       	ldi	r26, 0xB8	; 184
     1b4:	b2 e0       	ldi	r27, 0x02	; 2
     1b6:	01 c0       	rjmp	.+2      	; 0x1ba <.do_clear_bss_start>

000001b8 <.do_clear_bss_loop>:
     1b8:	1d 92       	st	X+, r1

000001ba <.do_clear_bss_start>:
     1ba:	ad 3c       	cpi	r26, 0xCD	; 205
     1bc:	b2 07       	cpc	r27, r18
     1be:	e1 f7       	brne	.-8      	; 0x1b8 <.do_clear_bss_loop>
     1c0:	03 d0       	rcall	.+6      	; 0x1c8 <main>
     1c2:	0c 94 a1 0b 	jmp	0x1742	; 0x1742 <_exit>

000001c6 <__bad_interrupt>:
     1c6:	1c cf       	rjmp	.-456    	; 0x0 <__vectors>

000001c8 <main>:
#include "drivers/motor.h"

#include "drivers/pwm.h"

int main(void)
{
     1c8:	cf 93       	push	r28
     1ca:	df 93       	push	r29
     1cc:	cd b7       	in	r28, 0x3d	; 61
     1ce:	de b7       	in	r29, 0x3e	; 62
     1d0:	66 97       	sbiw	r28, 0x16	; 22
     1d2:	0f b6       	in	r0, 0x3f	; 63
     1d4:	f8 94       	cli
     1d6:	de bf       	out	0x3e, r29	; 62
     1d8:	0f be       	out	0x3f, r0	; 63
     1da:	cd bf       	out	0x3d, r28	; 61
	UART_init(MYUBRR);
     1dc:	87 e6       	ldi	r24, 0x67	; 103
     1de:	90 e0       	ldi	r25, 0x00	; 0
     1e0:	1e d4       	rcall	.+2108   	; 0xa1e <UART_init>
	CAN_init();
     1e2:	6a d0       	rcall	.+212    	; 0x2b8 <CAN_init>
	IR_init();
     1e4:	9a d1       	rcall	.+820    	; 0x51a <IR_init>
	SERVO_init();
     1e6:	f7 d2       	rcall	.+1518   	; 0x7d6 <SERVO_init>
	MOTOR_init();
     1e8:	3b d2       	rcall	.+1142   	; 0x660 <MOTOR_init>
		printf("Received message\n");
		printf("id: %d\ndata: %d\n\n", receive_msg.id, receive_msg.data[0]);
		_delay_ms(10);
	}*/

	uint8_t ir_value = IR_read();
     1ea:	99 d1       	rcall	.+818    	; 0x51e <IR_read>
     1ec:	f8 2e       	mov	r15, r24
		receive_msg = CAN_data_receive();
		if(receive_msg.id == 1) {
			// Message is joystick data
			int8_t x = receive_msg.data[0];
			SERVO_write(-x);
			MOTOR_set_dir_right(x > 0);
     1ee:	ee 24       	eor	r14, r14
     1f0:	e3 94       	inc	r14
     1f2:	d1 2c       	mov	r13, r1
			send_msg.length = 1;
			CAN_message_send(&send_msg);
		}
		
		int16_t speed = MOTOR_read_encoder();
		printf("Encoder data: %d\n", speed);
     1f4:	02 e1       	ldi	r16, 0x12	; 18
     1f6:	12 e0       	ldi	r17, 0x02	; 2
	}*/

	uint8_t ir_value = IR_read();
	uint8_t old_ir_value = ir_value;
	while(1) {
		receive_msg = CAN_data_receive();
     1f8:	ce 01       	movw	r24, r28
     1fa:	0c 96       	adiw	r24, 0x0c	; 12
     1fc:	c6 d0       	rcall	.+396    	; 0x38a <CAN_data_receive>
		if(receive_msg.id == 1) {
     1fe:	8c 85       	ldd	r24, Y+12	; 0x0c
     200:	9d 85       	ldd	r25, Y+13	; 0x0d
     202:	01 97       	sbiw	r24, 0x01	; 1
     204:	21 f5       	brne	.+72     	; 0x24e <main+0x86>
			// Message is joystick data
			int8_t x = receive_msg.data[0];
     206:	cf 84       	ldd	r12, Y+15	; 0x0f
			SERVO_write(-x);
     208:	8c 2d       	mov	r24, r12
     20a:	81 95       	neg	r24
     20c:	ef d2       	rcall	.+1502   	; 0x7ec <SERVO_write>
			MOTOR_set_dir_right(x > 0);
     20e:	8e 2d       	mov	r24, r14
     210:	1c 14       	cp	r1, r12
     212:	0c f0       	brlt	.+2      	; 0x216 <main+0x4e>
     214:	8d 2d       	mov	r24, r13
     216:	13 d2       	rcall	.+1062   	; 0x63e <MOTOR_set_dir_right>
			MOTOR_set_velocity(abs(x)/100.0f * 0xFF);
     218:	6c 2d       	mov	r22, r12
     21a:	77 27       	eor	r23, r23
     21c:	67 fd       	sbrc	r22, 7
     21e:	70 95       	com	r23
     220:	77 23       	and	r23, r23
     222:	1c f4       	brge	.+6      	; 0x22a <main+0x62>
     224:	71 95       	neg	r23
     226:	61 95       	neg	r22
     228:	71 09       	sbc	r23, r1
     22a:	88 27       	eor	r24, r24
     22c:	77 fd       	sbrc	r23, 7
     22e:	80 95       	com	r24
     230:	98 2f       	mov	r25, r24
     232:	06 d5       	rcall	.+2572   	; 0xc40 <__floatsisf>
     234:	20 e0       	ldi	r18, 0x00	; 0
     236:	30 e0       	ldi	r19, 0x00	; 0
     238:	48 ec       	ldi	r20, 0xC8	; 200
     23a:	52 e4       	ldi	r21, 0x42	; 66
     23c:	6b d4       	rcall	.+2262   	; 0xb14 <__divsf3>
     23e:	20 e0       	ldi	r18, 0x00	; 0
     240:	30 e0       	ldi	r19, 0x00	; 0
     242:	4f e7       	ldi	r20, 0x7F	; 127
     244:	53 e4       	ldi	r21, 0x43	; 67
     246:	b0 d5       	rcall	.+2912   	; 0xda8 <__mulsf3>
     248:	cd d4       	rcall	.+2458   	; 0xbe4 <__fixunssfsi>
     24a:	86 2f       	mov	r24, r22
     24c:	f6 d1       	rcall	.+1004   	; 0x63a <MOTOR_set_velocity>
		}
		
		ir_value = IR_read();
     24e:	67 d1       	rcall	.+718    	; 0x51e <IR_read>
     250:	c8 2e       	mov	r12, r24
		//printf("IR value: %d\n", ir_value);
		if(ir_value != old_ir_value) {
     252:	8f 15       	cp	r24, r15
     254:	39 f0       	breq	.+14     	; 0x264 <main+0x9c>
			old_ir_value = ir_value;
			// Send score to node 1
			send_msg.id = 0;
     256:	1a 82       	std	Y+2, r1	; 0x02
     258:	19 82       	std	Y+1, r1	; 0x01
			send_msg.data[0] = ir_value;
     25a:	8c 83       	std	Y+4, r24	; 0x04
			send_msg.length = 1;
     25c:	eb 82       	std	Y+3, r14	; 0x03
			CAN_message_send(&send_msg);
     25e:	ce 01       	movw	r24, r28
     260:	01 96       	adiw	r24, 0x01	; 1
     262:	43 d0       	rcall	.+134    	; 0x2ea <CAN_message_send>
		}
		
		int16_t speed = MOTOR_read_encoder();
     264:	41 d2       	rcall	.+1154   	; 0x6e8 <MOTOR_read_encoder>
		printf("Encoder data: %d\n", speed);
     266:	9f 93       	push	r25
     268:	8f 93       	push	r24
     26a:	1f 93       	push	r17
     26c:	0f 93       	push	r16
     26e:	4f d6       	rcall	.+3230   	; 0xf0e <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     270:	8f e3       	ldi	r24, 0x3F	; 63
     272:	9c e9       	ldi	r25, 0x9C	; 156
     274:	01 97       	sbiw	r24, 0x01	; 1
     276:	f1 f7       	brne	.-4      	; 0x274 <main+0xac>
     278:	00 c0       	rjmp	.+0      	; 0x27a <main+0xb2>
     27a:	00 00       	nop
     27c:	0f 90       	pop	r0
     27e:	0f 90       	pop	r0
     280:	0f 90       	pop	r0
     282:	0f 90       	pop	r0
     284:	fc 2c       	mov	r15, r12
     286:	b8 cf       	rjmp	.-144    	; 0x1f8 <main+0x30>

00000288 <ADC_init>:
     288:	ea e7       	ldi	r30, 0x7A	; 122
     28a:	f0 e0       	ldi	r31, 0x00	; 0
     28c:	80 81       	ld	r24, Z
     28e:	80 68       	ori	r24, 0x80	; 128
     290:	80 83       	st	Z, r24
     292:	80 81       	ld	r24, Z
     294:	87 60       	ori	r24, 0x07	; 7
     296:	80 83       	st	Z, r24
     298:	08 95       	ret

0000029a <ADC_read>:
     29a:	8f 71       	andi	r24, 0x1F	; 31
     29c:	80 66       	ori	r24, 0x60	; 96
     29e:	80 93 7c 00 	sts	0x007C, r24
     2a2:	ea e7       	ldi	r30, 0x7A	; 122
     2a4:	f0 e0       	ldi	r31, 0x00	; 0
     2a6:	80 81       	ld	r24, Z
     2a8:	80 64       	ori	r24, 0x40	; 64
     2aa:	80 83       	st	Z, r24
     2ac:	80 81       	ld	r24, Z
     2ae:	86 fd       	sbrc	r24, 6
     2b0:	fd cf       	rjmp	.-6      	; 0x2ac <ADC_read+0x12>
     2b2:	80 91 79 00 	lds	r24, 0x0079
     2b6:	08 95       	ret

000002b8 <CAN_init>:
     2b8:	a2 d1       	rcall	.+836    	; 0x5fe <MCP2515_init>
     2ba:	40 e0       	ldi	r20, 0x00	; 0
     2bc:	60 ee       	ldi	r22, 0xE0	; 224
     2be:	8f e0       	ldi	r24, 0x0F	; 15
     2c0:	81 d1       	rcall	.+770    	; 0x5c4 <MCP2515_bit_modify>
     2c2:	8e e0       	ldi	r24, 0x0E	; 14
     2c4:	40 d1       	rcall	.+640    	; 0x546 <MCP2515_read_data>
     2c6:	80 7e       	andi	r24, 0xE0	; 224
     2c8:	21 f0       	breq	.+8      	; 0x2d2 <CAN_init+0x1a>
     2ca:	84 e2       	ldi	r24, 0x24	; 36
     2cc:	92 e0       	ldi	r25, 0x02	; 2
     2ce:	30 c6       	rjmp	.+3168   	; 0xf30 <puts>
     2d0:	08 95       	ret
     2d2:	43 e2       	ldi	r20, 0x23	; 35
     2d4:	6f ef       	ldi	r22, 0xFF	; 255
     2d6:	8b e2       	ldi	r24, 0x2B	; 43
     2d8:	75 d1       	rcall	.+746    	; 0x5c4 <MCP2515_bit_modify>
     2da:	e9 e6       	ldi	r30, 0x69	; 105
     2dc:	f0 e0       	ldi	r31, 0x00	; 0
     2de:	80 81       	ld	r24, Z
     2e0:	80 62       	ori	r24, 0x20	; 32
     2e2:	80 83       	st	Z, r24
     2e4:	ea 9a       	sbi	0x1d, 2	; 29
     2e6:	78 94       	sei
     2e8:	08 95       	ret

000002ea <CAN_message_send>:
     2ea:	0f 93       	push	r16
     2ec:	1f 93       	push	r17
     2ee:	cf 93       	push	r28
     2f0:	df 93       	push	r29
     2f2:	cd b7       	in	r28, 0x3d	; 61
     2f4:	de b7       	in	r29, 0x3e	; 62
     2f6:	dc 01       	movw	r26, r24
     2f8:	0d b7       	in	r16, 0x3d	; 61
     2fa:	1e b7       	in	r17, 0x3e	; 62
     2fc:	12 96       	adiw	r26, 0x02	; 2
     2fe:	4c 91       	ld	r20, X
     300:	12 97       	sbiw	r26, 0x02	; 2
     302:	50 e0       	ldi	r21, 0x00	; 0
     304:	4b 5f       	subi	r20, 0xFB	; 251
     306:	5f 4f       	sbci	r21, 0xFF	; 255
     308:	8d b7       	in	r24, 0x3d	; 61
     30a:	9e b7       	in	r25, 0x3e	; 62
     30c:	84 1b       	sub	r24, r20
     30e:	95 0b       	sbc	r25, r21
     310:	0f b6       	in	r0, 0x3f	; 63
     312:	f8 94       	cli
     314:	9e bf       	out	0x3e, r25	; 62
     316:	0f be       	out	0x3f, r0	; 63
     318:	8d bf       	out	0x3d, r24	; 61
     31a:	6d b7       	in	r22, 0x3d	; 61
     31c:	7e b7       	in	r23, 0x3e	; 62
     31e:	6f 5f       	subi	r22, 0xFF	; 255
     320:	7f 4f       	sbci	r23, 0xFF	; 255
     322:	8d 91       	ld	r24, X+
     324:	9c 91       	ld	r25, X
     326:	11 97       	sbiw	r26, 0x01	; 1
     328:	96 95       	lsr	r25
     32a:	87 95       	ror	r24
     32c:	96 95       	lsr	r25
     32e:	87 95       	ror	r24
     330:	96 95       	lsr	r25
     332:	87 95       	ror	r24
     334:	ed b7       	in	r30, 0x3d	; 61
     336:	fe b7       	in	r31, 0x3e	; 62
     338:	81 83       	std	Z+1, r24	; 0x01
     33a:	8c 91       	ld	r24, X
     33c:	82 95       	swap	r24
     33e:	88 0f       	add	r24, r24
     340:	80 7e       	andi	r24, 0xE0	; 224
     342:	fb 01       	movw	r30, r22
     344:	81 83       	std	Z+1, r24	; 0x01
     346:	12 82       	std	Z+2, r1	; 0x02
     348:	13 82       	std	Z+3, r1	; 0x03
     34a:	12 96       	adiw	r26, 0x02	; 2
     34c:	8c 91       	ld	r24, X
     34e:	12 97       	sbiw	r26, 0x02	; 2
     350:	84 83       	std	Z+4, r24	; 0x04
     352:	46 30       	cpi	r20, 0x06	; 6
     354:	51 05       	cpc	r21, r1
     356:	5c f0       	brlt	.+22     	; 0x36e <CAN_message_send+0x84>
     358:	13 96       	adiw	r26, 0x03	; 3
     35a:	35 96       	adiw	r30, 0x05	; 5
     35c:	25 e0       	ldi	r18, 0x05	; 5
     35e:	30 e0       	ldi	r19, 0x00	; 0
     360:	8d 91       	ld	r24, X+
     362:	81 93       	st	Z+, r24
     364:	2f 5f       	subi	r18, 0xFF	; 255
     366:	3f 4f       	sbci	r19, 0xFF	; 255
     368:	24 17       	cp	r18, r20
     36a:	35 07       	cpc	r19, r21
     36c:	cc f3       	brlt	.-14     	; 0x360 <CAN_message_send+0x76>
     36e:	81 e3       	ldi	r24, 0x31	; 49
     370:	fa d0       	rcall	.+500    	; 0x566 <MCP2515_write_data>
     372:	81 e0       	ldi	r24, 0x01	; 1
     374:	1b d1       	rcall	.+566    	; 0x5ac <MCP2515_request_to_send>
     376:	0f b6       	in	r0, 0x3f	; 63
     378:	f8 94       	cli
     37a:	1e bf       	out	0x3e, r17	; 62
     37c:	0f be       	out	0x3f, r0	; 63
     37e:	0d bf       	out	0x3d, r16	; 61
     380:	df 91       	pop	r29
     382:	cf 91       	pop	r28
     384:	1f 91       	pop	r17
     386:	0f 91       	pop	r16
     388:	08 95       	ret

0000038a <CAN_data_receive>:
     38a:	8f 92       	push	r8
     38c:	9f 92       	push	r9
     38e:	af 92       	push	r10
     390:	bf 92       	push	r11
     392:	cf 92       	push	r12
     394:	df 92       	push	r13
     396:	ef 92       	push	r14
     398:	ff 92       	push	r15
     39a:	0f 93       	push	r16
     39c:	1f 93       	push	r17
     39e:	cf 93       	push	r28
     3a0:	df 93       	push	r29
     3a2:	cd b7       	in	r28, 0x3d	; 61
     3a4:	de b7       	in	r29, 0x3e	; 62
     3a6:	2b 97       	sbiw	r28, 0x0b	; 11
     3a8:	0f b6       	in	r0, 0x3f	; 63
     3aa:	f8 94       	cli
     3ac:	de bf       	out	0x3e, r29	; 62
     3ae:	0f be       	out	0x3f, r0	; 63
     3b0:	cd bf       	out	0x3d, r28	; 61
     3b2:	7c 01       	movw	r14, r24
     3b4:	80 91 c2 02 	lds	r24, 0x02C2
     3b8:	88 23       	and	r24, r24
     3ba:	b1 f1       	breq	.+108    	; 0x428 <CAN_data_receive+0x9e>
     3bc:	81 e6       	ldi	r24, 0x61	; 97
     3be:	c3 d0       	rcall	.+390    	; 0x546 <MCP2515_read_data>
     3c0:	a8 2e       	mov	r10, r24
     3c2:	82 e6       	ldi	r24, 0x62	; 98
     3c4:	c0 d0       	rcall	.+384    	; 0x546 <MCP2515_read_data>
     3c6:	82 95       	swap	r24
     3c8:	86 95       	lsr	r24
     3ca:	87 70       	andi	r24, 0x07	; 7
     3cc:	b1 2c       	mov	r11, r1
     3ce:	aa 0c       	add	r10, r10
     3d0:	bb 1c       	adc	r11, r11
     3d2:	aa 0c       	add	r10, r10
     3d4:	bb 1c       	adc	r11, r11
     3d6:	aa 0c       	add	r10, r10
     3d8:	bb 1c       	adc	r11, r11
     3da:	a8 2a       	or	r10, r24
     3dc:	85 e6       	ldi	r24, 0x65	; 101
     3de:	b3 d0       	rcall	.+358    	; 0x546 <MCP2515_read_data>
     3e0:	8f 70       	andi	r24, 0x0F	; 15
     3e2:	88 2e       	mov	r8, r24
     3e4:	99 f0       	breq	.+38     	; 0x40c <CAN_data_receive+0x82>
     3e6:	8e 01       	movw	r16, r28
     3e8:	0c 5f       	subi	r16, 0xFC	; 252
     3ea:	1f 4f       	sbci	r17, 0xFF	; 255
     3ec:	68 01       	movw	r12, r16
     3ee:	c8 0e       	add	r12, r24
     3f0:	d1 1c       	adc	r13, r1
     3f2:	0f 2e       	mov	r0, r31
     3f4:	f6 e6       	ldi	r31, 0x66	; 102
     3f6:	9f 2e       	mov	r9, r31
     3f8:	f0 2d       	mov	r31, r0
     3fa:	89 2d       	mov	r24, r9
     3fc:	a4 d0       	rcall	.+328    	; 0x546 <MCP2515_read_data>
     3fe:	f8 01       	movw	r30, r16
     400:	81 93       	st	Z+, r24
     402:	8f 01       	movw	r16, r30
     404:	93 94       	inc	r9
     406:	ec 15       	cp	r30, r12
     408:	fd 05       	cpc	r31, r13
     40a:	b9 f7       	brne	.-18     	; 0x3fa <CAN_data_receive+0x70>
     40c:	10 92 c2 02 	sts	0x02C2, r1
     410:	ba 82       	std	Y+2, r11	; 0x02
     412:	a9 82       	std	Y+1, r10	; 0x01
     414:	8b 82       	std	Y+3, r8	; 0x03
     416:	8b e0       	ldi	r24, 0x0B	; 11
     418:	fe 01       	movw	r30, r28
     41a:	31 96       	adiw	r30, 0x01	; 1
     41c:	d7 01       	movw	r26, r14
     41e:	01 90       	ld	r0, Z+
     420:	0d 92       	st	X+, r0
     422:	8a 95       	dec	r24
     424:	e1 f7       	brne	.-8      	; 0x41e <CAN_data_receive+0x94>
     426:	08 c0       	rjmp	.+16     	; 0x438 <CAN_data_receive+0xae>
     428:	8b e0       	ldi	r24, 0x0B	; 11
     42a:	e6 e0       	ldi	r30, 0x06	; 6
     42c:	f2 e0       	ldi	r31, 0x02	; 2
     42e:	d7 01       	movw	r26, r14
     430:	01 90       	ld	r0, Z+
     432:	0d 92       	st	X+, r0
     434:	8a 95       	dec	r24
     436:	e1 f7       	brne	.-8      	; 0x430 <CAN_data_receive+0xa6>
     438:	c7 01       	movw	r24, r14
     43a:	2b 96       	adiw	r28, 0x0b	; 11
     43c:	0f b6       	in	r0, 0x3f	; 63
     43e:	f8 94       	cli
     440:	de bf       	out	0x3e, r29	; 62
     442:	0f be       	out	0x3f, r0	; 63
     444:	cd bf       	out	0x3d, r28	; 61
     446:	df 91       	pop	r29
     448:	cf 91       	pop	r28
     44a:	1f 91       	pop	r17
     44c:	0f 91       	pop	r16
     44e:	ff 90       	pop	r15
     450:	ef 90       	pop	r14
     452:	df 90       	pop	r13
     454:	cf 90       	pop	r12
     456:	bf 90       	pop	r11
     458:	af 90       	pop	r10
     45a:	9f 90       	pop	r9
     45c:	8f 90       	pop	r8
     45e:	08 95       	ret

00000460 <CAN_error>:
     460:	cf 93       	push	r28
     462:	8d e2       	ldi	r24, 0x2D	; 45
     464:	70 d0       	rcall	.+224    	; 0x546 <MCP2515_read_data>
     466:	c8 2f       	mov	r28, r24
     468:	82 ff       	sbrs	r24, 2
     46a:	03 c0       	rjmp	.+6      	; 0x472 <CAN_error+0x12>
     46c:	8f e4       	ldi	r24, 0x4F	; 79
     46e:	92 e0       	ldi	r25, 0x02	; 2
     470:	5f d5       	rcall	.+2750   	; 0xf30 <puts>
     472:	c1 ff       	sbrs	r28, 1
     474:	03 c0       	rjmp	.+6      	; 0x47c <CAN_error+0x1c>
     476:	8d e6       	ldi	r24, 0x6D	; 109
     478:	92 e0       	ldi	r25, 0x02	; 2
     47a:	5a d5       	rcall	.+2740   	; 0xf30 <puts>
     47c:	cf 91       	pop	r28
     47e:	08 95       	ret

00000480 <CAN_int_vect>:
     480:	cf 93       	push	r28
     482:	8c e2       	ldi	r24, 0x2C	; 44
     484:	60 d0       	rcall	.+192    	; 0x546 <MCP2515_read_data>
     486:	c8 2f       	mov	r28, r24
     488:	85 fd       	sbrc	r24, 5
     48a:	ea df       	rcall	.-44     	; 0x460 <CAN_error>
     48c:	c0 ff       	sbrs	r28, 0
     48e:	03 c0       	rjmp	.+6      	; 0x496 <CAN_int_vect+0x16>
     490:	81 e0       	ldi	r24, 0x01	; 1
     492:	80 93 c2 02 	sts	0x02C2, r24
     496:	40 e0       	ldi	r20, 0x00	; 0
     498:	6f ef       	ldi	r22, 0xFF	; 255
     49a:	8c e2       	ldi	r24, 0x2C	; 44
     49c:	93 d0       	rcall	.+294    	; 0x5c4 <MCP2515_bit_modify>
     49e:	cf 91       	pop	r28
     4a0:	08 95       	ret

000004a2 <__vector_3>:
     4a2:	1f 92       	push	r1
     4a4:	0f 92       	push	r0
     4a6:	0f b6       	in	r0, 0x3f	; 63
     4a8:	0f 92       	push	r0
     4aa:	11 24       	eor	r1, r1
     4ac:	0b b6       	in	r0, 0x3b	; 59
     4ae:	0f 92       	push	r0
     4b0:	2f 93       	push	r18
     4b2:	3f 93       	push	r19
     4b4:	4f 93       	push	r20
     4b6:	5f 93       	push	r21
     4b8:	6f 93       	push	r22
     4ba:	7f 93       	push	r23
     4bc:	8f 93       	push	r24
     4be:	9f 93       	push	r25
     4c0:	af 93       	push	r26
     4c2:	bf 93       	push	r27
     4c4:	ef 93       	push	r30
     4c6:	ff 93       	push	r31
     4c8:	db df       	rcall	.-74     	; 0x480 <CAN_int_vect>
     4ca:	ff 91       	pop	r31
     4cc:	ef 91       	pop	r30
     4ce:	bf 91       	pop	r27
     4d0:	af 91       	pop	r26
     4d2:	9f 91       	pop	r25
     4d4:	8f 91       	pop	r24
     4d6:	7f 91       	pop	r23
     4d8:	6f 91       	pop	r22
     4da:	5f 91       	pop	r21
     4dc:	4f 91       	pop	r20
     4de:	3f 91       	pop	r19
     4e0:	2f 91       	pop	r18
     4e2:	0f 90       	pop	r0
     4e4:	0b be       	out	0x3b, r0	; 59
     4e6:	0f 90       	pop	r0
     4e8:	0f be       	out	0x3f, r0	; 63
     4ea:	0f 90       	pop	r0
     4ec:	1f 90       	pop	r1
     4ee:	18 95       	reti

000004f0 <DAC_init>:
     4f0:	d5 c1       	rjmp	.+938    	; 0x89c <TWI_Master_Initialise>
     4f2:	08 95       	ret

000004f4 <DAC_write>:
     4f4:	cf 93       	push	r28
     4f6:	df 93       	push	r29
     4f8:	00 d0       	rcall	.+0      	; 0x4fa <DAC_write+0x6>
     4fa:	cd b7       	in	r28, 0x3d	; 61
     4fc:	de b7       	in	r29, 0x3e	; 62
     4fe:	90 e5       	ldi	r25, 0x50	; 80
     500:	99 83       	std	Y+1, r25	; 0x01
     502:	1a 82       	std	Y+2, r1	; 0x02
     504:	8b 83       	std	Y+3, r24	; 0x03
     506:	63 e0       	ldi	r22, 0x03	; 3
     508:	ce 01       	movw	r24, r28
     50a:	01 96       	adiw	r24, 0x01	; 1
     50c:	d1 d1       	rcall	.+930    	; 0x8b0 <TWI_Start_Transceiver_With_Data>
     50e:	0f 90       	pop	r0
     510:	0f 90       	pop	r0
     512:	0f 90       	pop	r0
     514:	df 91       	pop	r29
     516:	cf 91       	pop	r28
     518:	08 95       	ret

0000051a <IR_init>:
#include "adc.h"

const uint8_t threshold = 0x0F;

void IR_init() {
	ADC_init();
     51a:	b6 ce       	rjmp	.-660    	; 0x288 <ADC_init>
     51c:	08 95       	ret

0000051e <IR_read>:
}

uint8_t IR_read() {
	// Using a 3rd order moving average filter
	static uint8_t filter[3];
	uint8_t value = ADC_read(IR_CHANNEL);
     51e:	80 e0       	ldi	r24, 0x00	; 0
     520:	bc de       	rcall	.-648    	; 0x29a <ADC_read>
	uint8_t avg_value = value;
	for(int i = 1; i < 3; i++) {
		avg_value += filter[i];
     522:	a9 eb       	ldi	r26, 0xB9	; 185
     524:	b2 e0       	ldi	r27, 0x02	; 2
		filter[i - 1] = filter[i];
     526:	9c 91       	ld	r25, X
     528:	90 93 b8 02 	sts	0x02B8, r25
	// Using a 3rd order moving average filter
	static uint8_t filter[3];
	uint8_t value = ADC_read(IR_CHANNEL);
	uint8_t avg_value = value;
	for(int i = 1; i < 3; i++) {
		avg_value += filter[i];
     52c:	ea eb       	ldi	r30, 0xBA	; 186
     52e:	f2 e0       	ldi	r31, 0x02	; 2
		filter[i - 1] = filter[i];
     530:	90 81       	ld	r25, Z
     532:	9c 93       	st	X, r25
	}
	avg_value /= 3;
	filter[2] = value;
     534:	80 83       	st	Z, r24

	return (ADC_read(IR_CHANNEL) < threshold);
     536:	80 e0       	ldi	r24, 0x00	; 0
     538:	b0 de       	rcall	.-672    	; 0x29a <ADC_read>
     53a:	91 e0       	ldi	r25, 0x01	; 1
     53c:	8f 30       	cpi	r24, 0x0F	; 15
     53e:	08 f0       	brcs	.+2      	; 0x542 <IR_read+0x24>
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	89 2f       	mov	r24, r25
     544:	08 95       	ret

00000546 <MCP2515_read_data>:
     546:	cf 93       	push	r28
     548:	c8 2f       	mov	r28, r24
     54a:	f8 94       	cli
     54c:	a3 d1       	rcall	.+838    	; 0x894 <SPI_SS_low>
     54e:	83 e0       	ldi	r24, 0x03	; 3
     550:	9b d1       	rcall	.+822    	; 0x888 <SPI_transcieve>
     552:	8c 2f       	mov	r24, r28
     554:	99 d1       	rcall	.+818    	; 0x888 <SPI_transcieve>
     556:	80 e0       	ldi	r24, 0x00	; 0
     558:	97 d1       	rcall	.+814    	; 0x888 <SPI_transcieve>
     55a:	c8 2f       	mov	r28, r24
     55c:	9d d1       	rcall	.+826    	; 0x898 <SPI_SS_high>
     55e:	78 94       	sei
     560:	8c 2f       	mov	r24, r28
     562:	cf 91       	pop	r28
     564:	08 95       	ret

00000566 <MCP2515_write_data>:
     566:	ef 92       	push	r14
     568:	ff 92       	push	r15
     56a:	0f 93       	push	r16
     56c:	1f 93       	push	r17
     56e:	cf 93       	push	r28
     570:	df 93       	push	r29
     572:	c8 2f       	mov	r28, r24
     574:	7b 01       	movw	r14, r22
     576:	8a 01       	movw	r16, r20
     578:	f8 94       	cli
     57a:	8c d1       	rcall	.+792    	; 0x894 <SPI_SS_low>
     57c:	82 e0       	ldi	r24, 0x02	; 2
     57e:	84 d1       	rcall	.+776    	; 0x888 <SPI_transcieve>
     580:	8c 2f       	mov	r24, r28
     582:	82 d1       	rcall	.+772    	; 0x888 <SPI_transcieve>
     584:	10 16       	cp	r1, r16
     586:	11 06       	cpc	r1, r17
     588:	44 f4       	brge	.+16     	; 0x59a <MCP2515_write_data+0x34>
     58a:	e7 01       	movw	r28, r14
     58c:	0e 0d       	add	r16, r14
     58e:	1f 1d       	adc	r17, r15
     590:	89 91       	ld	r24, Y+
     592:	7a d1       	rcall	.+756    	; 0x888 <SPI_transcieve>
     594:	c0 17       	cp	r28, r16
     596:	d1 07       	cpc	r29, r17
     598:	d9 f7       	brne	.-10     	; 0x590 <MCP2515_write_data+0x2a>
     59a:	7e d1       	rcall	.+764    	; 0x898 <SPI_SS_high>
     59c:	78 94       	sei
     59e:	df 91       	pop	r29
     5a0:	cf 91       	pop	r28
     5a2:	1f 91       	pop	r17
     5a4:	0f 91       	pop	r16
     5a6:	ff 90       	pop	r15
     5a8:	ef 90       	pop	r14
     5aa:	08 95       	ret

000005ac <MCP2515_request_to_send>:
     5ac:	cf 93       	push	r28
     5ae:	c8 2f       	mov	r28, r24
     5b0:	f8 94       	cli
     5b2:	70 d1       	rcall	.+736    	; 0x894 <SPI_SS_low>
     5b4:	8c 2f       	mov	r24, r28
     5b6:	87 70       	andi	r24, 0x07	; 7
     5b8:	80 68       	ori	r24, 0x80	; 128
     5ba:	66 d1       	rcall	.+716    	; 0x888 <SPI_transcieve>
     5bc:	6d d1       	rcall	.+730    	; 0x898 <SPI_SS_high>
     5be:	78 94       	sei
     5c0:	cf 91       	pop	r28
     5c2:	08 95       	ret

000005c4 <MCP2515_bit_modify>:
     5c4:	1f 93       	push	r17
     5c6:	cf 93       	push	r28
     5c8:	df 93       	push	r29
     5ca:	18 2f       	mov	r17, r24
     5cc:	d6 2f       	mov	r29, r22
     5ce:	c4 2f       	mov	r28, r20
     5d0:	f8 94       	cli
     5d2:	60 d1       	rcall	.+704    	; 0x894 <SPI_SS_low>
     5d4:	85 e0       	ldi	r24, 0x05	; 5
     5d6:	58 d1       	rcall	.+688    	; 0x888 <SPI_transcieve>
     5d8:	81 2f       	mov	r24, r17
     5da:	56 d1       	rcall	.+684    	; 0x888 <SPI_transcieve>
     5dc:	8d 2f       	mov	r24, r29
     5de:	54 d1       	rcall	.+680    	; 0x888 <SPI_transcieve>
     5e0:	8c 2f       	mov	r24, r28
     5e2:	52 d1       	rcall	.+676    	; 0x888 <SPI_transcieve>
     5e4:	59 d1       	rcall	.+690    	; 0x898 <SPI_SS_high>
     5e6:	78 94       	sei
     5e8:	df 91       	pop	r29
     5ea:	cf 91       	pop	r28
     5ec:	1f 91       	pop	r17
     5ee:	08 95       	ret

000005f0 <MCP2515_reset>:
     5f0:	f8 94       	cli
     5f2:	50 d1       	rcall	.+672    	; 0x894 <SPI_SS_low>
     5f4:	80 ec       	ldi	r24, 0xC0	; 192
     5f6:	48 d1       	rcall	.+656    	; 0x888 <SPI_transcieve>
     5f8:	4f d1       	rcall	.+670    	; 0x898 <SPI_SS_high>
     5fa:	78 94       	sei
     5fc:	08 95       	ret

000005fe <MCP2515_init>:
     5fe:	cf 93       	push	r28
     600:	df 93       	push	r29
     602:	1f 92       	push	r1
     604:	cd b7       	in	r28, 0x3d	; 61
     606:	de b7       	in	r29, 0x3e	; 62
     608:	38 d1       	rcall	.+624    	; 0x87a <SPI_master_init>
     60a:	f2 df       	rcall	.-28     	; 0x5f0 <MCP2515_reset>
     60c:	8f e3       	ldi	r24, 0x3F	; 63
     60e:	9c e9       	ldi	r25, 0x9C	; 156
     610:	01 97       	sbiw	r24, 0x01	; 1
     612:	f1 f7       	brne	.-4      	; 0x610 <MCP2515_init+0x12>
     614:	00 c0       	rjmp	.+0      	; 0x616 <MCP2515_init+0x18>
     616:	00 00       	nop
     618:	8e e0       	ldi	r24, 0x0E	; 14
     61a:	95 df       	rcall	.-214    	; 0x546 <MCP2515_read_data>
     61c:	89 83       	std	Y+1, r24	; 0x01
     61e:	89 81       	ldd	r24, Y+1	; 0x01
     620:	80 7e       	andi	r24, 0xE0	; 224
     622:	80 38       	cpi	r24, 0x80	; 128
     624:	29 f0       	breq	.+10     	; 0x630 <MCP2515_init+0x32>
     626:	86 e8       	ldi	r24, 0x86	; 134
     628:	92 e0       	ldi	r25, 0x02	; 2
     62a:	82 d4       	rcall	.+2308   	; 0xf30 <puts>
     62c:	81 e0       	ldi	r24, 0x01	; 1
     62e:	01 c0       	rjmp	.+2      	; 0x632 <MCP2515_init+0x34>
     630:	80 e0       	ldi	r24, 0x00	; 0
     632:	0f 90       	pop	r0
     634:	df 91       	pop	r29
     636:	cf 91       	pop	r28
     638:	08 95       	ret

0000063a <MOTOR_set_velocity>:
	MOTOR_stop();
	MOTOR_set_dir_right(0);
	MOTOR_set_velocity(100);
	_delay_ms(500);
	MOTOR_stop();
	MOTOR_set_dir_right(1);
     63a:	5c cf       	rjmp	.-328    	; 0x4f4 <DAC_write>
     63c:	08 95       	ret

0000063e <MOTOR_set_dir_right>:
     63e:	81 11       	cpse	r24, r1
     640:	06 c0       	rjmp	.+12     	; 0x64e <MOTOR_set_dir_right+0x10>
     642:	e2 e0       	ldi	r30, 0x02	; 2
     644:	f1 e0       	ldi	r31, 0x01	; 1
     646:	80 81       	ld	r24, Z
     648:	8d 7f       	andi	r24, 0xFD	; 253
     64a:	80 83       	st	Z, r24
     64c:	08 95       	ret
     64e:	e2 e0       	ldi	r30, 0x02	; 2
     650:	f1 e0       	ldi	r31, 0x01	; 1
     652:	80 81       	ld	r24, Z
     654:	82 60       	ori	r24, 0x02	; 2
     656:	80 83       	st	Z, r24
     658:	08 95       	ret

0000065a <MOTOR_stop>:
     65a:	80 e0       	ldi	r24, 0x00	; 0
     65c:	4b cf       	rjmp	.-362    	; 0x4f4 <DAC_write>
     65e:	08 95       	ret

00000660 <MOTOR_init>:
     660:	47 df       	rcall	.-370    	; 0x4f0 <DAC_init>
     662:	e1 e0       	ldi	r30, 0x01	; 1
     664:	f1 e0       	ldi	r31, 0x01	; 1
     666:	80 81       	ld	r24, Z
     668:	8a 67       	ori	r24, 0x7A	; 122
     66a:	80 83       	st	Z, r24
     66c:	10 92 07 01 	sts	0x0107, r1
     670:	e2 e0       	ldi	r30, 0x02	; 2
     672:	f1 e0       	ldi	r31, 0x01	; 1
     674:	80 81       	ld	r24, Z
     676:	82 61       	ori	r24, 0x12	; 18
     678:	80 83       	st	Z, r24
     67a:	80 81       	ld	r24, Z
     67c:	8f 7b       	andi	r24, 0xBF	; 191
     67e:	80 83       	st	Z, r24
     680:	2f ef       	ldi	r18, 0xFF	; 255
     682:	89 ef       	ldi	r24, 0xF9	; 249
     684:	90 e0       	ldi	r25, 0x00	; 0
     686:	21 50       	subi	r18, 0x01	; 1
     688:	80 40       	sbci	r24, 0x00	; 0
     68a:	90 40       	sbci	r25, 0x00	; 0
     68c:	e1 f7       	brne	.-8      	; 0x686 <MOTOR_init+0x26>
     68e:	00 c0       	rjmp	.+0      	; 0x690 <MOTOR_init+0x30>
     690:	00 00       	nop
     692:	80 81       	ld	r24, Z
     694:	80 64       	ori	r24, 0x40	; 64
     696:	80 83       	st	Z, r24
     698:	e0 cf       	rjmp	.-64     	; 0x65a <MOTOR_stop>
     69a:	08 95       	ret

0000069c <reverse_byte>:

void MOTOR_stop() {
	MOTOR_set_velocity(0);
}

uint8_t reverse_byte(uint8_t byte) {
     69c:	cf 93       	push	r28
     69e:	df 93       	push	r29
     6a0:	68 2f       	mov	r22, r24
	uint8_t reversed_byte = 0;
	for(int i = 0; i < 8; i++) {
     6a2:	20 e0       	ldi	r18, 0x00	; 0
     6a4:	30 e0       	ldi	r19, 0x00	; 0
void MOTOR_stop() {
	MOTOR_set_velocity(0);
}

uint8_t reverse_byte(uint8_t byte) {
	uint8_t reversed_byte = 0;
     6a6:	80 e0       	ldi	r24, 0x00	; 0
	for(int i = 0; i < 8; i++) {
		if(byte & (1 << i)) {
     6a8:	70 e0       	ldi	r23, 0x00	; 0
     6aa:	a7 e0       	ldi	r26, 0x07	; 7
     6ac:	b0 e0       	ldi	r27, 0x00	; 0
			reversed_byte |= (1 << (7 - i));
     6ae:	e1 e0       	ldi	r30, 0x01	; 1
     6b0:	f0 e0       	ldi	r31, 0x00	; 0
}

uint8_t reverse_byte(uint8_t byte) {
	uint8_t reversed_byte = 0;
	for(int i = 0; i < 8; i++) {
		if(byte & (1 << i)) {
     6b2:	ab 01       	movw	r20, r22
     6b4:	02 2e       	mov	r0, r18
     6b6:	02 c0       	rjmp	.+4      	; 0x6bc <reverse_byte+0x20>
     6b8:	55 95       	asr	r21
     6ba:	47 95       	ror	r20
     6bc:	0a 94       	dec	r0
     6be:	e2 f7       	brpl	.-8      	; 0x6b8 <reverse_byte+0x1c>
     6c0:	40 ff       	sbrs	r20, 0
     6c2:	0a c0       	rjmp	.+20     	; 0x6d8 <reverse_byte+0x3c>
     6c4:	ad 01       	movw	r20, r26
     6c6:	42 1b       	sub	r20, r18
     6c8:	53 0b       	sbc	r21, r19
			reversed_byte |= (1 << (7 - i));
     6ca:	ef 01       	movw	r28, r30
     6cc:	02 c0       	rjmp	.+4      	; 0x6d2 <reverse_byte+0x36>
     6ce:	cc 0f       	add	r28, r28
     6d0:	dd 1f       	adc	r29, r29
     6d2:	4a 95       	dec	r20
     6d4:	e2 f7       	brpl	.-8      	; 0x6ce <reverse_byte+0x32>
     6d6:	8c 2b       	or	r24, r28
	MOTOR_set_velocity(0);
}

uint8_t reverse_byte(uint8_t byte) {
	uint8_t reversed_byte = 0;
	for(int i = 0; i < 8; i++) {
     6d8:	2f 5f       	subi	r18, 0xFF	; 255
     6da:	3f 4f       	sbci	r19, 0xFF	; 255
     6dc:	28 30       	cpi	r18, 0x08	; 8
     6de:	31 05       	cpc	r19, r1
     6e0:	41 f7       	brne	.-48     	; 0x6b2 <reverse_byte+0x16>
		if(byte & (1 << i)) {
			reversed_byte |= (1 << (7 - i));
		}
	}
	return reversed_byte;
}
     6e2:	df 91       	pop	r29
     6e4:	cf 91       	pop	r28
     6e6:	08 95       	ret

000006e8 <MOTOR_read_encoder>:

int16_t MOTOR_read_encoder() {
     6e8:	cf 93       	push	r28
     6ea:	df 93       	push	r29
     6ec:	1f 92       	push	r1
     6ee:	1f 92       	push	r1
     6f0:	cd b7       	in	r28, 0x3d	; 61
     6f2:	de b7       	in	r29, 0x3e	; 62
	volatile int16_t encoder_value = 0;
     6f4:	1a 82       	std	Y+2, r1	; 0x02
     6f6:	19 82       	std	Y+1, r1	; 0x01

	MJ1_PORT &= ~(1 << OE); // Set !OE low to enable output of encoder
     6f8:	e2 e0       	ldi	r30, 0x02	; 2
     6fa:	f1 e0       	ldi	r31, 0x01	; 1
     6fc:	80 81       	ld	r24, Z
     6fe:	8f 7d       	andi	r24, 0xDF	; 223
     700:	80 83       	st	Z, r24

	MJ1_PORT |= (1 << SEL); // Set SEL low to get high byte
     702:	80 81       	ld	r24, Z
     704:	88 60       	ori	r24, 0x08	; 8
     706:	80 83       	st	Z, r24
     708:	2f ef       	ldi	r18, 0xFF	; 255
     70a:	89 ef       	ldi	r24, 0xF9	; 249
     70c:	90 e0       	ldi	r25, 0x00	; 0
     70e:	21 50       	subi	r18, 0x01	; 1
     710:	80 40       	sbci	r24, 0x00	; 0
     712:	90 40       	sbci	r25, 0x00	; 0
     714:	e1 f7       	brne	.-8      	; 0x70e <MOTOR_read_encoder+0x26>
     716:	00 c0       	rjmp	.+0      	; 0x718 <MOTOR_read_encoder+0x30>
     718:	00 00       	nop
	_delay_ms(20);
	encoder_value |= (reverse_byte(MJ2_DATA) << 8);
     71a:	80 91 06 01 	lds	r24, 0x0106
     71e:	be df       	rcall	.-132    	; 0x69c <reverse_byte>
     720:	29 81       	ldd	r18, Y+1	; 0x01
     722:	3a 81       	ldd	r19, Y+2	; 0x02
     724:	38 2b       	or	r19, r24
     726:	3a 83       	std	Y+2, r19	; 0x02
     728:	29 83       	std	Y+1, r18	; 0x01

	MJ1_PORT &= ~(1 << SEL); // Set SEL high to get high byte
     72a:	e2 e0       	ldi	r30, 0x02	; 2
     72c:	f1 e0       	ldi	r31, 0x01	; 1
     72e:	80 81       	ld	r24, Z
     730:	87 7f       	andi	r24, 0xF7	; 247
     732:	80 83       	st	Z, r24
     734:	2f ef       	ldi	r18, 0xFF	; 255
     736:	89 ef       	ldi	r24, 0xF9	; 249
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	21 50       	subi	r18, 0x01	; 1
     73c:	80 40       	sbci	r24, 0x00	; 0
     73e:	90 40       	sbci	r25, 0x00	; 0
     740:	e1 f7       	brne	.-8      	; 0x73a <MOTOR_read_encoder+0x52>
     742:	00 c0       	rjmp	.+0      	; 0x744 <MOTOR_read_encoder+0x5c>
     744:	00 00       	nop
	_delay_ms(20);
	encoder_value |= reverse_byte(MJ2_DATA);
     746:	80 91 06 01 	lds	r24, 0x0106
     74a:	a8 df       	rcall	.-176    	; 0x69c <reverse_byte>
     74c:	29 81       	ldd	r18, Y+1	; 0x01
     74e:	3a 81       	ldd	r19, Y+2	; 0x02
     750:	28 2b       	or	r18, r24
     752:	3a 83       	std	Y+2, r19	; 0x02
     754:	29 83       	std	Y+1, r18	; 0x01

	MJ1_PORT &= ~(1 << RST); // Toggle !RST to reset encoder
     756:	e2 e0       	ldi	r30, 0x02	; 2
     758:	f1 e0       	ldi	r31, 0x01	; 1
     75a:	80 81       	ld	r24, Z
     75c:	8f 7b       	andi	r24, 0xBF	; 191
     75e:	80 83       	st	Z, r24
     760:	2f ef       	ldi	r18, 0xFF	; 255
     762:	89 ef       	ldi	r24, 0xF9	; 249
     764:	90 e0       	ldi	r25, 0x00	; 0
     766:	21 50       	subi	r18, 0x01	; 1
     768:	80 40       	sbci	r24, 0x00	; 0
     76a:	90 40       	sbci	r25, 0x00	; 0
     76c:	e1 f7       	brne	.-8      	; 0x766 <MOTOR_read_encoder+0x7e>
     76e:	00 c0       	rjmp	.+0      	; 0x770 <MOTOR_read_encoder+0x88>
     770:	00 00       	nop
	_delay_ms(20);
	MJ1_PORT |= (1 << RST);
     772:	80 81       	ld	r24, Z
     774:	80 64       	ori	r24, 0x40	; 64
     776:	80 83       	st	Z, r24

	MJ1_PORT |= (1 << OE); // Set !OE high to disable output of encoder
     778:	80 81       	ld	r24, Z
     77a:	80 62       	ori	r24, 0x20	; 32
     77c:	80 83       	st	Z, r24

	return encoder_value;
     77e:	89 81       	ldd	r24, Y+1	; 0x01
     780:	9a 81       	ldd	r25, Y+2	; 0x02
     782:	0f 90       	pop	r0
     784:	0f 90       	pop	r0
     786:	df 91       	pop	r29
     788:	cf 91       	pop	r28
     78a:	08 95       	ret

0000078c <PWM_set_period>:
     78c:	a0 e8       	ldi	r26, 0x80	; 128
     78e:	b0 e0       	ldi	r27, 0x00	; 0
     790:	22 e0       	ldi	r18, 0x02	; 2
     792:	2c 93       	st	X, r18
     794:	e1 e8       	ldi	r30, 0x81	; 129
     796:	f0 e0       	ldi	r31, 0x00	; 0
     798:	28 e1       	ldi	r18, 0x18	; 24
     79a:	20 83       	st	Z, r18
     79c:	2c 91       	ld	r18, X
     79e:	20 68       	ori	r18, 0x80	; 128
     7a0:	2c 93       	st	X, r18
     7a2:	20 81       	ld	r18, Z
     7a4:	23 60       	ori	r18, 0x03	; 3
     7a6:	20 83       	st	Z, r18
     7a8:	20 e0       	ldi	r18, 0x00	; 0
     7aa:	30 e0       	ldi	r19, 0x00	; 0
     7ac:	4a e7       	ldi	r20, 0x7A	; 122
     7ae:	53 e4       	ldi	r21, 0x43	; 67
     7b0:	fb d2       	rcall	.+1526   	; 0xda8 <__mulsf3>
     7b2:	18 d2       	rcall	.+1072   	; 0xbe4 <__fixunssfsi>
     7b4:	70 93 87 00 	sts	0x0087, r23
     7b8:	60 93 86 00 	sts	0x0086, r22
     7bc:	25 9a       	sbi	0x04, 5	; 4
     7be:	08 95       	ret

000007c0 <PWM_set_pulse_width>:
     7c0:	20 e0       	ldi	r18, 0x00	; 0
     7c2:	30 e0       	ldi	r19, 0x00	; 0
     7c4:	4a e7       	ldi	r20, 0x7A	; 122
     7c6:	53 e4       	ldi	r21, 0x43	; 67
     7c8:	ef d2       	rcall	.+1502   	; 0xda8 <__mulsf3>
     7ca:	0c d2       	rcall	.+1048   	; 0xbe4 <__fixunssfsi>
     7cc:	70 93 89 00 	sts	0x0089, r23
     7d0:	60 93 88 00 	sts	0x0088, r22
     7d4:	08 95       	ret

000007d6 <SERVO_init>:

const float min = 0.9;
const float max = 2.1;

void SERVO_init() {
	PWM_set_period(20.0f);
     7d6:	60 e0       	ldi	r22, 0x00	; 0
     7d8:	70 e0       	ldi	r23, 0x00	; 0
     7da:	80 ea       	ldi	r24, 0xA0	; 160
     7dc:	91 e4       	ldi	r25, 0x41	; 65
     7de:	d6 df       	rcall	.-84     	; 0x78c <PWM_set_period>
		pulse_width = max;
	}
	if(pulse_width < min) {
		pulse_width = min;
	}
	PWM_set_pulse_width(pulse_width);
     7e0:	67 ed       	ldi	r22, 0xD7	; 215
     7e2:	73 ea       	ldi	r23, 0xA3	; 163
     7e4:	80 ec       	ldi	r24, 0xC0	; 192
     7e6:	9f e3       	ldi	r25, 0x3F	; 63
     7e8:	eb cf       	rjmp	.-42     	; 0x7c0 <PWM_set_pulse_width>
     7ea:	08 95       	ret

000007ec <SERVO_write>:
void SERVO_init() {
	PWM_set_period(20.0f);
	SERVO_write((max + min)/2);
}

void SERVO_write(int8_t value) {
     7ec:	cf 92       	push	r12
     7ee:	df 92       	push	r13
     7f0:	ef 92       	push	r14
     7f2:	ff 92       	push	r15
	float pulse_width = value/100.0f * 0.5f + (max + min)/2;
     7f4:	68 2f       	mov	r22, r24
     7f6:	77 27       	eor	r23, r23
     7f8:	67 fd       	sbrc	r22, 7
     7fa:	70 95       	com	r23
     7fc:	87 2f       	mov	r24, r23
     7fe:	97 2f       	mov	r25, r23
     800:	1f d2       	rcall	.+1086   	; 0xc40 <__floatsisf>
     802:	20 e0       	ldi	r18, 0x00	; 0
     804:	30 e0       	ldi	r19, 0x00	; 0
     806:	48 ec       	ldi	r20, 0xC8	; 200
     808:	52 e4       	ldi	r21, 0x42	; 66
     80a:	84 d1       	rcall	.+776    	; 0xb14 <__divsf3>
     80c:	20 e0       	ldi	r18, 0x00	; 0
     80e:	30 e0       	ldi	r19, 0x00	; 0
     810:	40 e0       	ldi	r20, 0x00	; 0
     812:	5f e3       	ldi	r21, 0x3F	; 63
     814:	c9 d2       	rcall	.+1426   	; 0xda8 <__mulsf3>
     816:	20 e0       	ldi	r18, 0x00	; 0
     818:	30 e0       	ldi	r19, 0x00	; 0
     81a:	40 ec       	ldi	r20, 0xC0	; 192
     81c:	5f e3       	ldi	r21, 0x3F	; 63
     81e:	12 d1       	rcall	.+548    	; 0xa44 <__addsf3>
     820:	6b 01       	movw	r12, r22
     822:	7c 01       	movw	r14, r24
	if(pulse_width > max) {
     824:	26 e6       	ldi	r18, 0x66	; 102
     826:	36 e6       	ldi	r19, 0x66	; 102
     828:	46 e0       	ldi	r20, 0x06	; 6
     82a:	50 e4       	ldi	r21, 0x40	; 64
     82c:	b9 d2       	rcall	.+1394   	; 0xda0 <__gesf2>
     82e:	18 16       	cp	r1, r24
     830:	54 f0       	brlt	.+20     	; 0x846 <SERVO_write+0x5a>
		pulse_width = max;
	}
	if(pulse_width < min) {
     832:	26 e6       	ldi	r18, 0x66	; 102
     834:	36 e6       	ldi	r19, 0x66	; 102
     836:	46 e6       	ldi	r20, 0x66	; 102
     838:	5f e3       	ldi	r21, 0x3F	; 63
     83a:	c7 01       	movw	r24, r14
     83c:	b6 01       	movw	r22, r12
     83e:	66 d1       	rcall	.+716    	; 0xb0c <__cmpsf2>
     840:	88 23       	and	r24, r24
     842:	5c f0       	brlt	.+22     	; 0x85a <SERVO_write+0x6e>
     844:	12 c0       	rjmp	.+36     	; 0x86a <SERVO_write+0x7e>
}

void SERVO_write(int8_t value) {
	float pulse_width = value/100.0f * 0.5f + (max + min)/2;
	if(pulse_width > max) {
		pulse_width = max;
     846:	0f 2e       	mov	r0, r31
     848:	f6 e6       	ldi	r31, 0x66	; 102
     84a:	cf 2e       	mov	r12, r31
     84c:	dc 2c       	mov	r13, r12
     84e:	f6 e0       	ldi	r31, 0x06	; 6
     850:	ef 2e       	mov	r14, r31
     852:	f0 e4       	ldi	r31, 0x40	; 64
     854:	ff 2e       	mov	r15, r31
     856:	f0 2d       	mov	r31, r0
     858:	08 c0       	rjmp	.+16     	; 0x86a <SERVO_write+0x7e>
	}
	if(pulse_width < min) {
		pulse_width = min;
     85a:	0f 2e       	mov	r0, r31
     85c:	f6 e6       	ldi	r31, 0x66	; 102
     85e:	cf 2e       	mov	r12, r31
     860:	dc 2c       	mov	r13, r12
     862:	ec 2c       	mov	r14, r12
     864:	ff e3       	ldi	r31, 0x3F	; 63
     866:	ff 2e       	mov	r15, r31
     868:	f0 2d       	mov	r31, r0
	}
	PWM_set_pulse_width(pulse_width);
     86a:	c7 01       	movw	r24, r14
     86c:	b6 01       	movw	r22, r12
     86e:	a8 df       	rcall	.-176    	; 0x7c0 <PWM_set_pulse_width>
     870:	ff 90       	pop	r15
     872:	ef 90       	pop	r14
     874:	df 90       	pop	r13
     876:	cf 90       	pop	r12
     878:	08 95       	ret

0000087a <SPI_master_init>:
     87a:	87 e8       	ldi	r24, 0x87	; 135
     87c:	84 b9       	out	0x04, r24	; 4
     87e:	28 9a       	sbi	0x05, 0	; 5
     880:	8c b5       	in	r24, 0x2c	; 44
     882:	81 65       	ori	r24, 0x51	; 81
     884:	8c bd       	out	0x2c, r24	; 44
     886:	08 95       	ret

00000888 <SPI_transcieve>:
     888:	8e bd       	out	0x2e, r24	; 46
     88a:	0d b4       	in	r0, 0x2d	; 45
     88c:	07 fe       	sbrs	r0, 7
     88e:	fd cf       	rjmp	.-6      	; 0x88a <SPI_transcieve+0x2>
     890:	8e b5       	in	r24, 0x2e	; 46
     892:	08 95       	ret

00000894 <SPI_SS_low>:
     894:	2f 98       	cbi	0x05, 7	; 5
     896:	08 95       	ret

00000898 <SPI_SS_high>:
     898:	2f 9a       	sbi	0x05, 7	; 5
     89a:	08 95       	ret

0000089c <TWI_Master_Initialise>:
     89c:	8c e0       	ldi	r24, 0x0C	; 12
     89e:	80 93 b8 00 	sts	0x00B8, r24
     8a2:	8f ef       	ldi	r24, 0xFF	; 255
     8a4:	80 93 bb 00 	sts	0x00BB, r24
     8a8:	84 e0       	ldi	r24, 0x04	; 4
     8aa:	80 93 bc 00 	sts	0x00BC, r24
     8ae:	08 95       	ret

000008b0 <TWI_Start_Transceiver_With_Data>:
     8b0:	ec eb       	ldi	r30, 0xBC	; 188
     8b2:	f0 e0       	ldi	r31, 0x00	; 0
     8b4:	20 81       	ld	r18, Z
     8b6:	20 fd       	sbrc	r18, 0
     8b8:	fd cf       	rjmp	.-6      	; 0x8b4 <TWI_Start_Transceiver_With_Data+0x4>
     8ba:	60 93 bd 02 	sts	0x02BD, r22
     8be:	fc 01       	movw	r30, r24
     8c0:	20 81       	ld	r18, Z
     8c2:	20 93 be 02 	sts	0x02BE, r18
     8c6:	20 fd       	sbrc	r18, 0
     8c8:	0c c0       	rjmp	.+24     	; 0x8e2 <TWI_Start_Transceiver_With_Data+0x32>
     8ca:	62 30       	cpi	r22, 0x02	; 2
     8cc:	50 f0       	brcs	.+20     	; 0x8e2 <TWI_Start_Transceiver_With_Data+0x32>
     8ce:	dc 01       	movw	r26, r24
     8d0:	11 96       	adiw	r26, 0x01	; 1
     8d2:	ef eb       	ldi	r30, 0xBF	; 191
     8d4:	f2 e0       	ldi	r31, 0x02	; 2
     8d6:	81 e0       	ldi	r24, 0x01	; 1
     8d8:	9d 91       	ld	r25, X+
     8da:	91 93       	st	Z+, r25
     8dc:	8f 5f       	subi	r24, 0xFF	; 255
     8de:	86 13       	cpse	r24, r22
     8e0:	fb cf       	rjmp	.-10     	; 0x8d8 <TWI_Start_Transceiver_With_Data+0x28>
     8e2:	10 92 bc 02 	sts	0x02BC, r1
     8e6:	88 ef       	ldi	r24, 0xF8	; 248
     8e8:	80 93 11 02 	sts	0x0211, r24
     8ec:	85 ea       	ldi	r24, 0xA5	; 165
     8ee:	80 93 bc 00 	sts	0x00BC, r24
     8f2:	08 95       	ret

000008f4 <__vector_39>:
     8f4:	1f 92       	push	r1
     8f6:	0f 92       	push	r0
     8f8:	0f b6       	in	r0, 0x3f	; 63
     8fa:	0f 92       	push	r0
     8fc:	11 24       	eor	r1, r1
     8fe:	0b b6       	in	r0, 0x3b	; 59
     900:	0f 92       	push	r0
     902:	2f 93       	push	r18
     904:	3f 93       	push	r19
     906:	8f 93       	push	r24
     908:	9f 93       	push	r25
     90a:	af 93       	push	r26
     90c:	bf 93       	push	r27
     90e:	ef 93       	push	r30
     910:	ff 93       	push	r31
     912:	80 91 b9 00 	lds	r24, 0x00B9
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	fc 01       	movw	r30, r24
     91a:	38 97       	sbiw	r30, 0x08	; 8
     91c:	e1 35       	cpi	r30, 0x51	; 81
     91e:	f1 05       	cpc	r31, r1
     920:	08 f0       	brcs	.+2      	; 0x924 <__vector_39+0x30>
     922:	55 c0       	rjmp	.+170    	; 0x9ce <__vector_39+0xda>
     924:	ee 58       	subi	r30, 0x8E	; 142
     926:	ff 4f       	sbci	r31, 0xFF	; 255
     928:	a2 c2       	rjmp	.+1348   	; 0xe6e <__tablejump2__>
     92a:	10 92 bb 02 	sts	0x02BB, r1
     92e:	e0 91 bb 02 	lds	r30, 0x02BB
     932:	80 91 bd 02 	lds	r24, 0x02BD
     936:	e8 17       	cp	r30, r24
     938:	70 f4       	brcc	.+28     	; 0x956 <__vector_39+0x62>
     93a:	81 e0       	ldi	r24, 0x01	; 1
     93c:	8e 0f       	add	r24, r30
     93e:	80 93 bb 02 	sts	0x02BB, r24
     942:	f0 e0       	ldi	r31, 0x00	; 0
     944:	e2 54       	subi	r30, 0x42	; 66
     946:	fd 4f       	sbci	r31, 0xFD	; 253
     948:	80 81       	ld	r24, Z
     94a:	80 93 bb 00 	sts	0x00BB, r24
     94e:	85 e8       	ldi	r24, 0x85	; 133
     950:	80 93 bc 00 	sts	0x00BC, r24
     954:	43 c0       	rjmp	.+134    	; 0x9dc <__vector_39+0xe8>
     956:	80 91 bc 02 	lds	r24, 0x02BC
     95a:	81 60       	ori	r24, 0x01	; 1
     95c:	80 93 bc 02 	sts	0x02BC, r24
     960:	84 e9       	ldi	r24, 0x94	; 148
     962:	80 93 bc 00 	sts	0x00BC, r24
     966:	3a c0       	rjmp	.+116    	; 0x9dc <__vector_39+0xe8>
     968:	e0 91 bb 02 	lds	r30, 0x02BB
     96c:	81 e0       	ldi	r24, 0x01	; 1
     96e:	8e 0f       	add	r24, r30
     970:	80 93 bb 02 	sts	0x02BB, r24
     974:	80 91 bb 00 	lds	r24, 0x00BB
     978:	f0 e0       	ldi	r31, 0x00	; 0
     97a:	e2 54       	subi	r30, 0x42	; 66
     97c:	fd 4f       	sbci	r31, 0xFD	; 253
     97e:	80 83       	st	Z, r24
     980:	20 91 bb 02 	lds	r18, 0x02BB
     984:	30 e0       	ldi	r19, 0x00	; 0
     986:	80 91 bd 02 	lds	r24, 0x02BD
     98a:	90 e0       	ldi	r25, 0x00	; 0
     98c:	01 97       	sbiw	r24, 0x01	; 1
     98e:	28 17       	cp	r18, r24
     990:	39 07       	cpc	r19, r25
     992:	24 f4       	brge	.+8      	; 0x99c <__vector_39+0xa8>
     994:	85 ec       	ldi	r24, 0xC5	; 197
     996:	80 93 bc 00 	sts	0x00BC, r24
     99a:	20 c0       	rjmp	.+64     	; 0x9dc <__vector_39+0xe8>
     99c:	85 e8       	ldi	r24, 0x85	; 133
     99e:	80 93 bc 00 	sts	0x00BC, r24
     9a2:	1c c0       	rjmp	.+56     	; 0x9dc <__vector_39+0xe8>
     9a4:	80 91 bb 00 	lds	r24, 0x00BB
     9a8:	e0 91 bb 02 	lds	r30, 0x02BB
     9ac:	f0 e0       	ldi	r31, 0x00	; 0
     9ae:	e2 54       	subi	r30, 0x42	; 66
     9b0:	fd 4f       	sbci	r31, 0xFD	; 253
     9b2:	80 83       	st	Z, r24
     9b4:	80 91 bc 02 	lds	r24, 0x02BC
     9b8:	81 60       	ori	r24, 0x01	; 1
     9ba:	80 93 bc 02 	sts	0x02BC, r24
     9be:	84 e9       	ldi	r24, 0x94	; 148
     9c0:	80 93 bc 00 	sts	0x00BC, r24
     9c4:	0b c0       	rjmp	.+22     	; 0x9dc <__vector_39+0xe8>
     9c6:	85 ea       	ldi	r24, 0xA5	; 165
     9c8:	80 93 bc 00 	sts	0x00BC, r24
     9cc:	07 c0       	rjmp	.+14     	; 0x9dc <__vector_39+0xe8>
     9ce:	80 91 b9 00 	lds	r24, 0x00B9
     9d2:	80 93 11 02 	sts	0x0211, r24
     9d6:	84 e0       	ldi	r24, 0x04	; 4
     9d8:	80 93 bc 00 	sts	0x00BC, r24
     9dc:	ff 91       	pop	r31
     9de:	ef 91       	pop	r30
     9e0:	bf 91       	pop	r27
     9e2:	af 91       	pop	r26
     9e4:	9f 91       	pop	r25
     9e6:	8f 91       	pop	r24
     9e8:	3f 91       	pop	r19
     9ea:	2f 91       	pop	r18
     9ec:	0f 90       	pop	r0
     9ee:	0b be       	out	0x3b, r0	; 59
     9f0:	0f 90       	pop	r0
     9f2:	0f be       	out	0x3f, r0	; 63
     9f4:	0f 90       	pop	r0
     9f6:	1f 90       	pop	r1
     9f8:	18 95       	reti

000009fa <UART_transmit>:
     9fa:	e0 ec       	ldi	r30, 0xC0	; 192
     9fc:	f0 e0       	ldi	r31, 0x00	; 0
     9fe:	90 81       	ld	r25, Z
     a00:	95 ff       	sbrs	r25, 5
     a02:	fd cf       	rjmp	.-6      	; 0x9fe <UART_transmit+0x4>
     a04:	80 93 c6 00 	sts	0x00C6, r24
     a08:	80 e0       	ldi	r24, 0x00	; 0
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	08 95       	ret

00000a0e <UART_receive>:
     a0e:	e0 ec       	ldi	r30, 0xC0	; 192
     a10:	f0 e0       	ldi	r31, 0x00	; 0
     a12:	80 81       	ld	r24, Z
     a14:	88 23       	and	r24, r24
     a16:	ec f7       	brge	.-6      	; 0xa12 <UART_receive+0x4>
     a18:	80 91 c6 00 	lds	r24, 0x00C6
     a1c:	08 95       	ret

00000a1e <UART_init>:
     a1e:	90 93 c5 00 	sts	0x00C5, r25
     a22:	80 93 c4 00 	sts	0x00C4, r24
     a26:	88 e1       	ldi	r24, 0x18	; 24
     a28:	80 93 c1 00 	sts	0x00C1, r24
     a2c:	8e e0       	ldi	r24, 0x0E	; 14
     a2e:	80 93 c2 00 	sts	0x00C2, r24
     a32:	67 e0       	ldi	r22, 0x07	; 7
     a34:	75 e0       	ldi	r23, 0x05	; 5
     a36:	8d ef       	ldi	r24, 0xFD	; 253
     a38:	94 e0       	ldi	r25, 0x04	; 4
     a3a:	1f d2       	rcall	.+1086   	; 0xe7a <fdevopen>
     a3c:	80 e0       	ldi	r24, 0x00	; 0
     a3e:	90 e0       	ldi	r25, 0x00	; 0
     a40:	08 95       	ret

00000a42 <__subsf3>:
     a42:	50 58       	subi	r21, 0x80	; 128

00000a44 <__addsf3>:
     a44:	bb 27       	eor	r27, r27
     a46:	aa 27       	eor	r26, r26
     a48:	0e d0       	rcall	.+28     	; 0xa66 <__addsf3x>
     a4a:	70 c1       	rjmp	.+736    	; 0xd2c <__fp_round>
     a4c:	61 d1       	rcall	.+706    	; 0xd10 <__fp_pscA>
     a4e:	30 f0       	brcs	.+12     	; 0xa5c <__addsf3+0x18>
     a50:	66 d1       	rcall	.+716    	; 0xd1e <__fp_pscB>
     a52:	20 f0       	brcs	.+8      	; 0xa5c <__addsf3+0x18>
     a54:	31 f4       	brne	.+12     	; 0xa62 <__addsf3+0x1e>
     a56:	9f 3f       	cpi	r25, 0xFF	; 255
     a58:	11 f4       	brne	.+4      	; 0xa5e <__addsf3+0x1a>
     a5a:	1e f4       	brtc	.+6      	; 0xa62 <__addsf3+0x1e>
     a5c:	56 c1       	rjmp	.+684    	; 0xd0a <__fp_nan>
     a5e:	0e f4       	brtc	.+2      	; 0xa62 <__addsf3+0x1e>
     a60:	e0 95       	com	r30
     a62:	e7 fb       	bst	r30, 7
     a64:	4c c1       	rjmp	.+664    	; 0xcfe <__fp_inf>

00000a66 <__addsf3x>:
     a66:	e9 2f       	mov	r30, r25
     a68:	72 d1       	rcall	.+740    	; 0xd4e <__fp_split3>
     a6a:	80 f3       	brcs	.-32     	; 0xa4c <__addsf3+0x8>
     a6c:	ba 17       	cp	r27, r26
     a6e:	62 07       	cpc	r22, r18
     a70:	73 07       	cpc	r23, r19
     a72:	84 07       	cpc	r24, r20
     a74:	95 07       	cpc	r25, r21
     a76:	18 f0       	brcs	.+6      	; 0xa7e <__addsf3x+0x18>
     a78:	71 f4       	brne	.+28     	; 0xa96 <__addsf3x+0x30>
     a7a:	9e f5       	brtc	.+102    	; 0xae2 <__addsf3x+0x7c>
     a7c:	8a c1       	rjmp	.+788    	; 0xd92 <__fp_zero>
     a7e:	0e f4       	brtc	.+2      	; 0xa82 <__addsf3x+0x1c>
     a80:	e0 95       	com	r30
     a82:	0b 2e       	mov	r0, r27
     a84:	ba 2f       	mov	r27, r26
     a86:	a0 2d       	mov	r26, r0
     a88:	0b 01       	movw	r0, r22
     a8a:	b9 01       	movw	r22, r18
     a8c:	90 01       	movw	r18, r0
     a8e:	0c 01       	movw	r0, r24
     a90:	ca 01       	movw	r24, r20
     a92:	a0 01       	movw	r20, r0
     a94:	11 24       	eor	r1, r1
     a96:	ff 27       	eor	r31, r31
     a98:	59 1b       	sub	r21, r25
     a9a:	99 f0       	breq	.+38     	; 0xac2 <__addsf3x+0x5c>
     a9c:	59 3f       	cpi	r21, 0xF9	; 249
     a9e:	50 f4       	brcc	.+20     	; 0xab4 <__addsf3x+0x4e>
     aa0:	50 3e       	cpi	r21, 0xE0	; 224
     aa2:	68 f1       	brcs	.+90     	; 0xafe <__addsf3x+0x98>
     aa4:	1a 16       	cp	r1, r26
     aa6:	f0 40       	sbci	r31, 0x00	; 0
     aa8:	a2 2f       	mov	r26, r18
     aaa:	23 2f       	mov	r18, r19
     aac:	34 2f       	mov	r19, r20
     aae:	44 27       	eor	r20, r20
     ab0:	58 5f       	subi	r21, 0xF8	; 248
     ab2:	f3 cf       	rjmp	.-26     	; 0xa9a <__addsf3x+0x34>
     ab4:	46 95       	lsr	r20
     ab6:	37 95       	ror	r19
     ab8:	27 95       	ror	r18
     aba:	a7 95       	ror	r26
     abc:	f0 40       	sbci	r31, 0x00	; 0
     abe:	53 95       	inc	r21
     ac0:	c9 f7       	brne	.-14     	; 0xab4 <__addsf3x+0x4e>
     ac2:	7e f4       	brtc	.+30     	; 0xae2 <__addsf3x+0x7c>
     ac4:	1f 16       	cp	r1, r31
     ac6:	ba 0b       	sbc	r27, r26
     ac8:	62 0b       	sbc	r22, r18
     aca:	73 0b       	sbc	r23, r19
     acc:	84 0b       	sbc	r24, r20
     ace:	ba f0       	brmi	.+46     	; 0xafe <__addsf3x+0x98>
     ad0:	91 50       	subi	r25, 0x01	; 1
     ad2:	a1 f0       	breq	.+40     	; 0xafc <__addsf3x+0x96>
     ad4:	ff 0f       	add	r31, r31
     ad6:	bb 1f       	adc	r27, r27
     ad8:	66 1f       	adc	r22, r22
     ada:	77 1f       	adc	r23, r23
     adc:	88 1f       	adc	r24, r24
     ade:	c2 f7       	brpl	.-16     	; 0xad0 <__addsf3x+0x6a>
     ae0:	0e c0       	rjmp	.+28     	; 0xafe <__addsf3x+0x98>
     ae2:	ba 0f       	add	r27, r26
     ae4:	62 1f       	adc	r22, r18
     ae6:	73 1f       	adc	r23, r19
     ae8:	84 1f       	adc	r24, r20
     aea:	48 f4       	brcc	.+18     	; 0xafe <__addsf3x+0x98>
     aec:	87 95       	ror	r24
     aee:	77 95       	ror	r23
     af0:	67 95       	ror	r22
     af2:	b7 95       	ror	r27
     af4:	f7 95       	ror	r31
     af6:	9e 3f       	cpi	r25, 0xFE	; 254
     af8:	08 f0       	brcs	.+2      	; 0xafc <__addsf3x+0x96>
     afa:	b3 cf       	rjmp	.-154    	; 0xa62 <__addsf3+0x1e>
     afc:	93 95       	inc	r25
     afe:	88 0f       	add	r24, r24
     b00:	08 f0       	brcs	.+2      	; 0xb04 <__addsf3x+0x9e>
     b02:	99 27       	eor	r25, r25
     b04:	ee 0f       	add	r30, r30
     b06:	97 95       	ror	r25
     b08:	87 95       	ror	r24
     b0a:	08 95       	ret

00000b0c <__cmpsf2>:
     b0c:	d4 d0       	rcall	.+424    	; 0xcb6 <__fp_cmp>
     b0e:	08 f4       	brcc	.+2      	; 0xb12 <__cmpsf2+0x6>
     b10:	81 e0       	ldi	r24, 0x01	; 1
     b12:	08 95       	ret

00000b14 <__divsf3>:
     b14:	0c d0       	rcall	.+24     	; 0xb2e <__divsf3x>
     b16:	0a c1       	rjmp	.+532    	; 0xd2c <__fp_round>
     b18:	02 d1       	rcall	.+516    	; 0xd1e <__fp_pscB>
     b1a:	40 f0       	brcs	.+16     	; 0xb2c <__divsf3+0x18>
     b1c:	f9 d0       	rcall	.+498    	; 0xd10 <__fp_pscA>
     b1e:	30 f0       	brcs	.+12     	; 0xb2c <__divsf3+0x18>
     b20:	21 f4       	brne	.+8      	; 0xb2a <__divsf3+0x16>
     b22:	5f 3f       	cpi	r21, 0xFF	; 255
     b24:	19 f0       	breq	.+6      	; 0xb2c <__divsf3+0x18>
     b26:	eb c0       	rjmp	.+470    	; 0xcfe <__fp_inf>
     b28:	51 11       	cpse	r21, r1
     b2a:	34 c1       	rjmp	.+616    	; 0xd94 <__fp_szero>
     b2c:	ee c0       	rjmp	.+476    	; 0xd0a <__fp_nan>

00000b2e <__divsf3x>:
     b2e:	0f d1       	rcall	.+542    	; 0xd4e <__fp_split3>
     b30:	98 f3       	brcs	.-26     	; 0xb18 <__divsf3+0x4>

00000b32 <__divsf3_pse>:
     b32:	99 23       	and	r25, r25
     b34:	c9 f3       	breq	.-14     	; 0xb28 <__divsf3+0x14>
     b36:	55 23       	and	r21, r21
     b38:	b1 f3       	breq	.-20     	; 0xb26 <__divsf3+0x12>
     b3a:	95 1b       	sub	r25, r21
     b3c:	55 0b       	sbc	r21, r21
     b3e:	bb 27       	eor	r27, r27
     b40:	aa 27       	eor	r26, r26
     b42:	62 17       	cp	r22, r18
     b44:	73 07       	cpc	r23, r19
     b46:	84 07       	cpc	r24, r20
     b48:	38 f0       	brcs	.+14     	; 0xb58 <__divsf3_pse+0x26>
     b4a:	9f 5f       	subi	r25, 0xFF	; 255
     b4c:	5f 4f       	sbci	r21, 0xFF	; 255
     b4e:	22 0f       	add	r18, r18
     b50:	33 1f       	adc	r19, r19
     b52:	44 1f       	adc	r20, r20
     b54:	aa 1f       	adc	r26, r26
     b56:	a9 f3       	breq	.-22     	; 0xb42 <__divsf3_pse+0x10>
     b58:	33 d0       	rcall	.+102    	; 0xbc0 <__divsf3_pse+0x8e>
     b5a:	0e 2e       	mov	r0, r30
     b5c:	3a f0       	brmi	.+14     	; 0xb6c <__divsf3_pse+0x3a>
     b5e:	e0 e8       	ldi	r30, 0x80	; 128
     b60:	30 d0       	rcall	.+96     	; 0xbc2 <__divsf3_pse+0x90>
     b62:	91 50       	subi	r25, 0x01	; 1
     b64:	50 40       	sbci	r21, 0x00	; 0
     b66:	e6 95       	lsr	r30
     b68:	00 1c       	adc	r0, r0
     b6a:	ca f7       	brpl	.-14     	; 0xb5e <__divsf3_pse+0x2c>
     b6c:	29 d0       	rcall	.+82     	; 0xbc0 <__divsf3_pse+0x8e>
     b6e:	fe 2f       	mov	r31, r30
     b70:	27 d0       	rcall	.+78     	; 0xbc0 <__divsf3_pse+0x8e>
     b72:	66 0f       	add	r22, r22
     b74:	77 1f       	adc	r23, r23
     b76:	88 1f       	adc	r24, r24
     b78:	bb 1f       	adc	r27, r27
     b7a:	26 17       	cp	r18, r22
     b7c:	37 07       	cpc	r19, r23
     b7e:	48 07       	cpc	r20, r24
     b80:	ab 07       	cpc	r26, r27
     b82:	b0 e8       	ldi	r27, 0x80	; 128
     b84:	09 f0       	breq	.+2      	; 0xb88 <__divsf3_pse+0x56>
     b86:	bb 0b       	sbc	r27, r27
     b88:	80 2d       	mov	r24, r0
     b8a:	bf 01       	movw	r22, r30
     b8c:	ff 27       	eor	r31, r31
     b8e:	93 58       	subi	r25, 0x83	; 131
     b90:	5f 4f       	sbci	r21, 0xFF	; 255
     b92:	2a f0       	brmi	.+10     	; 0xb9e <__divsf3_pse+0x6c>
     b94:	9e 3f       	cpi	r25, 0xFE	; 254
     b96:	51 05       	cpc	r21, r1
     b98:	68 f0       	brcs	.+26     	; 0xbb4 <__divsf3_pse+0x82>
     b9a:	b1 c0       	rjmp	.+354    	; 0xcfe <__fp_inf>
     b9c:	fb c0       	rjmp	.+502    	; 0xd94 <__fp_szero>
     b9e:	5f 3f       	cpi	r21, 0xFF	; 255
     ba0:	ec f3       	brlt	.-6      	; 0xb9c <__divsf3_pse+0x6a>
     ba2:	98 3e       	cpi	r25, 0xE8	; 232
     ba4:	dc f3       	brlt	.-10     	; 0xb9c <__divsf3_pse+0x6a>
     ba6:	86 95       	lsr	r24
     ba8:	77 95       	ror	r23
     baa:	67 95       	ror	r22
     bac:	b7 95       	ror	r27
     bae:	f7 95       	ror	r31
     bb0:	9f 5f       	subi	r25, 0xFF	; 255
     bb2:	c9 f7       	brne	.-14     	; 0xba6 <__divsf3_pse+0x74>
     bb4:	88 0f       	add	r24, r24
     bb6:	91 1d       	adc	r25, r1
     bb8:	96 95       	lsr	r25
     bba:	87 95       	ror	r24
     bbc:	97 f9       	bld	r25, 7
     bbe:	08 95       	ret
     bc0:	e1 e0       	ldi	r30, 0x01	; 1
     bc2:	66 0f       	add	r22, r22
     bc4:	77 1f       	adc	r23, r23
     bc6:	88 1f       	adc	r24, r24
     bc8:	bb 1f       	adc	r27, r27
     bca:	62 17       	cp	r22, r18
     bcc:	73 07       	cpc	r23, r19
     bce:	84 07       	cpc	r24, r20
     bd0:	ba 07       	cpc	r27, r26
     bd2:	20 f0       	brcs	.+8      	; 0xbdc <__divsf3_pse+0xaa>
     bd4:	62 1b       	sub	r22, r18
     bd6:	73 0b       	sbc	r23, r19
     bd8:	84 0b       	sbc	r24, r20
     bda:	ba 0b       	sbc	r27, r26
     bdc:	ee 1f       	adc	r30, r30
     bde:	88 f7       	brcc	.-30     	; 0xbc2 <__divsf3_pse+0x90>
     be0:	e0 95       	com	r30
     be2:	08 95       	ret

00000be4 <__fixunssfsi>:
     be4:	bc d0       	rcall	.+376    	; 0xd5e <__fp_splitA>
     be6:	88 f0       	brcs	.+34     	; 0xc0a <__fixunssfsi+0x26>
     be8:	9f 57       	subi	r25, 0x7F	; 127
     bea:	90 f0       	brcs	.+36     	; 0xc10 <__fixunssfsi+0x2c>
     bec:	b9 2f       	mov	r27, r25
     bee:	99 27       	eor	r25, r25
     bf0:	b7 51       	subi	r27, 0x17	; 23
     bf2:	a0 f0       	brcs	.+40     	; 0xc1c <__fixunssfsi+0x38>
     bf4:	d1 f0       	breq	.+52     	; 0xc2a <__fixunssfsi+0x46>
     bf6:	66 0f       	add	r22, r22
     bf8:	77 1f       	adc	r23, r23
     bfa:	88 1f       	adc	r24, r24
     bfc:	99 1f       	adc	r25, r25
     bfe:	1a f0       	brmi	.+6      	; 0xc06 <__fixunssfsi+0x22>
     c00:	ba 95       	dec	r27
     c02:	c9 f7       	brne	.-14     	; 0xbf6 <__fixunssfsi+0x12>
     c04:	12 c0       	rjmp	.+36     	; 0xc2a <__fixunssfsi+0x46>
     c06:	b1 30       	cpi	r27, 0x01	; 1
     c08:	81 f0       	breq	.+32     	; 0xc2a <__fixunssfsi+0x46>
     c0a:	c3 d0       	rcall	.+390    	; 0xd92 <__fp_zero>
     c0c:	b1 e0       	ldi	r27, 0x01	; 1
     c0e:	08 95       	ret
     c10:	c0 c0       	rjmp	.+384    	; 0xd92 <__fp_zero>
     c12:	67 2f       	mov	r22, r23
     c14:	78 2f       	mov	r23, r24
     c16:	88 27       	eor	r24, r24
     c18:	b8 5f       	subi	r27, 0xF8	; 248
     c1a:	39 f0       	breq	.+14     	; 0xc2a <__fixunssfsi+0x46>
     c1c:	b9 3f       	cpi	r27, 0xF9	; 249
     c1e:	cc f3       	brlt	.-14     	; 0xc12 <__fixunssfsi+0x2e>
     c20:	86 95       	lsr	r24
     c22:	77 95       	ror	r23
     c24:	67 95       	ror	r22
     c26:	b3 95       	inc	r27
     c28:	d9 f7       	brne	.-10     	; 0xc20 <__fixunssfsi+0x3c>
     c2a:	3e f4       	brtc	.+14     	; 0xc3a <__fixunssfsi+0x56>
     c2c:	90 95       	com	r25
     c2e:	80 95       	com	r24
     c30:	70 95       	com	r23
     c32:	61 95       	neg	r22
     c34:	7f 4f       	sbci	r23, 0xFF	; 255
     c36:	8f 4f       	sbci	r24, 0xFF	; 255
     c38:	9f 4f       	sbci	r25, 0xFF	; 255
     c3a:	08 95       	ret

00000c3c <__floatunsisf>:
     c3c:	e8 94       	clt
     c3e:	09 c0       	rjmp	.+18     	; 0xc52 <__floatsisf+0x12>

00000c40 <__floatsisf>:
     c40:	97 fb       	bst	r25, 7
     c42:	3e f4       	brtc	.+14     	; 0xc52 <__floatsisf+0x12>
     c44:	90 95       	com	r25
     c46:	80 95       	com	r24
     c48:	70 95       	com	r23
     c4a:	61 95       	neg	r22
     c4c:	7f 4f       	sbci	r23, 0xFF	; 255
     c4e:	8f 4f       	sbci	r24, 0xFF	; 255
     c50:	9f 4f       	sbci	r25, 0xFF	; 255
     c52:	99 23       	and	r25, r25
     c54:	a9 f0       	breq	.+42     	; 0xc80 <__floatsisf+0x40>
     c56:	f9 2f       	mov	r31, r25
     c58:	96 e9       	ldi	r25, 0x96	; 150
     c5a:	bb 27       	eor	r27, r27
     c5c:	93 95       	inc	r25
     c5e:	f6 95       	lsr	r31
     c60:	87 95       	ror	r24
     c62:	77 95       	ror	r23
     c64:	67 95       	ror	r22
     c66:	b7 95       	ror	r27
     c68:	f1 11       	cpse	r31, r1
     c6a:	f8 cf       	rjmp	.-16     	; 0xc5c <__floatsisf+0x1c>
     c6c:	fa f4       	brpl	.+62     	; 0xcac <__floatsisf+0x6c>
     c6e:	bb 0f       	add	r27, r27
     c70:	11 f4       	brne	.+4      	; 0xc76 <__floatsisf+0x36>
     c72:	60 ff       	sbrs	r22, 0
     c74:	1b c0       	rjmp	.+54     	; 0xcac <__floatsisf+0x6c>
     c76:	6f 5f       	subi	r22, 0xFF	; 255
     c78:	7f 4f       	sbci	r23, 0xFF	; 255
     c7a:	8f 4f       	sbci	r24, 0xFF	; 255
     c7c:	9f 4f       	sbci	r25, 0xFF	; 255
     c7e:	16 c0       	rjmp	.+44     	; 0xcac <__floatsisf+0x6c>
     c80:	88 23       	and	r24, r24
     c82:	11 f0       	breq	.+4      	; 0xc88 <__floatsisf+0x48>
     c84:	96 e9       	ldi	r25, 0x96	; 150
     c86:	11 c0       	rjmp	.+34     	; 0xcaa <__floatsisf+0x6a>
     c88:	77 23       	and	r23, r23
     c8a:	21 f0       	breq	.+8      	; 0xc94 <__floatsisf+0x54>
     c8c:	9e e8       	ldi	r25, 0x8E	; 142
     c8e:	87 2f       	mov	r24, r23
     c90:	76 2f       	mov	r23, r22
     c92:	05 c0       	rjmp	.+10     	; 0xc9e <__floatsisf+0x5e>
     c94:	66 23       	and	r22, r22
     c96:	71 f0       	breq	.+28     	; 0xcb4 <__floatsisf+0x74>
     c98:	96 e8       	ldi	r25, 0x86	; 134
     c9a:	86 2f       	mov	r24, r22
     c9c:	70 e0       	ldi	r23, 0x00	; 0
     c9e:	60 e0       	ldi	r22, 0x00	; 0
     ca0:	2a f0       	brmi	.+10     	; 0xcac <__floatsisf+0x6c>
     ca2:	9a 95       	dec	r25
     ca4:	66 0f       	add	r22, r22
     ca6:	77 1f       	adc	r23, r23
     ca8:	88 1f       	adc	r24, r24
     caa:	da f7       	brpl	.-10     	; 0xca2 <__floatsisf+0x62>
     cac:	88 0f       	add	r24, r24
     cae:	96 95       	lsr	r25
     cb0:	87 95       	ror	r24
     cb2:	97 f9       	bld	r25, 7
     cb4:	08 95       	ret

00000cb6 <__fp_cmp>:
     cb6:	99 0f       	add	r25, r25
     cb8:	00 08       	sbc	r0, r0
     cba:	55 0f       	add	r21, r21
     cbc:	aa 0b       	sbc	r26, r26
     cbe:	e0 e8       	ldi	r30, 0x80	; 128
     cc0:	fe ef       	ldi	r31, 0xFE	; 254
     cc2:	16 16       	cp	r1, r22
     cc4:	17 06       	cpc	r1, r23
     cc6:	e8 07       	cpc	r30, r24
     cc8:	f9 07       	cpc	r31, r25
     cca:	c0 f0       	brcs	.+48     	; 0xcfc <__fp_cmp+0x46>
     ccc:	12 16       	cp	r1, r18
     cce:	13 06       	cpc	r1, r19
     cd0:	e4 07       	cpc	r30, r20
     cd2:	f5 07       	cpc	r31, r21
     cd4:	98 f0       	brcs	.+38     	; 0xcfc <__fp_cmp+0x46>
     cd6:	62 1b       	sub	r22, r18
     cd8:	73 0b       	sbc	r23, r19
     cda:	84 0b       	sbc	r24, r20
     cdc:	95 0b       	sbc	r25, r21
     cde:	39 f4       	brne	.+14     	; 0xcee <__fp_cmp+0x38>
     ce0:	0a 26       	eor	r0, r26
     ce2:	61 f0       	breq	.+24     	; 0xcfc <__fp_cmp+0x46>
     ce4:	23 2b       	or	r18, r19
     ce6:	24 2b       	or	r18, r20
     ce8:	25 2b       	or	r18, r21
     cea:	21 f4       	brne	.+8      	; 0xcf4 <__fp_cmp+0x3e>
     cec:	08 95       	ret
     cee:	0a 26       	eor	r0, r26
     cf0:	09 f4       	brne	.+2      	; 0xcf4 <__fp_cmp+0x3e>
     cf2:	a1 40       	sbci	r26, 0x01	; 1
     cf4:	a6 95       	lsr	r26
     cf6:	8f ef       	ldi	r24, 0xFF	; 255
     cf8:	81 1d       	adc	r24, r1
     cfa:	81 1d       	adc	r24, r1
     cfc:	08 95       	ret

00000cfe <__fp_inf>:
     cfe:	97 f9       	bld	r25, 7
     d00:	9f 67       	ori	r25, 0x7F	; 127
     d02:	80 e8       	ldi	r24, 0x80	; 128
     d04:	70 e0       	ldi	r23, 0x00	; 0
     d06:	60 e0       	ldi	r22, 0x00	; 0
     d08:	08 95       	ret

00000d0a <__fp_nan>:
     d0a:	9f ef       	ldi	r25, 0xFF	; 255
     d0c:	80 ec       	ldi	r24, 0xC0	; 192
     d0e:	08 95       	ret

00000d10 <__fp_pscA>:
     d10:	00 24       	eor	r0, r0
     d12:	0a 94       	dec	r0
     d14:	16 16       	cp	r1, r22
     d16:	17 06       	cpc	r1, r23
     d18:	18 06       	cpc	r1, r24
     d1a:	09 06       	cpc	r0, r25
     d1c:	08 95       	ret

00000d1e <__fp_pscB>:
     d1e:	00 24       	eor	r0, r0
     d20:	0a 94       	dec	r0
     d22:	12 16       	cp	r1, r18
     d24:	13 06       	cpc	r1, r19
     d26:	14 06       	cpc	r1, r20
     d28:	05 06       	cpc	r0, r21
     d2a:	08 95       	ret

00000d2c <__fp_round>:
     d2c:	09 2e       	mov	r0, r25
     d2e:	03 94       	inc	r0
     d30:	00 0c       	add	r0, r0
     d32:	11 f4       	brne	.+4      	; 0xd38 <__fp_round+0xc>
     d34:	88 23       	and	r24, r24
     d36:	52 f0       	brmi	.+20     	; 0xd4c <__fp_round+0x20>
     d38:	bb 0f       	add	r27, r27
     d3a:	40 f4       	brcc	.+16     	; 0xd4c <__fp_round+0x20>
     d3c:	bf 2b       	or	r27, r31
     d3e:	11 f4       	brne	.+4      	; 0xd44 <__fp_round+0x18>
     d40:	60 ff       	sbrs	r22, 0
     d42:	04 c0       	rjmp	.+8      	; 0xd4c <__fp_round+0x20>
     d44:	6f 5f       	subi	r22, 0xFF	; 255
     d46:	7f 4f       	sbci	r23, 0xFF	; 255
     d48:	8f 4f       	sbci	r24, 0xFF	; 255
     d4a:	9f 4f       	sbci	r25, 0xFF	; 255
     d4c:	08 95       	ret

00000d4e <__fp_split3>:
     d4e:	57 fd       	sbrc	r21, 7
     d50:	90 58       	subi	r25, 0x80	; 128
     d52:	44 0f       	add	r20, r20
     d54:	55 1f       	adc	r21, r21
     d56:	59 f0       	breq	.+22     	; 0xd6e <__fp_splitA+0x10>
     d58:	5f 3f       	cpi	r21, 0xFF	; 255
     d5a:	71 f0       	breq	.+28     	; 0xd78 <__fp_splitA+0x1a>
     d5c:	47 95       	ror	r20

00000d5e <__fp_splitA>:
     d5e:	88 0f       	add	r24, r24
     d60:	97 fb       	bst	r25, 7
     d62:	99 1f       	adc	r25, r25
     d64:	61 f0       	breq	.+24     	; 0xd7e <__fp_splitA+0x20>
     d66:	9f 3f       	cpi	r25, 0xFF	; 255
     d68:	79 f0       	breq	.+30     	; 0xd88 <__fp_splitA+0x2a>
     d6a:	87 95       	ror	r24
     d6c:	08 95       	ret
     d6e:	12 16       	cp	r1, r18
     d70:	13 06       	cpc	r1, r19
     d72:	14 06       	cpc	r1, r20
     d74:	55 1f       	adc	r21, r21
     d76:	f2 cf       	rjmp	.-28     	; 0xd5c <__fp_split3+0xe>
     d78:	46 95       	lsr	r20
     d7a:	f1 df       	rcall	.-30     	; 0xd5e <__fp_splitA>
     d7c:	08 c0       	rjmp	.+16     	; 0xd8e <__fp_splitA+0x30>
     d7e:	16 16       	cp	r1, r22
     d80:	17 06       	cpc	r1, r23
     d82:	18 06       	cpc	r1, r24
     d84:	99 1f       	adc	r25, r25
     d86:	f1 cf       	rjmp	.-30     	; 0xd6a <__fp_splitA+0xc>
     d88:	86 95       	lsr	r24
     d8a:	71 05       	cpc	r23, r1
     d8c:	61 05       	cpc	r22, r1
     d8e:	08 94       	sec
     d90:	08 95       	ret

00000d92 <__fp_zero>:
     d92:	e8 94       	clt

00000d94 <__fp_szero>:
     d94:	bb 27       	eor	r27, r27
     d96:	66 27       	eor	r22, r22
     d98:	77 27       	eor	r23, r23
     d9a:	cb 01       	movw	r24, r22
     d9c:	97 f9       	bld	r25, 7
     d9e:	08 95       	ret

00000da0 <__gesf2>:
     da0:	8a df       	rcall	.-236    	; 0xcb6 <__fp_cmp>
     da2:	08 f4       	brcc	.+2      	; 0xda6 <__gesf2+0x6>
     da4:	8f ef       	ldi	r24, 0xFF	; 255
     da6:	08 95       	ret

00000da8 <__mulsf3>:
     da8:	0b d0       	rcall	.+22     	; 0xdc0 <__mulsf3x>
     daa:	c0 cf       	rjmp	.-128    	; 0xd2c <__fp_round>
     dac:	b1 df       	rcall	.-158    	; 0xd10 <__fp_pscA>
     dae:	28 f0       	brcs	.+10     	; 0xdba <__mulsf3+0x12>
     db0:	b6 df       	rcall	.-148    	; 0xd1e <__fp_pscB>
     db2:	18 f0       	brcs	.+6      	; 0xdba <__mulsf3+0x12>
     db4:	95 23       	and	r25, r21
     db6:	09 f0       	breq	.+2      	; 0xdba <__mulsf3+0x12>
     db8:	a2 cf       	rjmp	.-188    	; 0xcfe <__fp_inf>
     dba:	a7 cf       	rjmp	.-178    	; 0xd0a <__fp_nan>
     dbc:	11 24       	eor	r1, r1
     dbe:	ea cf       	rjmp	.-44     	; 0xd94 <__fp_szero>

00000dc0 <__mulsf3x>:
     dc0:	c6 df       	rcall	.-116    	; 0xd4e <__fp_split3>
     dc2:	a0 f3       	brcs	.-24     	; 0xdac <__mulsf3+0x4>

00000dc4 <__mulsf3_pse>:
     dc4:	95 9f       	mul	r25, r21
     dc6:	d1 f3       	breq	.-12     	; 0xdbc <__mulsf3+0x14>
     dc8:	95 0f       	add	r25, r21
     dca:	50 e0       	ldi	r21, 0x00	; 0
     dcc:	55 1f       	adc	r21, r21
     dce:	62 9f       	mul	r22, r18
     dd0:	f0 01       	movw	r30, r0
     dd2:	72 9f       	mul	r23, r18
     dd4:	bb 27       	eor	r27, r27
     dd6:	f0 0d       	add	r31, r0
     dd8:	b1 1d       	adc	r27, r1
     dda:	63 9f       	mul	r22, r19
     ddc:	aa 27       	eor	r26, r26
     dde:	f0 0d       	add	r31, r0
     de0:	b1 1d       	adc	r27, r1
     de2:	aa 1f       	adc	r26, r26
     de4:	64 9f       	mul	r22, r20
     de6:	66 27       	eor	r22, r22
     de8:	b0 0d       	add	r27, r0
     dea:	a1 1d       	adc	r26, r1
     dec:	66 1f       	adc	r22, r22
     dee:	82 9f       	mul	r24, r18
     df0:	22 27       	eor	r18, r18
     df2:	b0 0d       	add	r27, r0
     df4:	a1 1d       	adc	r26, r1
     df6:	62 1f       	adc	r22, r18
     df8:	73 9f       	mul	r23, r19
     dfa:	b0 0d       	add	r27, r0
     dfc:	a1 1d       	adc	r26, r1
     dfe:	62 1f       	adc	r22, r18
     e00:	83 9f       	mul	r24, r19
     e02:	a0 0d       	add	r26, r0
     e04:	61 1d       	adc	r22, r1
     e06:	22 1f       	adc	r18, r18
     e08:	74 9f       	mul	r23, r20
     e0a:	33 27       	eor	r19, r19
     e0c:	a0 0d       	add	r26, r0
     e0e:	61 1d       	adc	r22, r1
     e10:	23 1f       	adc	r18, r19
     e12:	84 9f       	mul	r24, r20
     e14:	60 0d       	add	r22, r0
     e16:	21 1d       	adc	r18, r1
     e18:	82 2f       	mov	r24, r18
     e1a:	76 2f       	mov	r23, r22
     e1c:	6a 2f       	mov	r22, r26
     e1e:	11 24       	eor	r1, r1
     e20:	9f 57       	subi	r25, 0x7F	; 127
     e22:	50 40       	sbci	r21, 0x00	; 0
     e24:	8a f0       	brmi	.+34     	; 0xe48 <__mulsf3_pse+0x84>
     e26:	e1 f0       	breq	.+56     	; 0xe60 <__mulsf3_pse+0x9c>
     e28:	88 23       	and	r24, r24
     e2a:	4a f0       	brmi	.+18     	; 0xe3e <__mulsf3_pse+0x7a>
     e2c:	ee 0f       	add	r30, r30
     e2e:	ff 1f       	adc	r31, r31
     e30:	bb 1f       	adc	r27, r27
     e32:	66 1f       	adc	r22, r22
     e34:	77 1f       	adc	r23, r23
     e36:	88 1f       	adc	r24, r24
     e38:	91 50       	subi	r25, 0x01	; 1
     e3a:	50 40       	sbci	r21, 0x00	; 0
     e3c:	a9 f7       	brne	.-22     	; 0xe28 <__mulsf3_pse+0x64>
     e3e:	9e 3f       	cpi	r25, 0xFE	; 254
     e40:	51 05       	cpc	r21, r1
     e42:	70 f0       	brcs	.+28     	; 0xe60 <__mulsf3_pse+0x9c>
     e44:	5c cf       	rjmp	.-328    	; 0xcfe <__fp_inf>
     e46:	a6 cf       	rjmp	.-180    	; 0xd94 <__fp_szero>
     e48:	5f 3f       	cpi	r21, 0xFF	; 255
     e4a:	ec f3       	brlt	.-6      	; 0xe46 <__mulsf3_pse+0x82>
     e4c:	98 3e       	cpi	r25, 0xE8	; 232
     e4e:	dc f3       	brlt	.-10     	; 0xe46 <__mulsf3_pse+0x82>
     e50:	86 95       	lsr	r24
     e52:	77 95       	ror	r23
     e54:	67 95       	ror	r22
     e56:	b7 95       	ror	r27
     e58:	f7 95       	ror	r31
     e5a:	e7 95       	ror	r30
     e5c:	9f 5f       	subi	r25, 0xFF	; 255
     e5e:	c1 f7       	brne	.-16     	; 0xe50 <__mulsf3_pse+0x8c>
     e60:	fe 2b       	or	r31, r30
     e62:	88 0f       	add	r24, r24
     e64:	91 1d       	adc	r25, r1
     e66:	96 95       	lsr	r25
     e68:	87 95       	ror	r24
     e6a:	97 f9       	bld	r25, 7
     e6c:	08 95       	ret

00000e6e <__tablejump2__>:
     e6e:	ee 0f       	add	r30, r30
     e70:	ff 1f       	adc	r31, r31

00000e72 <__tablejump__>:
     e72:	05 90       	lpm	r0, Z+
     e74:	f4 91       	lpm	r31, Z
     e76:	e0 2d       	mov	r30, r0
     e78:	19 94       	eijmp

00000e7a <fdevopen>:
     e7a:	0f 93       	push	r16
     e7c:	1f 93       	push	r17
     e7e:	cf 93       	push	r28
     e80:	df 93       	push	r29
     e82:	ec 01       	movw	r28, r24
     e84:	8b 01       	movw	r16, r22
     e86:	00 97       	sbiw	r24, 0x00	; 0
     e88:	31 f4       	brne	.+12     	; 0xe96 <fdevopen+0x1c>
     e8a:	61 15       	cp	r22, r1
     e8c:	71 05       	cpc	r23, r1
     e8e:	19 f4       	brne	.+6      	; 0xe96 <fdevopen+0x1c>
     e90:	80 e0       	ldi	r24, 0x00	; 0
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	37 c0       	rjmp	.+110    	; 0xf04 <fdevopen+0x8a>
     e96:	6e e0       	ldi	r22, 0x0E	; 14
     e98:	70 e0       	ldi	r23, 0x00	; 0
     e9a:	81 e0       	ldi	r24, 0x01	; 1
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	63 d2       	rcall	.+1222   	; 0x1366 <calloc>
     ea0:	fc 01       	movw	r30, r24
     ea2:	00 97       	sbiw	r24, 0x00	; 0
     ea4:	a9 f3       	breq	.-22     	; 0xe90 <fdevopen+0x16>
     ea6:	80 e8       	ldi	r24, 0x80	; 128
     ea8:	83 83       	std	Z+3, r24	; 0x03
     eaa:	01 15       	cp	r16, r1
     eac:	11 05       	cpc	r17, r1
     eae:	71 f0       	breq	.+28     	; 0xecc <fdevopen+0x52>
     eb0:	13 87       	std	Z+11, r17	; 0x0b
     eb2:	02 87       	std	Z+10, r16	; 0x0a
     eb4:	81 e8       	ldi	r24, 0x81	; 129
     eb6:	83 83       	std	Z+3, r24	; 0x03
     eb8:	80 91 c3 02 	lds	r24, 0x02C3
     ebc:	90 91 c4 02 	lds	r25, 0x02C4
     ec0:	89 2b       	or	r24, r25
     ec2:	21 f4       	brne	.+8      	; 0xecc <fdevopen+0x52>
     ec4:	f0 93 c4 02 	sts	0x02C4, r31
     ec8:	e0 93 c3 02 	sts	0x02C3, r30
     ecc:	20 97       	sbiw	r28, 0x00	; 0
     ece:	c9 f0       	breq	.+50     	; 0xf02 <fdevopen+0x88>
     ed0:	d1 87       	std	Z+9, r29	; 0x09
     ed2:	c0 87       	std	Z+8, r28	; 0x08
     ed4:	83 81       	ldd	r24, Z+3	; 0x03
     ed6:	82 60       	ori	r24, 0x02	; 2
     ed8:	83 83       	std	Z+3, r24	; 0x03
     eda:	80 91 c5 02 	lds	r24, 0x02C5
     ede:	90 91 c6 02 	lds	r25, 0x02C6
     ee2:	89 2b       	or	r24, r25
     ee4:	71 f4       	brne	.+28     	; 0xf02 <fdevopen+0x88>
     ee6:	f0 93 c6 02 	sts	0x02C6, r31
     eea:	e0 93 c5 02 	sts	0x02C5, r30
     eee:	80 91 c7 02 	lds	r24, 0x02C7
     ef2:	90 91 c8 02 	lds	r25, 0x02C8
     ef6:	89 2b       	or	r24, r25
     ef8:	21 f4       	brne	.+8      	; 0xf02 <fdevopen+0x88>
     efa:	f0 93 c8 02 	sts	0x02C8, r31
     efe:	e0 93 c7 02 	sts	0x02C7, r30
     f02:	cf 01       	movw	r24, r30
     f04:	df 91       	pop	r29
     f06:	cf 91       	pop	r28
     f08:	1f 91       	pop	r17
     f0a:	0f 91       	pop	r16
     f0c:	08 95       	ret

00000f0e <printf>:
     f0e:	cf 93       	push	r28
     f10:	df 93       	push	r29
     f12:	cd b7       	in	r28, 0x3d	; 61
     f14:	de b7       	in	r29, 0x3e	; 62
     f16:	fe 01       	movw	r30, r28
     f18:	36 96       	adiw	r30, 0x06	; 6
     f1a:	61 91       	ld	r22, Z+
     f1c:	71 91       	ld	r23, Z+
     f1e:	af 01       	movw	r20, r30
     f20:	80 91 c5 02 	lds	r24, 0x02C5
     f24:	90 91 c6 02 	lds	r25, 0x02C6
     f28:	30 d0       	rcall	.+96     	; 0xf8a <vfprintf>
     f2a:	df 91       	pop	r29
     f2c:	cf 91       	pop	r28
     f2e:	08 95       	ret

00000f30 <puts>:
     f30:	0f 93       	push	r16
     f32:	1f 93       	push	r17
     f34:	cf 93       	push	r28
     f36:	df 93       	push	r29
     f38:	e0 91 c5 02 	lds	r30, 0x02C5
     f3c:	f0 91 c6 02 	lds	r31, 0x02C6
     f40:	23 81       	ldd	r18, Z+3	; 0x03
     f42:	21 ff       	sbrs	r18, 1
     f44:	1b c0       	rjmp	.+54     	; 0xf7c <puts+0x4c>
     f46:	ec 01       	movw	r28, r24
     f48:	00 e0       	ldi	r16, 0x00	; 0
     f4a:	10 e0       	ldi	r17, 0x00	; 0
     f4c:	89 91       	ld	r24, Y+
     f4e:	60 91 c5 02 	lds	r22, 0x02C5
     f52:	70 91 c6 02 	lds	r23, 0x02C6
     f56:	db 01       	movw	r26, r22
     f58:	18 96       	adiw	r26, 0x08	; 8
     f5a:	ed 91       	ld	r30, X+
     f5c:	fc 91       	ld	r31, X
     f5e:	19 97       	sbiw	r26, 0x09	; 9
     f60:	88 23       	and	r24, r24
     f62:	31 f0       	breq	.+12     	; 0xf70 <puts+0x40>
     f64:	19 95       	eicall
     f66:	89 2b       	or	r24, r25
     f68:	89 f3       	breq	.-30     	; 0xf4c <puts+0x1c>
     f6a:	0f ef       	ldi	r16, 0xFF	; 255
     f6c:	1f ef       	ldi	r17, 0xFF	; 255
     f6e:	ee cf       	rjmp	.-36     	; 0xf4c <puts+0x1c>
     f70:	8a e0       	ldi	r24, 0x0A	; 10
     f72:	19 95       	eicall
     f74:	89 2b       	or	r24, r25
     f76:	11 f4       	brne	.+4      	; 0xf7c <puts+0x4c>
     f78:	c8 01       	movw	r24, r16
     f7a:	02 c0       	rjmp	.+4      	; 0xf80 <puts+0x50>
     f7c:	8f ef       	ldi	r24, 0xFF	; 255
     f7e:	9f ef       	ldi	r25, 0xFF	; 255
     f80:	df 91       	pop	r29
     f82:	cf 91       	pop	r28
     f84:	1f 91       	pop	r17
     f86:	0f 91       	pop	r16
     f88:	08 95       	ret

00000f8a <vfprintf>:
     f8a:	2f 92       	push	r2
     f8c:	3f 92       	push	r3
     f8e:	4f 92       	push	r4
     f90:	5f 92       	push	r5
     f92:	6f 92       	push	r6
     f94:	7f 92       	push	r7
     f96:	8f 92       	push	r8
     f98:	9f 92       	push	r9
     f9a:	af 92       	push	r10
     f9c:	bf 92       	push	r11
     f9e:	cf 92       	push	r12
     fa0:	df 92       	push	r13
     fa2:	ef 92       	push	r14
     fa4:	ff 92       	push	r15
     fa6:	0f 93       	push	r16
     fa8:	1f 93       	push	r17
     faa:	cf 93       	push	r28
     fac:	df 93       	push	r29
     fae:	cd b7       	in	r28, 0x3d	; 61
     fb0:	de b7       	in	r29, 0x3e	; 62
     fb2:	2c 97       	sbiw	r28, 0x0c	; 12
     fb4:	0f b6       	in	r0, 0x3f	; 63
     fb6:	f8 94       	cli
     fb8:	de bf       	out	0x3e, r29	; 62
     fba:	0f be       	out	0x3f, r0	; 63
     fbc:	cd bf       	out	0x3d, r28	; 61
     fbe:	7c 01       	movw	r14, r24
     fc0:	6b 01       	movw	r12, r22
     fc2:	8a 01       	movw	r16, r20
     fc4:	fc 01       	movw	r30, r24
     fc6:	17 82       	std	Z+7, r1	; 0x07
     fc8:	16 82       	std	Z+6, r1	; 0x06
     fca:	83 81       	ldd	r24, Z+3	; 0x03
     fcc:	81 ff       	sbrs	r24, 1
     fce:	b0 c1       	rjmp	.+864    	; 0x1330 <vfprintf+0x3a6>
     fd0:	ce 01       	movw	r24, r28
     fd2:	01 96       	adiw	r24, 0x01	; 1
     fd4:	4c 01       	movw	r8, r24
     fd6:	f7 01       	movw	r30, r14
     fd8:	93 81       	ldd	r25, Z+3	; 0x03
     fda:	f6 01       	movw	r30, r12
     fdc:	93 fd       	sbrc	r25, 3
     fde:	85 91       	lpm	r24, Z+
     fe0:	93 ff       	sbrs	r25, 3
     fe2:	81 91       	ld	r24, Z+
     fe4:	6f 01       	movw	r12, r30
     fe6:	88 23       	and	r24, r24
     fe8:	09 f4       	brne	.+2      	; 0xfec <vfprintf+0x62>
     fea:	9e c1       	rjmp	.+828    	; 0x1328 <vfprintf+0x39e>
     fec:	85 32       	cpi	r24, 0x25	; 37
     fee:	39 f4       	brne	.+14     	; 0xffe <vfprintf+0x74>
     ff0:	93 fd       	sbrc	r25, 3
     ff2:	85 91       	lpm	r24, Z+
     ff4:	93 ff       	sbrs	r25, 3
     ff6:	81 91       	ld	r24, Z+
     ff8:	6f 01       	movw	r12, r30
     ffa:	85 32       	cpi	r24, 0x25	; 37
     ffc:	21 f4       	brne	.+8      	; 0x1006 <vfprintf+0x7c>
     ffe:	b7 01       	movw	r22, r14
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	0f d3       	rcall	.+1566   	; 0x1622 <fputc>
    1004:	e8 cf       	rjmp	.-48     	; 0xfd6 <vfprintf+0x4c>
    1006:	51 2c       	mov	r5, r1
    1008:	31 2c       	mov	r3, r1
    100a:	20 e0       	ldi	r18, 0x00	; 0
    100c:	20 32       	cpi	r18, 0x20	; 32
    100e:	a0 f4       	brcc	.+40     	; 0x1038 <vfprintf+0xae>
    1010:	8b 32       	cpi	r24, 0x2B	; 43
    1012:	69 f0       	breq	.+26     	; 0x102e <vfprintf+0xa4>
    1014:	30 f4       	brcc	.+12     	; 0x1022 <vfprintf+0x98>
    1016:	80 32       	cpi	r24, 0x20	; 32
    1018:	59 f0       	breq	.+22     	; 0x1030 <vfprintf+0xa6>
    101a:	83 32       	cpi	r24, 0x23	; 35
    101c:	69 f4       	brne	.+26     	; 0x1038 <vfprintf+0xae>
    101e:	20 61       	ori	r18, 0x10	; 16
    1020:	2c c0       	rjmp	.+88     	; 0x107a <vfprintf+0xf0>
    1022:	8d 32       	cpi	r24, 0x2D	; 45
    1024:	39 f0       	breq	.+14     	; 0x1034 <vfprintf+0xaa>
    1026:	80 33       	cpi	r24, 0x30	; 48
    1028:	39 f4       	brne	.+14     	; 0x1038 <vfprintf+0xae>
    102a:	21 60       	ori	r18, 0x01	; 1
    102c:	26 c0       	rjmp	.+76     	; 0x107a <vfprintf+0xf0>
    102e:	22 60       	ori	r18, 0x02	; 2
    1030:	24 60       	ori	r18, 0x04	; 4
    1032:	23 c0       	rjmp	.+70     	; 0x107a <vfprintf+0xf0>
    1034:	28 60       	ori	r18, 0x08	; 8
    1036:	21 c0       	rjmp	.+66     	; 0x107a <vfprintf+0xf0>
    1038:	27 fd       	sbrc	r18, 7
    103a:	27 c0       	rjmp	.+78     	; 0x108a <vfprintf+0x100>
    103c:	30 ed       	ldi	r19, 0xD0	; 208
    103e:	38 0f       	add	r19, r24
    1040:	3a 30       	cpi	r19, 0x0A	; 10
    1042:	78 f4       	brcc	.+30     	; 0x1062 <vfprintf+0xd8>
    1044:	26 ff       	sbrs	r18, 6
    1046:	06 c0       	rjmp	.+12     	; 0x1054 <vfprintf+0xca>
    1048:	fa e0       	ldi	r31, 0x0A	; 10
    104a:	5f 9e       	mul	r5, r31
    104c:	30 0d       	add	r19, r0
    104e:	11 24       	eor	r1, r1
    1050:	53 2e       	mov	r5, r19
    1052:	13 c0       	rjmp	.+38     	; 0x107a <vfprintf+0xf0>
    1054:	8a e0       	ldi	r24, 0x0A	; 10
    1056:	38 9e       	mul	r3, r24
    1058:	30 0d       	add	r19, r0
    105a:	11 24       	eor	r1, r1
    105c:	33 2e       	mov	r3, r19
    105e:	20 62       	ori	r18, 0x20	; 32
    1060:	0c c0       	rjmp	.+24     	; 0x107a <vfprintf+0xf0>
    1062:	8e 32       	cpi	r24, 0x2E	; 46
    1064:	21 f4       	brne	.+8      	; 0x106e <vfprintf+0xe4>
    1066:	26 fd       	sbrc	r18, 6
    1068:	5f c1       	rjmp	.+702    	; 0x1328 <vfprintf+0x39e>
    106a:	20 64       	ori	r18, 0x40	; 64
    106c:	06 c0       	rjmp	.+12     	; 0x107a <vfprintf+0xf0>
    106e:	8c 36       	cpi	r24, 0x6C	; 108
    1070:	11 f4       	brne	.+4      	; 0x1076 <vfprintf+0xec>
    1072:	20 68       	ori	r18, 0x80	; 128
    1074:	02 c0       	rjmp	.+4      	; 0x107a <vfprintf+0xf0>
    1076:	88 36       	cpi	r24, 0x68	; 104
    1078:	41 f4       	brne	.+16     	; 0x108a <vfprintf+0x100>
    107a:	f6 01       	movw	r30, r12
    107c:	93 fd       	sbrc	r25, 3
    107e:	85 91       	lpm	r24, Z+
    1080:	93 ff       	sbrs	r25, 3
    1082:	81 91       	ld	r24, Z+
    1084:	6f 01       	movw	r12, r30
    1086:	81 11       	cpse	r24, r1
    1088:	c1 cf       	rjmp	.-126    	; 0x100c <vfprintf+0x82>
    108a:	98 2f       	mov	r25, r24
    108c:	9f 7d       	andi	r25, 0xDF	; 223
    108e:	95 54       	subi	r25, 0x45	; 69
    1090:	93 30       	cpi	r25, 0x03	; 3
    1092:	28 f4       	brcc	.+10     	; 0x109e <vfprintf+0x114>
    1094:	0c 5f       	subi	r16, 0xFC	; 252
    1096:	1f 4f       	sbci	r17, 0xFF	; 255
    1098:	ff e3       	ldi	r31, 0x3F	; 63
    109a:	f9 83       	std	Y+1, r31	; 0x01
    109c:	0d c0       	rjmp	.+26     	; 0x10b8 <vfprintf+0x12e>
    109e:	83 36       	cpi	r24, 0x63	; 99
    10a0:	31 f0       	breq	.+12     	; 0x10ae <vfprintf+0x124>
    10a2:	83 37       	cpi	r24, 0x73	; 115
    10a4:	71 f0       	breq	.+28     	; 0x10c2 <vfprintf+0x138>
    10a6:	83 35       	cpi	r24, 0x53	; 83
    10a8:	09 f0       	breq	.+2      	; 0x10ac <vfprintf+0x122>
    10aa:	57 c0       	rjmp	.+174    	; 0x115a <vfprintf+0x1d0>
    10ac:	21 c0       	rjmp	.+66     	; 0x10f0 <vfprintf+0x166>
    10ae:	f8 01       	movw	r30, r16
    10b0:	80 81       	ld	r24, Z
    10b2:	89 83       	std	Y+1, r24	; 0x01
    10b4:	0e 5f       	subi	r16, 0xFE	; 254
    10b6:	1f 4f       	sbci	r17, 0xFF	; 255
    10b8:	44 24       	eor	r4, r4
    10ba:	43 94       	inc	r4
    10bc:	51 2c       	mov	r5, r1
    10be:	54 01       	movw	r10, r8
    10c0:	14 c0       	rjmp	.+40     	; 0x10ea <vfprintf+0x160>
    10c2:	38 01       	movw	r6, r16
    10c4:	f2 e0       	ldi	r31, 0x02	; 2
    10c6:	6f 0e       	add	r6, r31
    10c8:	71 1c       	adc	r7, r1
    10ca:	f8 01       	movw	r30, r16
    10cc:	a0 80       	ld	r10, Z
    10ce:	b1 80       	ldd	r11, Z+1	; 0x01
    10d0:	26 ff       	sbrs	r18, 6
    10d2:	03 c0       	rjmp	.+6      	; 0x10da <vfprintf+0x150>
    10d4:	65 2d       	mov	r22, r5
    10d6:	70 e0       	ldi	r23, 0x00	; 0
    10d8:	02 c0       	rjmp	.+4      	; 0x10de <vfprintf+0x154>
    10da:	6f ef       	ldi	r22, 0xFF	; 255
    10dc:	7f ef       	ldi	r23, 0xFF	; 255
    10de:	c5 01       	movw	r24, r10
    10e0:	2c 87       	std	Y+12, r18	; 0x0c
    10e2:	94 d2       	rcall	.+1320   	; 0x160c <strnlen>
    10e4:	2c 01       	movw	r4, r24
    10e6:	83 01       	movw	r16, r6
    10e8:	2c 85       	ldd	r18, Y+12	; 0x0c
    10ea:	2f 77       	andi	r18, 0x7F	; 127
    10ec:	22 2e       	mov	r2, r18
    10ee:	16 c0       	rjmp	.+44     	; 0x111c <vfprintf+0x192>
    10f0:	38 01       	movw	r6, r16
    10f2:	f2 e0       	ldi	r31, 0x02	; 2
    10f4:	6f 0e       	add	r6, r31
    10f6:	71 1c       	adc	r7, r1
    10f8:	f8 01       	movw	r30, r16
    10fa:	a0 80       	ld	r10, Z
    10fc:	b1 80       	ldd	r11, Z+1	; 0x01
    10fe:	26 ff       	sbrs	r18, 6
    1100:	03 c0       	rjmp	.+6      	; 0x1108 <vfprintf+0x17e>
    1102:	65 2d       	mov	r22, r5
    1104:	70 e0       	ldi	r23, 0x00	; 0
    1106:	02 c0       	rjmp	.+4      	; 0x110c <vfprintf+0x182>
    1108:	6f ef       	ldi	r22, 0xFF	; 255
    110a:	7f ef       	ldi	r23, 0xFF	; 255
    110c:	c5 01       	movw	r24, r10
    110e:	2c 87       	std	Y+12, r18	; 0x0c
    1110:	6b d2       	rcall	.+1238   	; 0x15e8 <strnlen_P>
    1112:	2c 01       	movw	r4, r24
    1114:	2c 85       	ldd	r18, Y+12	; 0x0c
    1116:	20 68       	ori	r18, 0x80	; 128
    1118:	22 2e       	mov	r2, r18
    111a:	83 01       	movw	r16, r6
    111c:	23 fc       	sbrc	r2, 3
    111e:	19 c0       	rjmp	.+50     	; 0x1152 <vfprintf+0x1c8>
    1120:	83 2d       	mov	r24, r3
    1122:	90 e0       	ldi	r25, 0x00	; 0
    1124:	48 16       	cp	r4, r24
    1126:	59 06       	cpc	r5, r25
    1128:	a0 f4       	brcc	.+40     	; 0x1152 <vfprintf+0x1c8>
    112a:	b7 01       	movw	r22, r14
    112c:	80 e2       	ldi	r24, 0x20	; 32
    112e:	90 e0       	ldi	r25, 0x00	; 0
    1130:	78 d2       	rcall	.+1264   	; 0x1622 <fputc>
    1132:	3a 94       	dec	r3
    1134:	f5 cf       	rjmp	.-22     	; 0x1120 <vfprintf+0x196>
    1136:	f5 01       	movw	r30, r10
    1138:	27 fc       	sbrc	r2, 7
    113a:	85 91       	lpm	r24, Z+
    113c:	27 fe       	sbrs	r2, 7
    113e:	81 91       	ld	r24, Z+
    1140:	5f 01       	movw	r10, r30
    1142:	b7 01       	movw	r22, r14
    1144:	90 e0       	ldi	r25, 0x00	; 0
    1146:	6d d2       	rcall	.+1242   	; 0x1622 <fputc>
    1148:	31 10       	cpse	r3, r1
    114a:	3a 94       	dec	r3
    114c:	f1 e0       	ldi	r31, 0x01	; 1
    114e:	4f 1a       	sub	r4, r31
    1150:	51 08       	sbc	r5, r1
    1152:	41 14       	cp	r4, r1
    1154:	51 04       	cpc	r5, r1
    1156:	79 f7       	brne	.-34     	; 0x1136 <vfprintf+0x1ac>
    1158:	de c0       	rjmp	.+444    	; 0x1316 <vfprintf+0x38c>
    115a:	84 36       	cpi	r24, 0x64	; 100
    115c:	11 f0       	breq	.+4      	; 0x1162 <vfprintf+0x1d8>
    115e:	89 36       	cpi	r24, 0x69	; 105
    1160:	31 f5       	brne	.+76     	; 0x11ae <vfprintf+0x224>
    1162:	f8 01       	movw	r30, r16
    1164:	27 ff       	sbrs	r18, 7
    1166:	07 c0       	rjmp	.+14     	; 0x1176 <vfprintf+0x1ec>
    1168:	60 81       	ld	r22, Z
    116a:	71 81       	ldd	r23, Z+1	; 0x01
    116c:	82 81       	ldd	r24, Z+2	; 0x02
    116e:	93 81       	ldd	r25, Z+3	; 0x03
    1170:	0c 5f       	subi	r16, 0xFC	; 252
    1172:	1f 4f       	sbci	r17, 0xFF	; 255
    1174:	08 c0       	rjmp	.+16     	; 0x1186 <vfprintf+0x1fc>
    1176:	60 81       	ld	r22, Z
    1178:	71 81       	ldd	r23, Z+1	; 0x01
    117a:	88 27       	eor	r24, r24
    117c:	77 fd       	sbrc	r23, 7
    117e:	80 95       	com	r24
    1180:	98 2f       	mov	r25, r24
    1182:	0e 5f       	subi	r16, 0xFE	; 254
    1184:	1f 4f       	sbci	r17, 0xFF	; 255
    1186:	2f 76       	andi	r18, 0x6F	; 111
    1188:	b2 2e       	mov	r11, r18
    118a:	97 ff       	sbrs	r25, 7
    118c:	09 c0       	rjmp	.+18     	; 0x11a0 <vfprintf+0x216>
    118e:	90 95       	com	r25
    1190:	80 95       	com	r24
    1192:	70 95       	com	r23
    1194:	61 95       	neg	r22
    1196:	7f 4f       	sbci	r23, 0xFF	; 255
    1198:	8f 4f       	sbci	r24, 0xFF	; 255
    119a:	9f 4f       	sbci	r25, 0xFF	; 255
    119c:	20 68       	ori	r18, 0x80	; 128
    119e:	b2 2e       	mov	r11, r18
    11a0:	2a e0       	ldi	r18, 0x0A	; 10
    11a2:	30 e0       	ldi	r19, 0x00	; 0
    11a4:	a4 01       	movw	r20, r8
    11a6:	6f d2       	rcall	.+1246   	; 0x1686 <__ultoa_invert>
    11a8:	a8 2e       	mov	r10, r24
    11aa:	a8 18       	sub	r10, r8
    11ac:	43 c0       	rjmp	.+134    	; 0x1234 <vfprintf+0x2aa>
    11ae:	85 37       	cpi	r24, 0x75	; 117
    11b0:	29 f4       	brne	.+10     	; 0x11bc <vfprintf+0x232>
    11b2:	2f 7e       	andi	r18, 0xEF	; 239
    11b4:	b2 2e       	mov	r11, r18
    11b6:	2a e0       	ldi	r18, 0x0A	; 10
    11b8:	30 e0       	ldi	r19, 0x00	; 0
    11ba:	25 c0       	rjmp	.+74     	; 0x1206 <vfprintf+0x27c>
    11bc:	f2 2f       	mov	r31, r18
    11be:	f9 7f       	andi	r31, 0xF9	; 249
    11c0:	bf 2e       	mov	r11, r31
    11c2:	8f 36       	cpi	r24, 0x6F	; 111
    11c4:	c1 f0       	breq	.+48     	; 0x11f6 <vfprintf+0x26c>
    11c6:	18 f4       	brcc	.+6      	; 0x11ce <vfprintf+0x244>
    11c8:	88 35       	cpi	r24, 0x58	; 88
    11ca:	79 f0       	breq	.+30     	; 0x11ea <vfprintf+0x260>
    11cc:	ad c0       	rjmp	.+346    	; 0x1328 <vfprintf+0x39e>
    11ce:	80 37       	cpi	r24, 0x70	; 112
    11d0:	19 f0       	breq	.+6      	; 0x11d8 <vfprintf+0x24e>
    11d2:	88 37       	cpi	r24, 0x78	; 120
    11d4:	21 f0       	breq	.+8      	; 0x11de <vfprintf+0x254>
    11d6:	a8 c0       	rjmp	.+336    	; 0x1328 <vfprintf+0x39e>
    11d8:	2f 2f       	mov	r18, r31
    11da:	20 61       	ori	r18, 0x10	; 16
    11dc:	b2 2e       	mov	r11, r18
    11de:	b4 fe       	sbrs	r11, 4
    11e0:	0d c0       	rjmp	.+26     	; 0x11fc <vfprintf+0x272>
    11e2:	8b 2d       	mov	r24, r11
    11e4:	84 60       	ori	r24, 0x04	; 4
    11e6:	b8 2e       	mov	r11, r24
    11e8:	09 c0       	rjmp	.+18     	; 0x11fc <vfprintf+0x272>
    11ea:	24 ff       	sbrs	r18, 4
    11ec:	0a c0       	rjmp	.+20     	; 0x1202 <vfprintf+0x278>
    11ee:	9f 2f       	mov	r25, r31
    11f0:	96 60       	ori	r25, 0x06	; 6
    11f2:	b9 2e       	mov	r11, r25
    11f4:	06 c0       	rjmp	.+12     	; 0x1202 <vfprintf+0x278>
    11f6:	28 e0       	ldi	r18, 0x08	; 8
    11f8:	30 e0       	ldi	r19, 0x00	; 0
    11fa:	05 c0       	rjmp	.+10     	; 0x1206 <vfprintf+0x27c>
    11fc:	20 e1       	ldi	r18, 0x10	; 16
    11fe:	30 e0       	ldi	r19, 0x00	; 0
    1200:	02 c0       	rjmp	.+4      	; 0x1206 <vfprintf+0x27c>
    1202:	20 e1       	ldi	r18, 0x10	; 16
    1204:	32 e0       	ldi	r19, 0x02	; 2
    1206:	f8 01       	movw	r30, r16
    1208:	b7 fe       	sbrs	r11, 7
    120a:	07 c0       	rjmp	.+14     	; 0x121a <vfprintf+0x290>
    120c:	60 81       	ld	r22, Z
    120e:	71 81       	ldd	r23, Z+1	; 0x01
    1210:	82 81       	ldd	r24, Z+2	; 0x02
    1212:	93 81       	ldd	r25, Z+3	; 0x03
    1214:	0c 5f       	subi	r16, 0xFC	; 252
    1216:	1f 4f       	sbci	r17, 0xFF	; 255
    1218:	06 c0       	rjmp	.+12     	; 0x1226 <vfprintf+0x29c>
    121a:	60 81       	ld	r22, Z
    121c:	71 81       	ldd	r23, Z+1	; 0x01
    121e:	80 e0       	ldi	r24, 0x00	; 0
    1220:	90 e0       	ldi	r25, 0x00	; 0
    1222:	0e 5f       	subi	r16, 0xFE	; 254
    1224:	1f 4f       	sbci	r17, 0xFF	; 255
    1226:	a4 01       	movw	r20, r8
    1228:	2e d2       	rcall	.+1116   	; 0x1686 <__ultoa_invert>
    122a:	a8 2e       	mov	r10, r24
    122c:	a8 18       	sub	r10, r8
    122e:	fb 2d       	mov	r31, r11
    1230:	ff 77       	andi	r31, 0x7F	; 127
    1232:	bf 2e       	mov	r11, r31
    1234:	b6 fe       	sbrs	r11, 6
    1236:	0b c0       	rjmp	.+22     	; 0x124e <vfprintf+0x2c4>
    1238:	2b 2d       	mov	r18, r11
    123a:	2e 7f       	andi	r18, 0xFE	; 254
    123c:	a5 14       	cp	r10, r5
    123e:	50 f4       	brcc	.+20     	; 0x1254 <vfprintf+0x2ca>
    1240:	b4 fe       	sbrs	r11, 4
    1242:	0a c0       	rjmp	.+20     	; 0x1258 <vfprintf+0x2ce>
    1244:	b2 fc       	sbrc	r11, 2
    1246:	08 c0       	rjmp	.+16     	; 0x1258 <vfprintf+0x2ce>
    1248:	2b 2d       	mov	r18, r11
    124a:	2e 7e       	andi	r18, 0xEE	; 238
    124c:	05 c0       	rjmp	.+10     	; 0x1258 <vfprintf+0x2ce>
    124e:	7a 2c       	mov	r7, r10
    1250:	2b 2d       	mov	r18, r11
    1252:	03 c0       	rjmp	.+6      	; 0x125a <vfprintf+0x2d0>
    1254:	7a 2c       	mov	r7, r10
    1256:	01 c0       	rjmp	.+2      	; 0x125a <vfprintf+0x2d0>
    1258:	75 2c       	mov	r7, r5
    125a:	24 ff       	sbrs	r18, 4
    125c:	0d c0       	rjmp	.+26     	; 0x1278 <vfprintf+0x2ee>
    125e:	fe 01       	movw	r30, r28
    1260:	ea 0d       	add	r30, r10
    1262:	f1 1d       	adc	r31, r1
    1264:	80 81       	ld	r24, Z
    1266:	80 33       	cpi	r24, 0x30	; 48
    1268:	11 f4       	brne	.+4      	; 0x126e <vfprintf+0x2e4>
    126a:	29 7e       	andi	r18, 0xE9	; 233
    126c:	09 c0       	rjmp	.+18     	; 0x1280 <vfprintf+0x2f6>
    126e:	22 ff       	sbrs	r18, 2
    1270:	06 c0       	rjmp	.+12     	; 0x127e <vfprintf+0x2f4>
    1272:	73 94       	inc	r7
    1274:	73 94       	inc	r7
    1276:	04 c0       	rjmp	.+8      	; 0x1280 <vfprintf+0x2f6>
    1278:	82 2f       	mov	r24, r18
    127a:	86 78       	andi	r24, 0x86	; 134
    127c:	09 f0       	breq	.+2      	; 0x1280 <vfprintf+0x2f6>
    127e:	73 94       	inc	r7
    1280:	23 fd       	sbrc	r18, 3
    1282:	12 c0       	rjmp	.+36     	; 0x12a8 <vfprintf+0x31e>
    1284:	20 ff       	sbrs	r18, 0
    1286:	06 c0       	rjmp	.+12     	; 0x1294 <vfprintf+0x30a>
    1288:	5a 2c       	mov	r5, r10
    128a:	73 14       	cp	r7, r3
    128c:	18 f4       	brcc	.+6      	; 0x1294 <vfprintf+0x30a>
    128e:	53 0c       	add	r5, r3
    1290:	57 18       	sub	r5, r7
    1292:	73 2c       	mov	r7, r3
    1294:	73 14       	cp	r7, r3
    1296:	60 f4       	brcc	.+24     	; 0x12b0 <vfprintf+0x326>
    1298:	b7 01       	movw	r22, r14
    129a:	80 e2       	ldi	r24, 0x20	; 32
    129c:	90 e0       	ldi	r25, 0x00	; 0
    129e:	2c 87       	std	Y+12, r18	; 0x0c
    12a0:	c0 d1       	rcall	.+896    	; 0x1622 <fputc>
    12a2:	73 94       	inc	r7
    12a4:	2c 85       	ldd	r18, Y+12	; 0x0c
    12a6:	f6 cf       	rjmp	.-20     	; 0x1294 <vfprintf+0x30a>
    12a8:	73 14       	cp	r7, r3
    12aa:	10 f4       	brcc	.+4      	; 0x12b0 <vfprintf+0x326>
    12ac:	37 18       	sub	r3, r7
    12ae:	01 c0       	rjmp	.+2      	; 0x12b2 <vfprintf+0x328>
    12b0:	31 2c       	mov	r3, r1
    12b2:	24 ff       	sbrs	r18, 4
    12b4:	11 c0       	rjmp	.+34     	; 0x12d8 <vfprintf+0x34e>
    12b6:	b7 01       	movw	r22, r14
    12b8:	80 e3       	ldi	r24, 0x30	; 48
    12ba:	90 e0       	ldi	r25, 0x00	; 0
    12bc:	2c 87       	std	Y+12, r18	; 0x0c
    12be:	b1 d1       	rcall	.+866    	; 0x1622 <fputc>
    12c0:	2c 85       	ldd	r18, Y+12	; 0x0c
    12c2:	22 ff       	sbrs	r18, 2
    12c4:	16 c0       	rjmp	.+44     	; 0x12f2 <vfprintf+0x368>
    12c6:	21 ff       	sbrs	r18, 1
    12c8:	03 c0       	rjmp	.+6      	; 0x12d0 <vfprintf+0x346>
    12ca:	88 e5       	ldi	r24, 0x58	; 88
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	02 c0       	rjmp	.+4      	; 0x12d4 <vfprintf+0x34a>
    12d0:	88 e7       	ldi	r24, 0x78	; 120
    12d2:	90 e0       	ldi	r25, 0x00	; 0
    12d4:	b7 01       	movw	r22, r14
    12d6:	0c c0       	rjmp	.+24     	; 0x12f0 <vfprintf+0x366>
    12d8:	82 2f       	mov	r24, r18
    12da:	86 78       	andi	r24, 0x86	; 134
    12dc:	51 f0       	breq	.+20     	; 0x12f2 <vfprintf+0x368>
    12de:	21 fd       	sbrc	r18, 1
    12e0:	02 c0       	rjmp	.+4      	; 0x12e6 <vfprintf+0x35c>
    12e2:	80 e2       	ldi	r24, 0x20	; 32
    12e4:	01 c0       	rjmp	.+2      	; 0x12e8 <vfprintf+0x35e>
    12e6:	8b e2       	ldi	r24, 0x2B	; 43
    12e8:	27 fd       	sbrc	r18, 7
    12ea:	8d e2       	ldi	r24, 0x2D	; 45
    12ec:	b7 01       	movw	r22, r14
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	98 d1       	rcall	.+816    	; 0x1622 <fputc>
    12f2:	a5 14       	cp	r10, r5
    12f4:	30 f4       	brcc	.+12     	; 0x1302 <vfprintf+0x378>
    12f6:	b7 01       	movw	r22, r14
    12f8:	80 e3       	ldi	r24, 0x30	; 48
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	92 d1       	rcall	.+804    	; 0x1622 <fputc>
    12fe:	5a 94       	dec	r5
    1300:	f8 cf       	rjmp	.-16     	; 0x12f2 <vfprintf+0x368>
    1302:	aa 94       	dec	r10
    1304:	f4 01       	movw	r30, r8
    1306:	ea 0d       	add	r30, r10
    1308:	f1 1d       	adc	r31, r1
    130a:	80 81       	ld	r24, Z
    130c:	b7 01       	movw	r22, r14
    130e:	90 e0       	ldi	r25, 0x00	; 0
    1310:	88 d1       	rcall	.+784    	; 0x1622 <fputc>
    1312:	a1 10       	cpse	r10, r1
    1314:	f6 cf       	rjmp	.-20     	; 0x1302 <vfprintf+0x378>
    1316:	33 20       	and	r3, r3
    1318:	09 f4       	brne	.+2      	; 0x131c <vfprintf+0x392>
    131a:	5d ce       	rjmp	.-838    	; 0xfd6 <vfprintf+0x4c>
    131c:	b7 01       	movw	r22, r14
    131e:	80 e2       	ldi	r24, 0x20	; 32
    1320:	90 e0       	ldi	r25, 0x00	; 0
    1322:	7f d1       	rcall	.+766    	; 0x1622 <fputc>
    1324:	3a 94       	dec	r3
    1326:	f7 cf       	rjmp	.-18     	; 0x1316 <vfprintf+0x38c>
    1328:	f7 01       	movw	r30, r14
    132a:	86 81       	ldd	r24, Z+6	; 0x06
    132c:	97 81       	ldd	r25, Z+7	; 0x07
    132e:	02 c0       	rjmp	.+4      	; 0x1334 <vfprintf+0x3aa>
    1330:	8f ef       	ldi	r24, 0xFF	; 255
    1332:	9f ef       	ldi	r25, 0xFF	; 255
    1334:	2c 96       	adiw	r28, 0x0c	; 12
    1336:	0f b6       	in	r0, 0x3f	; 63
    1338:	f8 94       	cli
    133a:	de bf       	out	0x3e, r29	; 62
    133c:	0f be       	out	0x3f, r0	; 63
    133e:	cd bf       	out	0x3d, r28	; 61
    1340:	df 91       	pop	r29
    1342:	cf 91       	pop	r28
    1344:	1f 91       	pop	r17
    1346:	0f 91       	pop	r16
    1348:	ff 90       	pop	r15
    134a:	ef 90       	pop	r14
    134c:	df 90       	pop	r13
    134e:	cf 90       	pop	r12
    1350:	bf 90       	pop	r11
    1352:	af 90       	pop	r10
    1354:	9f 90       	pop	r9
    1356:	8f 90       	pop	r8
    1358:	7f 90       	pop	r7
    135a:	6f 90       	pop	r6
    135c:	5f 90       	pop	r5
    135e:	4f 90       	pop	r4
    1360:	3f 90       	pop	r3
    1362:	2f 90       	pop	r2
    1364:	08 95       	ret

00001366 <calloc>:
    1366:	0f 93       	push	r16
    1368:	1f 93       	push	r17
    136a:	cf 93       	push	r28
    136c:	df 93       	push	r29
    136e:	86 9f       	mul	r24, r22
    1370:	80 01       	movw	r16, r0
    1372:	87 9f       	mul	r24, r23
    1374:	10 0d       	add	r17, r0
    1376:	96 9f       	mul	r25, r22
    1378:	10 0d       	add	r17, r0
    137a:	11 24       	eor	r1, r1
    137c:	c8 01       	movw	r24, r16
    137e:	0d d0       	rcall	.+26     	; 0x139a <malloc>
    1380:	ec 01       	movw	r28, r24
    1382:	00 97       	sbiw	r24, 0x00	; 0
    1384:	21 f0       	breq	.+8      	; 0x138e <calloc+0x28>
    1386:	a8 01       	movw	r20, r16
    1388:	60 e0       	ldi	r22, 0x00	; 0
    138a:	70 e0       	ldi	r23, 0x00	; 0
    138c:	38 d1       	rcall	.+624    	; 0x15fe <memset>
    138e:	ce 01       	movw	r24, r28
    1390:	df 91       	pop	r29
    1392:	cf 91       	pop	r28
    1394:	1f 91       	pop	r17
    1396:	0f 91       	pop	r16
    1398:	08 95       	ret

0000139a <malloc>:
    139a:	cf 93       	push	r28
    139c:	df 93       	push	r29
    139e:	82 30       	cpi	r24, 0x02	; 2
    13a0:	91 05       	cpc	r25, r1
    13a2:	10 f4       	brcc	.+4      	; 0x13a8 <malloc+0xe>
    13a4:	82 e0       	ldi	r24, 0x02	; 2
    13a6:	90 e0       	ldi	r25, 0x00	; 0
    13a8:	e0 91 cb 02 	lds	r30, 0x02CB
    13ac:	f0 91 cc 02 	lds	r31, 0x02CC
    13b0:	20 e0       	ldi	r18, 0x00	; 0
    13b2:	30 e0       	ldi	r19, 0x00	; 0
    13b4:	a0 e0       	ldi	r26, 0x00	; 0
    13b6:	b0 e0       	ldi	r27, 0x00	; 0
    13b8:	30 97       	sbiw	r30, 0x00	; 0
    13ba:	39 f1       	breq	.+78     	; 0x140a <malloc+0x70>
    13bc:	40 81       	ld	r20, Z
    13be:	51 81       	ldd	r21, Z+1	; 0x01
    13c0:	48 17       	cp	r20, r24
    13c2:	59 07       	cpc	r21, r25
    13c4:	b8 f0       	brcs	.+46     	; 0x13f4 <malloc+0x5a>
    13c6:	48 17       	cp	r20, r24
    13c8:	59 07       	cpc	r21, r25
    13ca:	71 f4       	brne	.+28     	; 0x13e8 <malloc+0x4e>
    13cc:	82 81       	ldd	r24, Z+2	; 0x02
    13ce:	93 81       	ldd	r25, Z+3	; 0x03
    13d0:	10 97       	sbiw	r26, 0x00	; 0
    13d2:	29 f0       	breq	.+10     	; 0x13de <malloc+0x44>
    13d4:	13 96       	adiw	r26, 0x03	; 3
    13d6:	9c 93       	st	X, r25
    13d8:	8e 93       	st	-X, r24
    13da:	12 97       	sbiw	r26, 0x02	; 2
    13dc:	2c c0       	rjmp	.+88     	; 0x1436 <malloc+0x9c>
    13de:	90 93 cc 02 	sts	0x02CC, r25
    13e2:	80 93 cb 02 	sts	0x02CB, r24
    13e6:	27 c0       	rjmp	.+78     	; 0x1436 <malloc+0x9c>
    13e8:	21 15       	cp	r18, r1
    13ea:	31 05       	cpc	r19, r1
    13ec:	31 f0       	breq	.+12     	; 0x13fa <malloc+0x60>
    13ee:	42 17       	cp	r20, r18
    13f0:	53 07       	cpc	r21, r19
    13f2:	18 f0       	brcs	.+6      	; 0x13fa <malloc+0x60>
    13f4:	a9 01       	movw	r20, r18
    13f6:	db 01       	movw	r26, r22
    13f8:	01 c0       	rjmp	.+2      	; 0x13fc <malloc+0x62>
    13fa:	ef 01       	movw	r28, r30
    13fc:	9a 01       	movw	r18, r20
    13fe:	bd 01       	movw	r22, r26
    1400:	df 01       	movw	r26, r30
    1402:	02 80       	ldd	r0, Z+2	; 0x02
    1404:	f3 81       	ldd	r31, Z+3	; 0x03
    1406:	e0 2d       	mov	r30, r0
    1408:	d7 cf       	rjmp	.-82     	; 0x13b8 <malloc+0x1e>
    140a:	21 15       	cp	r18, r1
    140c:	31 05       	cpc	r19, r1
    140e:	f9 f0       	breq	.+62     	; 0x144e <malloc+0xb4>
    1410:	28 1b       	sub	r18, r24
    1412:	39 0b       	sbc	r19, r25
    1414:	24 30       	cpi	r18, 0x04	; 4
    1416:	31 05       	cpc	r19, r1
    1418:	80 f4       	brcc	.+32     	; 0x143a <malloc+0xa0>
    141a:	8a 81       	ldd	r24, Y+2	; 0x02
    141c:	9b 81       	ldd	r25, Y+3	; 0x03
    141e:	61 15       	cp	r22, r1
    1420:	71 05       	cpc	r23, r1
    1422:	21 f0       	breq	.+8      	; 0x142c <malloc+0x92>
    1424:	fb 01       	movw	r30, r22
    1426:	93 83       	std	Z+3, r25	; 0x03
    1428:	82 83       	std	Z+2, r24	; 0x02
    142a:	04 c0       	rjmp	.+8      	; 0x1434 <malloc+0x9a>
    142c:	90 93 cc 02 	sts	0x02CC, r25
    1430:	80 93 cb 02 	sts	0x02CB, r24
    1434:	fe 01       	movw	r30, r28
    1436:	32 96       	adiw	r30, 0x02	; 2
    1438:	44 c0       	rjmp	.+136    	; 0x14c2 <malloc+0x128>
    143a:	fe 01       	movw	r30, r28
    143c:	e2 0f       	add	r30, r18
    143e:	f3 1f       	adc	r31, r19
    1440:	81 93       	st	Z+, r24
    1442:	91 93       	st	Z+, r25
    1444:	22 50       	subi	r18, 0x02	; 2
    1446:	31 09       	sbc	r19, r1
    1448:	39 83       	std	Y+1, r19	; 0x01
    144a:	28 83       	st	Y, r18
    144c:	3a c0       	rjmp	.+116    	; 0x14c2 <malloc+0x128>
    144e:	20 91 c9 02 	lds	r18, 0x02C9
    1452:	30 91 ca 02 	lds	r19, 0x02CA
    1456:	23 2b       	or	r18, r19
    1458:	41 f4       	brne	.+16     	; 0x146a <malloc+0xd0>
    145a:	20 91 02 02 	lds	r18, 0x0202
    145e:	30 91 03 02 	lds	r19, 0x0203
    1462:	30 93 ca 02 	sts	0x02CA, r19
    1466:	20 93 c9 02 	sts	0x02C9, r18
    146a:	20 91 00 02 	lds	r18, 0x0200
    146e:	30 91 01 02 	lds	r19, 0x0201
    1472:	21 15       	cp	r18, r1
    1474:	31 05       	cpc	r19, r1
    1476:	41 f4       	brne	.+16     	; 0x1488 <malloc+0xee>
    1478:	2d b7       	in	r18, 0x3d	; 61
    147a:	3e b7       	in	r19, 0x3e	; 62
    147c:	40 91 04 02 	lds	r20, 0x0204
    1480:	50 91 05 02 	lds	r21, 0x0205
    1484:	24 1b       	sub	r18, r20
    1486:	35 0b       	sbc	r19, r21
    1488:	e0 91 c9 02 	lds	r30, 0x02C9
    148c:	f0 91 ca 02 	lds	r31, 0x02CA
    1490:	e2 17       	cp	r30, r18
    1492:	f3 07       	cpc	r31, r19
    1494:	a0 f4       	brcc	.+40     	; 0x14be <malloc+0x124>
    1496:	2e 1b       	sub	r18, r30
    1498:	3f 0b       	sbc	r19, r31
    149a:	28 17       	cp	r18, r24
    149c:	39 07       	cpc	r19, r25
    149e:	78 f0       	brcs	.+30     	; 0x14be <malloc+0x124>
    14a0:	ac 01       	movw	r20, r24
    14a2:	4e 5f       	subi	r20, 0xFE	; 254
    14a4:	5f 4f       	sbci	r21, 0xFF	; 255
    14a6:	24 17       	cp	r18, r20
    14a8:	35 07       	cpc	r19, r21
    14aa:	48 f0       	brcs	.+18     	; 0x14be <malloc+0x124>
    14ac:	4e 0f       	add	r20, r30
    14ae:	5f 1f       	adc	r21, r31
    14b0:	50 93 ca 02 	sts	0x02CA, r21
    14b4:	40 93 c9 02 	sts	0x02C9, r20
    14b8:	81 93       	st	Z+, r24
    14ba:	91 93       	st	Z+, r25
    14bc:	02 c0       	rjmp	.+4      	; 0x14c2 <malloc+0x128>
    14be:	e0 e0       	ldi	r30, 0x00	; 0
    14c0:	f0 e0       	ldi	r31, 0x00	; 0
    14c2:	cf 01       	movw	r24, r30
    14c4:	df 91       	pop	r29
    14c6:	cf 91       	pop	r28
    14c8:	08 95       	ret

000014ca <free>:
    14ca:	cf 93       	push	r28
    14cc:	df 93       	push	r29
    14ce:	00 97       	sbiw	r24, 0x00	; 0
    14d0:	09 f4       	brne	.+2      	; 0x14d4 <free+0xa>
    14d2:	87 c0       	rjmp	.+270    	; 0x15e2 <free+0x118>
    14d4:	fc 01       	movw	r30, r24
    14d6:	32 97       	sbiw	r30, 0x02	; 2
    14d8:	13 82       	std	Z+3, r1	; 0x03
    14da:	12 82       	std	Z+2, r1	; 0x02
    14dc:	c0 91 cb 02 	lds	r28, 0x02CB
    14e0:	d0 91 cc 02 	lds	r29, 0x02CC
    14e4:	20 97       	sbiw	r28, 0x00	; 0
    14e6:	81 f4       	brne	.+32     	; 0x1508 <free+0x3e>
    14e8:	20 81       	ld	r18, Z
    14ea:	31 81       	ldd	r19, Z+1	; 0x01
    14ec:	28 0f       	add	r18, r24
    14ee:	39 1f       	adc	r19, r25
    14f0:	80 91 c9 02 	lds	r24, 0x02C9
    14f4:	90 91 ca 02 	lds	r25, 0x02CA
    14f8:	82 17       	cp	r24, r18
    14fa:	93 07       	cpc	r25, r19
    14fc:	79 f5       	brne	.+94     	; 0x155c <free+0x92>
    14fe:	f0 93 ca 02 	sts	0x02CA, r31
    1502:	e0 93 c9 02 	sts	0x02C9, r30
    1506:	6d c0       	rjmp	.+218    	; 0x15e2 <free+0x118>
    1508:	de 01       	movw	r26, r28
    150a:	20 e0       	ldi	r18, 0x00	; 0
    150c:	30 e0       	ldi	r19, 0x00	; 0
    150e:	ae 17       	cp	r26, r30
    1510:	bf 07       	cpc	r27, r31
    1512:	50 f4       	brcc	.+20     	; 0x1528 <free+0x5e>
    1514:	12 96       	adiw	r26, 0x02	; 2
    1516:	4d 91       	ld	r20, X+
    1518:	5c 91       	ld	r21, X
    151a:	13 97       	sbiw	r26, 0x03	; 3
    151c:	9d 01       	movw	r18, r26
    151e:	41 15       	cp	r20, r1
    1520:	51 05       	cpc	r21, r1
    1522:	09 f1       	breq	.+66     	; 0x1566 <free+0x9c>
    1524:	da 01       	movw	r26, r20
    1526:	f3 cf       	rjmp	.-26     	; 0x150e <free+0x44>
    1528:	b3 83       	std	Z+3, r27	; 0x03
    152a:	a2 83       	std	Z+2, r26	; 0x02
    152c:	40 81       	ld	r20, Z
    152e:	51 81       	ldd	r21, Z+1	; 0x01
    1530:	84 0f       	add	r24, r20
    1532:	95 1f       	adc	r25, r21
    1534:	8a 17       	cp	r24, r26
    1536:	9b 07       	cpc	r25, r27
    1538:	71 f4       	brne	.+28     	; 0x1556 <free+0x8c>
    153a:	8d 91       	ld	r24, X+
    153c:	9c 91       	ld	r25, X
    153e:	11 97       	sbiw	r26, 0x01	; 1
    1540:	84 0f       	add	r24, r20
    1542:	95 1f       	adc	r25, r21
    1544:	02 96       	adiw	r24, 0x02	; 2
    1546:	91 83       	std	Z+1, r25	; 0x01
    1548:	80 83       	st	Z, r24
    154a:	12 96       	adiw	r26, 0x02	; 2
    154c:	8d 91       	ld	r24, X+
    154e:	9c 91       	ld	r25, X
    1550:	13 97       	sbiw	r26, 0x03	; 3
    1552:	93 83       	std	Z+3, r25	; 0x03
    1554:	82 83       	std	Z+2, r24	; 0x02
    1556:	21 15       	cp	r18, r1
    1558:	31 05       	cpc	r19, r1
    155a:	29 f4       	brne	.+10     	; 0x1566 <free+0x9c>
    155c:	f0 93 cc 02 	sts	0x02CC, r31
    1560:	e0 93 cb 02 	sts	0x02CB, r30
    1564:	3e c0       	rjmp	.+124    	; 0x15e2 <free+0x118>
    1566:	d9 01       	movw	r26, r18
    1568:	13 96       	adiw	r26, 0x03	; 3
    156a:	fc 93       	st	X, r31
    156c:	ee 93       	st	-X, r30
    156e:	12 97       	sbiw	r26, 0x02	; 2
    1570:	4d 91       	ld	r20, X+
    1572:	5d 91       	ld	r21, X+
    1574:	a4 0f       	add	r26, r20
    1576:	b5 1f       	adc	r27, r21
    1578:	ea 17       	cp	r30, r26
    157a:	fb 07       	cpc	r31, r27
    157c:	79 f4       	brne	.+30     	; 0x159c <free+0xd2>
    157e:	80 81       	ld	r24, Z
    1580:	91 81       	ldd	r25, Z+1	; 0x01
    1582:	84 0f       	add	r24, r20
    1584:	95 1f       	adc	r25, r21
    1586:	02 96       	adiw	r24, 0x02	; 2
    1588:	d9 01       	movw	r26, r18
    158a:	11 96       	adiw	r26, 0x01	; 1
    158c:	9c 93       	st	X, r25
    158e:	8e 93       	st	-X, r24
    1590:	82 81       	ldd	r24, Z+2	; 0x02
    1592:	93 81       	ldd	r25, Z+3	; 0x03
    1594:	13 96       	adiw	r26, 0x03	; 3
    1596:	9c 93       	st	X, r25
    1598:	8e 93       	st	-X, r24
    159a:	12 97       	sbiw	r26, 0x02	; 2
    159c:	e0 e0       	ldi	r30, 0x00	; 0
    159e:	f0 e0       	ldi	r31, 0x00	; 0
    15a0:	8a 81       	ldd	r24, Y+2	; 0x02
    15a2:	9b 81       	ldd	r25, Y+3	; 0x03
    15a4:	00 97       	sbiw	r24, 0x00	; 0
    15a6:	19 f0       	breq	.+6      	; 0x15ae <free+0xe4>
    15a8:	fe 01       	movw	r30, r28
    15aa:	ec 01       	movw	r28, r24
    15ac:	f9 cf       	rjmp	.-14     	; 0x15a0 <free+0xd6>
    15ae:	ce 01       	movw	r24, r28
    15b0:	02 96       	adiw	r24, 0x02	; 2
    15b2:	28 81       	ld	r18, Y
    15b4:	39 81       	ldd	r19, Y+1	; 0x01
    15b6:	82 0f       	add	r24, r18
    15b8:	93 1f       	adc	r25, r19
    15ba:	20 91 c9 02 	lds	r18, 0x02C9
    15be:	30 91 ca 02 	lds	r19, 0x02CA
    15c2:	28 17       	cp	r18, r24
    15c4:	39 07       	cpc	r19, r25
    15c6:	69 f4       	brne	.+26     	; 0x15e2 <free+0x118>
    15c8:	30 97       	sbiw	r30, 0x00	; 0
    15ca:	29 f4       	brne	.+10     	; 0x15d6 <free+0x10c>
    15cc:	10 92 cc 02 	sts	0x02CC, r1
    15d0:	10 92 cb 02 	sts	0x02CB, r1
    15d4:	02 c0       	rjmp	.+4      	; 0x15da <free+0x110>
    15d6:	13 82       	std	Z+3, r1	; 0x03
    15d8:	12 82       	std	Z+2, r1	; 0x02
    15da:	d0 93 ca 02 	sts	0x02CA, r29
    15de:	c0 93 c9 02 	sts	0x02C9, r28
    15e2:	df 91       	pop	r29
    15e4:	cf 91       	pop	r28
    15e6:	08 95       	ret

000015e8 <strnlen_P>:
    15e8:	fc 01       	movw	r30, r24
    15ea:	05 90       	lpm	r0, Z+
    15ec:	61 50       	subi	r22, 0x01	; 1
    15ee:	70 40       	sbci	r23, 0x00	; 0
    15f0:	01 10       	cpse	r0, r1
    15f2:	d8 f7       	brcc	.-10     	; 0x15ea <strnlen_P+0x2>
    15f4:	80 95       	com	r24
    15f6:	90 95       	com	r25
    15f8:	8e 0f       	add	r24, r30
    15fa:	9f 1f       	adc	r25, r31
    15fc:	08 95       	ret

000015fe <memset>:
    15fe:	dc 01       	movw	r26, r24
    1600:	01 c0       	rjmp	.+2      	; 0x1604 <memset+0x6>
    1602:	6d 93       	st	X+, r22
    1604:	41 50       	subi	r20, 0x01	; 1
    1606:	50 40       	sbci	r21, 0x00	; 0
    1608:	e0 f7       	brcc	.-8      	; 0x1602 <memset+0x4>
    160a:	08 95       	ret

0000160c <strnlen>:
    160c:	fc 01       	movw	r30, r24
    160e:	61 50       	subi	r22, 0x01	; 1
    1610:	70 40       	sbci	r23, 0x00	; 0
    1612:	01 90       	ld	r0, Z+
    1614:	01 10       	cpse	r0, r1
    1616:	d8 f7       	brcc	.-10     	; 0x160e <strnlen+0x2>
    1618:	80 95       	com	r24
    161a:	90 95       	com	r25
    161c:	8e 0f       	add	r24, r30
    161e:	9f 1f       	adc	r25, r31
    1620:	08 95       	ret

00001622 <fputc>:
    1622:	0f 93       	push	r16
    1624:	1f 93       	push	r17
    1626:	cf 93       	push	r28
    1628:	df 93       	push	r29
    162a:	18 2f       	mov	r17, r24
    162c:	09 2f       	mov	r16, r25
    162e:	eb 01       	movw	r28, r22
    1630:	8b 81       	ldd	r24, Y+3	; 0x03
    1632:	81 fd       	sbrc	r24, 1
    1634:	03 c0       	rjmp	.+6      	; 0x163c <fputc+0x1a>
    1636:	8f ef       	ldi	r24, 0xFF	; 255
    1638:	9f ef       	ldi	r25, 0xFF	; 255
    163a:	20 c0       	rjmp	.+64     	; 0x167c <fputc+0x5a>
    163c:	82 ff       	sbrs	r24, 2
    163e:	10 c0       	rjmp	.+32     	; 0x1660 <fputc+0x3e>
    1640:	4e 81       	ldd	r20, Y+6	; 0x06
    1642:	5f 81       	ldd	r21, Y+7	; 0x07
    1644:	2c 81       	ldd	r18, Y+4	; 0x04
    1646:	3d 81       	ldd	r19, Y+5	; 0x05
    1648:	42 17       	cp	r20, r18
    164a:	53 07       	cpc	r21, r19
    164c:	7c f4       	brge	.+30     	; 0x166c <fputc+0x4a>
    164e:	e8 81       	ld	r30, Y
    1650:	f9 81       	ldd	r31, Y+1	; 0x01
    1652:	9f 01       	movw	r18, r30
    1654:	2f 5f       	subi	r18, 0xFF	; 255
    1656:	3f 4f       	sbci	r19, 0xFF	; 255
    1658:	39 83       	std	Y+1, r19	; 0x01
    165a:	28 83       	st	Y, r18
    165c:	10 83       	st	Z, r17
    165e:	06 c0       	rjmp	.+12     	; 0x166c <fputc+0x4a>
    1660:	e8 85       	ldd	r30, Y+8	; 0x08
    1662:	f9 85       	ldd	r31, Y+9	; 0x09
    1664:	81 2f       	mov	r24, r17
    1666:	19 95       	eicall
    1668:	89 2b       	or	r24, r25
    166a:	29 f7       	brne	.-54     	; 0x1636 <fputc+0x14>
    166c:	2e 81       	ldd	r18, Y+6	; 0x06
    166e:	3f 81       	ldd	r19, Y+7	; 0x07
    1670:	2f 5f       	subi	r18, 0xFF	; 255
    1672:	3f 4f       	sbci	r19, 0xFF	; 255
    1674:	3f 83       	std	Y+7, r19	; 0x07
    1676:	2e 83       	std	Y+6, r18	; 0x06
    1678:	81 2f       	mov	r24, r17
    167a:	90 2f       	mov	r25, r16
    167c:	df 91       	pop	r29
    167e:	cf 91       	pop	r28
    1680:	1f 91       	pop	r17
    1682:	0f 91       	pop	r16
    1684:	08 95       	ret

00001686 <__ultoa_invert>:
    1686:	fa 01       	movw	r30, r20
    1688:	aa 27       	eor	r26, r26
    168a:	28 30       	cpi	r18, 0x08	; 8
    168c:	51 f1       	breq	.+84     	; 0x16e2 <__ultoa_invert+0x5c>
    168e:	20 31       	cpi	r18, 0x10	; 16
    1690:	81 f1       	breq	.+96     	; 0x16f2 <__ultoa_invert+0x6c>
    1692:	e8 94       	clt
    1694:	6f 93       	push	r22
    1696:	6e 7f       	andi	r22, 0xFE	; 254
    1698:	6e 5f       	subi	r22, 0xFE	; 254
    169a:	7f 4f       	sbci	r23, 0xFF	; 255
    169c:	8f 4f       	sbci	r24, 0xFF	; 255
    169e:	9f 4f       	sbci	r25, 0xFF	; 255
    16a0:	af 4f       	sbci	r26, 0xFF	; 255
    16a2:	b1 e0       	ldi	r27, 0x01	; 1
    16a4:	3e d0       	rcall	.+124    	; 0x1722 <__ultoa_invert+0x9c>
    16a6:	b4 e0       	ldi	r27, 0x04	; 4
    16a8:	3c d0       	rcall	.+120    	; 0x1722 <__ultoa_invert+0x9c>
    16aa:	67 0f       	add	r22, r23
    16ac:	78 1f       	adc	r23, r24
    16ae:	89 1f       	adc	r24, r25
    16b0:	9a 1f       	adc	r25, r26
    16b2:	a1 1d       	adc	r26, r1
    16b4:	68 0f       	add	r22, r24
    16b6:	79 1f       	adc	r23, r25
    16b8:	8a 1f       	adc	r24, r26
    16ba:	91 1d       	adc	r25, r1
    16bc:	a1 1d       	adc	r26, r1
    16be:	6a 0f       	add	r22, r26
    16c0:	71 1d       	adc	r23, r1
    16c2:	81 1d       	adc	r24, r1
    16c4:	91 1d       	adc	r25, r1
    16c6:	a1 1d       	adc	r26, r1
    16c8:	20 d0       	rcall	.+64     	; 0x170a <__ultoa_invert+0x84>
    16ca:	09 f4       	brne	.+2      	; 0x16ce <__ultoa_invert+0x48>
    16cc:	68 94       	set
    16ce:	3f 91       	pop	r19
    16d0:	2a e0       	ldi	r18, 0x0A	; 10
    16d2:	26 9f       	mul	r18, r22
    16d4:	11 24       	eor	r1, r1
    16d6:	30 19       	sub	r19, r0
    16d8:	30 5d       	subi	r19, 0xD0	; 208
    16da:	31 93       	st	Z+, r19
    16dc:	de f6       	brtc	.-74     	; 0x1694 <__ultoa_invert+0xe>
    16de:	cf 01       	movw	r24, r30
    16e0:	08 95       	ret
    16e2:	46 2f       	mov	r20, r22
    16e4:	47 70       	andi	r20, 0x07	; 7
    16e6:	40 5d       	subi	r20, 0xD0	; 208
    16e8:	41 93       	st	Z+, r20
    16ea:	b3 e0       	ldi	r27, 0x03	; 3
    16ec:	0f d0       	rcall	.+30     	; 0x170c <__ultoa_invert+0x86>
    16ee:	c9 f7       	brne	.-14     	; 0x16e2 <__ultoa_invert+0x5c>
    16f0:	f6 cf       	rjmp	.-20     	; 0x16de <__ultoa_invert+0x58>
    16f2:	46 2f       	mov	r20, r22
    16f4:	4f 70       	andi	r20, 0x0F	; 15
    16f6:	40 5d       	subi	r20, 0xD0	; 208
    16f8:	4a 33       	cpi	r20, 0x3A	; 58
    16fa:	18 f0       	brcs	.+6      	; 0x1702 <__ultoa_invert+0x7c>
    16fc:	49 5d       	subi	r20, 0xD9	; 217
    16fe:	31 fd       	sbrc	r19, 1
    1700:	40 52       	subi	r20, 0x20	; 32
    1702:	41 93       	st	Z+, r20
    1704:	02 d0       	rcall	.+4      	; 0x170a <__ultoa_invert+0x84>
    1706:	a9 f7       	brne	.-22     	; 0x16f2 <__ultoa_invert+0x6c>
    1708:	ea cf       	rjmp	.-44     	; 0x16de <__ultoa_invert+0x58>
    170a:	b4 e0       	ldi	r27, 0x04	; 4
    170c:	a6 95       	lsr	r26
    170e:	97 95       	ror	r25
    1710:	87 95       	ror	r24
    1712:	77 95       	ror	r23
    1714:	67 95       	ror	r22
    1716:	ba 95       	dec	r27
    1718:	c9 f7       	brne	.-14     	; 0x170c <__ultoa_invert+0x86>
    171a:	00 97       	sbiw	r24, 0x00	; 0
    171c:	61 05       	cpc	r22, r1
    171e:	71 05       	cpc	r23, r1
    1720:	08 95       	ret
    1722:	9b 01       	movw	r18, r22
    1724:	ac 01       	movw	r20, r24
    1726:	0a 2e       	mov	r0, r26
    1728:	06 94       	lsr	r0
    172a:	57 95       	ror	r21
    172c:	47 95       	ror	r20
    172e:	37 95       	ror	r19
    1730:	27 95       	ror	r18
    1732:	ba 95       	dec	r27
    1734:	c9 f7       	brne	.-14     	; 0x1728 <__ultoa_invert+0xa2>
    1736:	62 0f       	add	r22, r18
    1738:	73 1f       	adc	r23, r19
    173a:	84 1f       	adc	r24, r20
    173c:	95 1f       	adc	r25, r21
    173e:	a0 1d       	adc	r26, r0
    1740:	08 95       	ret

00001742 <_exit>:
    1742:	f8 94       	cli

00001744 <__stop_program>:
    1744:	ff cf       	rjmp	.-2      	; 0x1744 <__stop_program>
