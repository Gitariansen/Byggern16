
ATmega2560.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000d4  00800200  00001b8e  00001c22  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b8e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000033  008002d4  008002d4  00001cf6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001cf6  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000328  00000000  00000000  00001d52  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002533  00000000  00000000  0000207a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000136b  00000000  00000000  000045ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001a0a  00000000  00000000  00005918  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000744  00000000  00000000  00007324  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000910  00000000  00000000  00007a68  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000013f5  00000000  00000000  00008378  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000298  00000000  00000000  0000976d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c2 c0       	rjmp	.+388    	; 0x186 <__ctors_end>
       2:	00 00       	nop
       4:	e0 c0       	rjmp	.+448    	; 0x1c6 <__bad_interrupt>
       6:	00 00       	nop
       8:	de c0       	rjmp	.+444    	; 0x1c6 <__bad_interrupt>
       a:	00 00       	nop
       c:	23 c3       	rjmp	.+1606   	; 0x654 <__vector_3>
       e:	00 00       	nop
      10:	da c0       	rjmp	.+436    	; 0x1c6 <__bad_interrupt>
      12:	00 00       	nop
      14:	d8 c0       	rjmp	.+432    	; 0x1c6 <__bad_interrupt>
      16:	00 00       	nop
      18:	4f c6       	rjmp	.+3230   	; 0xcb8 <__vector_6>
      1a:	00 00       	nop
      1c:	d4 c0       	rjmp	.+424    	; 0x1c6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	d2 c0       	rjmp	.+420    	; 0x1c6 <__bad_interrupt>
      22:	00 00       	nop
      24:	d0 c0       	rjmp	.+416    	; 0x1c6 <__bad_interrupt>
      26:	00 00       	nop
      28:	ce c0       	rjmp	.+412    	; 0x1c6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	cc c0       	rjmp	.+408    	; 0x1c6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	ca c0       	rjmp	.+404    	; 0x1c6 <__bad_interrupt>
      32:	00 00       	nop
      34:	c8 c0       	rjmp	.+400    	; 0x1c6 <__bad_interrupt>
      36:	00 00       	nop
      38:	c6 c0       	rjmp	.+396    	; 0x1c6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	c4 c0       	rjmp	.+392    	; 0x1c6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	c2 c0       	rjmp	.+388    	; 0x1c6 <__bad_interrupt>
      42:	00 00       	nop
      44:	c0 c0       	rjmp	.+384    	; 0x1c6 <__bad_interrupt>
      46:	00 00       	nop
      48:	be c0       	rjmp	.+380    	; 0x1c6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	bc c0       	rjmp	.+376    	; 0x1c6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	ba c0       	rjmp	.+372    	; 0x1c6 <__bad_interrupt>
      52:	00 00       	nop
      54:	b8 c0       	rjmp	.+368    	; 0x1c6 <__bad_interrupt>
      56:	00 00       	nop
      58:	b6 c0       	rjmp	.+364    	; 0x1c6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b4 c0       	rjmp	.+360    	; 0x1c6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	b2 c0       	rjmp	.+356    	; 0x1c6 <__bad_interrupt>
      62:	00 00       	nop
      64:	b0 c0       	rjmp	.+352    	; 0x1c6 <__bad_interrupt>
      66:	00 00       	nop
      68:	ae c0       	rjmp	.+348    	; 0x1c6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ac c0       	rjmp	.+344    	; 0x1c6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	aa c0       	rjmp	.+340    	; 0x1c6 <__bad_interrupt>
      72:	00 00       	nop
      74:	a8 c0       	rjmp	.+336    	; 0x1c6 <__bad_interrupt>
      76:	00 00       	nop
      78:	a6 c0       	rjmp	.+332    	; 0x1c6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a4 c0       	rjmp	.+328    	; 0x1c6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	a2 c0       	rjmp	.+324    	; 0x1c6 <__bad_interrupt>
      82:	00 00       	nop
      84:	a0 c0       	rjmp	.+320    	; 0x1c6 <__bad_interrupt>
      86:	00 00       	nop
      88:	9e c0       	rjmp	.+316    	; 0x1c6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	de c6       	rjmp	.+3516   	; 0xe4a <__vector_35>
      8e:	00 00       	nop
      90:	9a c0       	rjmp	.+308    	; 0x1c6 <__bad_interrupt>
      92:	00 00       	nop
      94:	98 c0       	rjmp	.+304    	; 0x1c6 <__bad_interrupt>
      96:	00 00       	nop
      98:	96 c0       	rjmp	.+300    	; 0x1c6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	4c c5       	rjmp	.+2712   	; 0xb36 <__vector_39>
      9e:	00 00       	nop
      a0:	92 c0       	rjmp	.+292    	; 0x1c6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	90 c0       	rjmp	.+288    	; 0x1c6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	8e c0       	rjmp	.+284    	; 0x1c6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	8c c0       	rjmp	.+280    	; 0x1c6 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	8a c0       	rjmp	.+276    	; 0x1c6 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	88 c0       	rjmp	.+272    	; 0x1c6 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	86 c0       	rjmp	.+268    	; 0x1c6 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	84 c0       	rjmp	.+264    	; 0x1c6 <__bad_interrupt>
      be:	00 00       	nop
      c0:	82 c0       	rjmp	.+260    	; 0x1c6 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	80 c0       	rjmp	.+256    	; 0x1c6 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	7e c0       	rjmp	.+252    	; 0x1c6 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	7c c0       	rjmp	.+248    	; 0x1c6 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	7a c0       	rjmp	.+244    	; 0x1c6 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	78 c0       	rjmp	.+240    	; 0x1c6 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	76 c0       	rjmp	.+236    	; 0x1c6 <__bad_interrupt>
      da:	00 00       	nop
      dc:	74 c0       	rjmp	.+232    	; 0x1c6 <__bad_interrupt>
      de:	00 00       	nop
      e0:	72 c0       	rjmp	.+228    	; 0x1c6 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	b6 05       	cpc	r27, r6
      e6:	08 06       	cpc	r0, r24
      e8:	08 06       	cpc	r0, r24
      ea:	08 06       	cpc	r0, r24
      ec:	08 06       	cpc	r0, r24
      ee:	08 06       	cpc	r0, r24
      f0:	08 06       	cpc	r0, r24
      f2:	08 06       	cpc	r0, r24
      f4:	b6 05       	cpc	r27, r6
      f6:	08 06       	cpc	r0, r24
      f8:	08 06       	cpc	r0, r24
      fa:	08 06       	cpc	r0, r24
      fc:	08 06       	cpc	r0, r24
      fe:	08 06       	cpc	r0, r24
     100:	08 06       	cpc	r0, r24
     102:	08 06       	cpc	r0, r24
     104:	b8 05       	cpc	r27, r8
     106:	08 06       	cpc	r0, r24
     108:	08 06       	cpc	r0, r24
     10a:	08 06       	cpc	r0, r24
     10c:	08 06       	cpc	r0, r24
     10e:	08 06       	cpc	r0, r24
     110:	08 06       	cpc	r0, r24
     112:	08 06       	cpc	r0, r24
     114:	08 06       	cpc	r0, r24
     116:	08 06       	cpc	r0, r24
     118:	08 06       	cpc	r0, r24
     11a:	08 06       	cpc	r0, r24
     11c:	08 06       	cpc	r0, r24
     11e:	08 06       	cpc	r0, r24
     120:	08 06       	cpc	r0, r24
     122:	08 06       	cpc	r0, r24
     124:	b8 05       	cpc	r27, r8
     126:	08 06       	cpc	r0, r24
     128:	08 06       	cpc	r0, r24
     12a:	08 06       	cpc	r0, r24
     12c:	08 06       	cpc	r0, r24
     12e:	08 06       	cpc	r0, r24
     130:	08 06       	cpc	r0, r24
     132:	08 06       	cpc	r0, r24
     134:	08 06       	cpc	r0, r24
     136:	08 06       	cpc	r0, r24
     138:	08 06       	cpc	r0, r24
     13a:	08 06       	cpc	r0, r24
     13c:	08 06       	cpc	r0, r24
     13e:	08 06       	cpc	r0, r24
     140:	08 06       	cpc	r0, r24
     142:	08 06       	cpc	r0, r24
     144:	04 06       	cpc	r0, r20
     146:	08 06       	cpc	r0, r24
     148:	08 06       	cpc	r0, r24
     14a:	08 06       	cpc	r0, r24
     14c:	08 06       	cpc	r0, r24
     14e:	08 06       	cpc	r0, r24
     150:	08 06       	cpc	r0, r24
     152:	08 06       	cpc	r0, r24
     154:	e1 05       	cpc	r30, r1
     156:	08 06       	cpc	r0, r24
     158:	08 06       	cpc	r0, r24
     15a:	08 06       	cpc	r0, r24
     15c:	08 06       	cpc	r0, r24
     15e:	08 06       	cpc	r0, r24
     160:	08 06       	cpc	r0, r24
     162:	08 06       	cpc	r0, r24
     164:	08 06       	cpc	r0, r24
     166:	08 06       	cpc	r0, r24
     168:	08 06       	cpc	r0, r24
     16a:	08 06       	cpc	r0, r24
     16c:	08 06       	cpc	r0, r24
     16e:	08 06       	cpc	r0, r24
     170:	08 06       	cpc	r0, r24
     172:	08 06       	cpc	r0, r24
     174:	d5 05       	cpc	r29, r5
     176:	08 06       	cpc	r0, r24
     178:	08 06       	cpc	r0, r24
     17a:	08 06       	cpc	r0, r24
     17c:	08 06       	cpc	r0, r24
     17e:	08 06       	cpc	r0, r24
     180:	08 06       	cpc	r0, r24
     182:	08 06       	cpc	r0, r24
     184:	f3 05       	cpc	r31, r3

00000186 <__ctors_end>:
     186:	11 24       	eor	r1, r1
     188:	1f be       	out	0x3f, r1	; 63
     18a:	cf ef       	ldi	r28, 0xFF	; 255
     18c:	d1 e2       	ldi	r29, 0x21	; 33
     18e:	de bf       	out	0x3e, r29	; 62
     190:	cd bf       	out	0x3d, r28	; 61
     192:	00 e0       	ldi	r16, 0x00	; 0
     194:	0c bf       	out	0x3c, r16	; 60

00000196 <__do_copy_data>:
     196:	12 e0       	ldi	r17, 0x02	; 2
     198:	a0 e0       	ldi	r26, 0x00	; 0
     19a:	b2 e0       	ldi	r27, 0x02	; 2
     19c:	ee e8       	ldi	r30, 0x8E	; 142
     19e:	fb e1       	ldi	r31, 0x1B	; 27
     1a0:	00 e0       	ldi	r16, 0x00	; 0
     1a2:	0b bf       	out	0x3b, r16	; 59
     1a4:	02 c0       	rjmp	.+4      	; 0x1aa <__do_copy_data+0x14>
     1a6:	07 90       	elpm	r0, Z+
     1a8:	0d 92       	st	X+, r0
     1aa:	a4 3d       	cpi	r26, 0xD4	; 212
     1ac:	b1 07       	cpc	r27, r17
     1ae:	d9 f7       	brne	.-10     	; 0x1a6 <__do_copy_data+0x10>

000001b0 <__do_clear_bss>:
     1b0:	23 e0       	ldi	r18, 0x03	; 3
     1b2:	a4 ed       	ldi	r26, 0xD4	; 212
     1b4:	b2 e0       	ldi	r27, 0x02	; 2
     1b6:	01 c0       	rjmp	.+2      	; 0x1ba <.do_clear_bss_start>

000001b8 <.do_clear_bss_loop>:
     1b8:	1d 92       	st	X+, r1

000001ba <.do_clear_bss_start>:
     1ba:	a7 30       	cpi	r26, 0x07	; 7
     1bc:	b2 07       	cpc	r27, r18
     1be:	e1 f7       	brne	.-8      	; 0x1b8 <.do_clear_bss_loop>
     1c0:	03 d0       	rcall	.+6      	; 0x1c8 <main>
     1c2:	0c 94 c5 0d 	jmp	0x1b8a	; 0x1b8a <_exit>

000001c6 <__bad_interrupt>:
     1c6:	1c cf       	rjmp	.-456    	; 0x0 <__vectors>

000001c8 <main>:
#include "drivers/ultrasound.h"
#include "controller.h"
#include "../../../can_protocol.h"

int main(void)
{
     1c8:	cf 93       	push	r28
     1ca:	df 93       	push	r29
     1cc:	cd b7       	in	r28, 0x3d	; 61
     1ce:	de b7       	in	r29, 0x3e	; 62
     1d0:	66 97       	sbiw	r28, 0x16	; 22
     1d2:	0f b6       	in	r0, 0x3f	; 63
     1d4:	f8 94       	cli
     1d6:	de bf       	out	0x3e, r29	; 62
     1d8:	0f be       	out	0x3f, r0	; 63
     1da:	cd bf       	out	0x3d, r28	; 61
	UART_init(MYUBRR);
     1dc:	87 e6       	ldi	r24, 0x67	; 103
     1de:	90 e0       	ldi	r25, 0x00	; 0
     1e0:	3f d5       	rcall	.+2686   	; 0xc60 <UART_init>
	CAN_init();
     1e2:	43 d1       	rcall	.+646    	; 0x46a <CAN_init>
	IR_init();
     1e4:	73 d2       	rcall	.+1254   	; 0x6cc <IR_init>
	SERVO_init();
     1e6:	04 d4       	rcall	.+2056   	; 0x9f0 <SERVO_init>
	MOTOR_init();
     1e8:	c0 d3       	rcall	.+1920   	; 0x96a <MOTOR_init>
	SOLENOID_init();
     1ea:	54 d4       	rcall	.+2216   	; 0xa94 <SOLENOID_init>
	
	US_init();
     1ec:	5a d5       	rcall	.+2740   	; 0xca2 <US_init>
	Initialize_timer3();
     1ee:	4a d5       	rcall	.+2708   	; 0xc84 <Initialize_timer3>
		printf("Received message\n");
		printf("id: %d\ndata: %d\n\n", receive_msg.id, receive_msg.data[0]);
		_delay_ms(10);
	}*/

	uint8_t ir_value = IR_read();
     1f0:	6f d2       	rcall	.+1246   	; 0x6d0 <IR_read>
     1f2:	f8 2e       	mov	r15, r24
	while(1) {
		receive_msg = CAN_data_receive();


		if(receive_msg.id == NODE_1_ID) {
			printf("%d %d %d %d %d\n", receive_msg.id, receive_msg.data[0], receive_msg.data[2], (uint8_t)receive_msg.data[3], (uint8_t)receive_msg.data[4]);
     1f4:	66 24       	eor	r6, r6
     1f6:	63 94       	inc	r6
     1f8:	0f 2e       	mov	r0, r31
     1fa:	f4 e1       	ldi	r31, 0x14	; 20
     1fc:	8f 2e       	mov	r8, r31
     1fe:	f2 e0       	ldi	r31, 0x02	; 2
     200:	9f 2e       	mov	r9, r31
     202:	f0 2d       	mov	r31, r0
		}
		
		ir_value = IR_read();
		if(ir_value != old_ir_value) {
			// Send score to node 1
			send_msg.id = NODE_2_ID;
     204:	68 94       	set
     206:	aa 24       	eor	r10, r10
     208:	a1 f8       	bld	r10, 1
     20a:	b1 2c       	mov	r11, r1
		}

		// Apply controller
		float encoder_value = 0xFF * ((float)MOTOR_read_encoder())/((float)MOTOR_max_encoder_value());
		float vel = CONTROLLER_actuate(encoder_value);
		printf("vel %d\n", vel);
     20c:	04 e2       	ldi	r16, 0x24	; 36
     20e:	12 e0       	ldi	r17, 0x02	; 2

	uint8_t ir_value = IR_read();
	uint8_t old_ir_value = ir_value;

	while(1) {
		receive_msg = CAN_data_receive();
     210:	ce 01       	movw	r24, r28
     212:	0c 96       	adiw	r24, 0x0c	; 12
     214:	93 d1       	rcall	.+806    	; 0x53c <CAN_data_receive>
     216:	df 84       	ldd	r13, Y+15	; 0x0f
     218:	e9 88       	ldd	r14, Y+17	; 0x11
     21a:	cb 88       	ldd	r12, Y+19	; 0x13


		if(receive_msg.id == NODE_1_ID) {
     21c:	2c 85       	ldd	r18, Y+12	; 0x0c
     21e:	3d 85       	ldd	r19, Y+13	; 0x0d
     220:	21 30       	cpi	r18, 0x01	; 1
     222:	31 05       	cpc	r19, r1
     224:	39 f5       	brne	.+78     	; 0x274 <main+0xac>
			printf("%d %d %d %d %d\n", receive_msg.id, receive_msg.data[0], receive_msg.data[2], (uint8_t)receive_msg.data[3], (uint8_t)receive_msg.data[4]);
     226:	1f 92       	push	r1
     228:	cf 92       	push	r12
     22a:	8a 89       	ldd	r24, Y+18	; 0x12
     22c:	1f 92       	push	r1
     22e:	8f 93       	push	r24
     230:	8e 2d       	mov	r24, r14
     232:	99 27       	eor	r25, r25
     234:	87 fd       	sbrc	r24, 7
     236:	90 95       	com	r25
     238:	9f 93       	push	r25
     23a:	ef 92       	push	r14
     23c:	2d 2d       	mov	r18, r13
     23e:	33 27       	eor	r19, r19
     240:	27 fd       	sbrc	r18, 7
     242:	30 95       	com	r19
     244:	3f 93       	push	r19
     246:	df 92       	push	r13
     248:	1f 92       	push	r1
     24a:	6f 92       	push	r6
     24c:	9f 92       	push	r9
     24e:	8f 92       	push	r8
     250:	0e 94 ab 09 	call	0x1356	; 0x1356 <printf>
			// Message is joystick data
			int8_t x = receive_msg.data[X_INDEX];
			int8_t click = receive_msg.data[CLICK_INDEX];
			SERVO_write(-x);
     254:	8d 2d       	mov	r24, r13
     256:	81 95       	neg	r24
     258:	d6 d3       	rcall	.+1964   	; 0xa06 <SERVO_write>
			SOLENOID_shoot(click);
     25a:	8e 2d       	mov	r24, r14
     25c:	1d d4       	rcall	.+2106   	; 0xa98 <SOLENOID_shoot>

			// Slider data
			uint8_t ref = receive_msg.data[RIGHT_INDEX]; // Use right slider position as reference
			CONTROLLER_set_reference(ref);
     25e:	6c 2d       	mov	r22, r12
     260:	70 e0       	ldi	r23, 0x00	; 0
     262:	80 e0       	ldi	r24, 0x00	; 0
     264:	90 e0       	ldi	r25, 0x00	; 0
     266:	0e d7       	rcall	.+3612   	; 0x1084 <__floatunsisf>
     268:	5c d0       	rcall	.+184    	; 0x322 <CONTROLLER_set_reference>
     26a:	0f b6       	in	r0, 0x3f	; 63
     26c:	f8 94       	cli
     26e:	de bf       	out	0x3e, r29	; 62
     270:	0f be       	out	0x3f, r0	; 63
     272:	cd bf       	out	0x3d, r28	; 61
		}
		
		ir_value = IR_read();
     274:	2d d2       	rcall	.+1114   	; 0x6d0 <IR_read>
     276:	78 2e       	mov	r7, r24
		if(ir_value != old_ir_value) {
     278:	8f 15       	cp	r24, r15
     27a:	39 f0       	breq	.+14     	; 0x28a <main+0xc2>
			// Send score to node 1
			send_msg.id = NODE_2_ID;
     27c:	ba 82       	std	Y+2, r11	; 0x02
     27e:	a9 82       	std	Y+1, r10	; 0x01
			send_msg.length = 1;
     280:	6b 82       	std	Y+3, r6	; 0x03
			send_msg.data[IR_INDEX] = ir_value;
     282:	8c 83       	std	Y+4, r24	; 0x04
			CAN_message_send(&send_msg);
     284:	ce 01       	movw	r24, r28
     286:	01 96       	adiw	r24, 0x01	; 1
     288:	09 d1       	rcall	.+530    	; 0x49c <CAN_message_send>
			old_ir_value = ir_value;
		}

		// Apply controller
		float encoder_value = 0xFF * ((float)MOTOR_read_encoder())/((float)MOTOR_max_encoder_value());
     28a:	d3 d2       	rcall	.+1446   	; 0x832 <MOTOR_read_encoder>
     28c:	7c 01       	movw	r14, r24
     28e:	b7 d2       	rcall	.+1390   	; 0x7fe <MOTOR_max_encoder_value>
     290:	6c 01       	movw	r12, r24
     292:	b7 01       	movw	r22, r14
     294:	88 27       	eor	r24, r24
     296:	77 fd       	sbrc	r23, 7
     298:	80 95       	com	r24
     29a:	98 2f       	mov	r25, r24
     29c:	f5 d6       	rcall	.+3562   	; 0x1088 <__floatsisf>
     29e:	20 e0       	ldi	r18, 0x00	; 0
     2a0:	30 e0       	ldi	r19, 0x00	; 0
     2a2:	4f e7       	ldi	r20, 0x7F	; 127
     2a4:	53 e4       	ldi	r21, 0x43	; 67
     2a6:	a4 d7       	rcall	.+3912   	; 0x11f0 <__mulsf3>
     2a8:	1b 01       	movw	r2, r22
     2aa:	2c 01       	movw	r4, r24
     2ac:	b6 01       	movw	r22, r12
     2ae:	88 27       	eor	r24, r24
     2b0:	77 fd       	sbrc	r23, 7
     2b2:	80 95       	com	r24
     2b4:	98 2f       	mov	r25, r24
     2b6:	e8 d6       	rcall	.+3536   	; 0x1088 <__floatsisf>
     2b8:	9b 01       	movw	r18, r22
     2ba:	ac 01       	movw	r20, r24
     2bc:	c2 01       	movw	r24, r4
     2be:	b1 01       	movw	r22, r2
     2c0:	48 d6       	rcall	.+3216   	; 0xf52 <__divsf3>
		float vel = CONTROLLER_actuate(encoder_value);
     2c2:	38 d0       	rcall	.+112    	; 0x334 <CONTROLLER_actuate>
     2c4:	c6 2e       	mov	r12, r22
     2c6:	d7 2e       	mov	r13, r23
     2c8:	e8 2e       	mov	r14, r24
     2ca:	f9 2e       	mov	r15, r25
		printf("vel %d\n", vel);
     2cc:	9f 93       	push	r25
     2ce:	8f 93       	push	r24
     2d0:	7f 93       	push	r23
     2d2:	6f 93       	push	r22
     2d4:	1f 93       	push	r17
     2d6:	0f 93       	push	r16
     2d8:	0e 94 ab 09 	call	0x1356	; 0x1356 <printf>
		MOTOR_set_dir_right(vel > 0);
     2dc:	46 2c       	mov	r4, r6
     2de:	20 e0       	ldi	r18, 0x00	; 0
     2e0:	30 e0       	ldi	r19, 0x00	; 0
     2e2:	a9 01       	movw	r20, r18
     2e4:	6c 2d       	mov	r22, r12
     2e6:	7d 2d       	mov	r23, r13
     2e8:	8e 2d       	mov	r24, r14
     2ea:	9f 2d       	mov	r25, r15
     2ec:	7d d7       	rcall	.+3834   	; 0x11e8 <__gesf2>
     2ee:	18 16       	cp	r1, r24
     2f0:	0c f0       	brlt	.+2      	; 0x2f4 <main+0x12c>
     2f2:	41 2c       	mov	r4, r1
     2f4:	84 2d       	mov	r24, r4
     2f6:	8f d2       	rcall	.+1310   	; 0x816 <MOTOR_set_dir_right>
		MOTOR_set_velocity(vel);
     2f8:	6c 2d       	mov	r22, r12
     2fa:	7d 2d       	mov	r23, r13
     2fc:	8e 2d       	mov	r24, r14
     2fe:	9f 2d       	mov	r25, r15
     300:	95 d6       	rcall	.+3370   	; 0x102c <__fixunssfsi>
     302:	86 2f       	mov	r24, r22
     304:	81 d2       	rcall	.+1282   	; 0x808 <MOTOR_set_velocity>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     306:	8f e3       	ldi	r24, 0x3F	; 63
     308:	9c e9       	ldi	r25, 0x9C	; 156
     30a:	01 97       	sbiw	r24, 0x01	; 1
     30c:	f1 f7       	brne	.-4      	; 0x30a <main+0x142>
     30e:	00 c0       	rjmp	.+0      	; 0x310 <main+0x148>
     310:	00 00       	nop
     312:	0f 90       	pop	r0
     314:	0f 90       	pop	r0
     316:	0f 90       	pop	r0
     318:	0f 90       	pop	r0
     31a:	0f 90       	pop	r0
     31c:	0f 90       	pop	r0
     31e:	f7 2c       	mov	r15, r7
     320:	77 cf       	rjmp	.-274    	; 0x210 <main+0x48>

00000322 <CONTROLLER_set_reference>:
float integral = 0.0;

volatile uint16_t* timer_source = &TCNT2;

void CONTROLLER_set_reference(float ref) {
	reference = ref;
     322:	60 93 dc 02 	sts	0x02DC, r22
     326:	70 93 dd 02 	sts	0x02DD, r23
     32a:	80 93 de 02 	sts	0x02DE, r24
     32e:	90 93 df 02 	sts	0x02DF, r25
     332:	08 95       	ret

00000334 <CONTROLLER_actuate>:
}

float CONTROLLER_actuate(float y) {
     334:	4f 92       	push	r4
     336:	5f 92       	push	r5
     338:	6f 92       	push	r6
     33a:	7f 92       	push	r7
     33c:	8f 92       	push	r8
     33e:	9f 92       	push	r9
     340:	af 92       	push	r10
     342:	bf 92       	push	r11
     344:	cf 92       	push	r12
     346:	df 92       	push	r13
     348:	ef 92       	push	r14
     34a:	ff 92       	push	r15
     34c:	cf 93       	push	r28
     34e:	df 93       	push	r29
     350:	6b 01       	movw	r12, r22
     352:	7c 01       	movw	r14, r24
	float dt = ((float)*timer_source)/(F_CPU);
     354:	c0 91 06 02 	lds	r28, 0x0206
     358:	d0 91 07 02 	lds	r29, 0x0207
     35c:	68 81       	ld	r22, Y
     35e:	79 81       	ldd	r23, Y+1	; 0x01
     360:	80 e0       	ldi	r24, 0x00	; 0
     362:	90 e0       	ldi	r25, 0x00	; 0
     364:	8f d6       	rcall	.+3358   	; 0x1084 <__floatunsisf>
     366:	20 e0       	ldi	r18, 0x00	; 0
     368:	34 e2       	ldi	r19, 0x24	; 36
     36a:	44 e7       	ldi	r20, 0x74	; 116
     36c:	5b e4       	ldi	r21, 0x4B	; 75
     36e:	f1 d5       	rcall	.+3042   	; 0xf52 <__divsf3>
     370:	2b 01       	movw	r4, r22
     372:	3c 01       	movw	r6, r24
	*timer_source = 0;
     374:	19 82       	std	Y+1, r1	; 0x01
     376:	18 82       	st	Y, r1
	
	
	float err = reference - y;
     378:	a7 01       	movw	r20, r14
     37a:	96 01       	movw	r18, r12
     37c:	60 91 dc 02 	lds	r22, 0x02DC
     380:	70 91 dd 02 	lds	r23, 0x02DD
     384:	80 91 de 02 	lds	r24, 0x02DE
     388:	90 91 df 02 	lds	r25, 0x02DF
     38c:	79 d5       	rcall	.+2802   	; 0xe80 <__subsf3>
     38e:	6b 01       	movw	r12, r22
     390:	7c 01       	movw	r14, r24
	
	integral += err * dt;
     392:	a3 01       	movw	r20, r6
     394:	92 01       	movw	r18, r4
     396:	2c d7       	rcall	.+3672   	; 0x11f0 <__mulsf3>
     398:	20 91 d4 02 	lds	r18, 0x02D4
     39c:	30 91 d5 02 	lds	r19, 0x02D5
     3a0:	40 91 d6 02 	lds	r20, 0x02D6
     3a4:	50 91 d7 02 	lds	r21, 0x02D7
     3a8:	6c d5       	rcall	.+2776   	; 0xe82 <__addsf3>
     3aa:	4b 01       	movw	r8, r22
     3ac:	5c 01       	movw	r10, r24
     3ae:	60 93 d4 02 	sts	0x02D4, r22
     3b2:	70 93 d5 02 	sts	0x02D5, r23
     3b6:	80 93 d6 02 	sts	0x02D6, r24
     3ba:	90 93 d7 02 	sts	0x02D7, r25

	float derivative = (err - prev_err)/dt;
     3be:	20 91 d8 02 	lds	r18, 0x02D8
     3c2:	30 91 d9 02 	lds	r19, 0x02D9
     3c6:	40 91 da 02 	lds	r20, 0x02DA
     3ca:	50 91 db 02 	lds	r21, 0x02DB
     3ce:	c7 01       	movw	r24, r14
     3d0:	b6 01       	movw	r22, r12
     3d2:	56 d5       	rcall	.+2732   	; 0xe80 <__subsf3>
     3d4:	a3 01       	movw	r20, r6
     3d6:	92 01       	movw	r18, r4
     3d8:	bc d5       	rcall	.+2936   	; 0xf52 <__divsf3>
     3da:	2b 01       	movw	r4, r22
     3dc:	3c 01       	movw	r6, r24
	prev_err = err;	
     3de:	c0 92 d8 02 	sts	0x02D8, r12
     3e2:	d0 92 d9 02 	sts	0x02D9, r13
     3e6:	e0 92 da 02 	sts	0x02DA, r14
     3ea:	f0 92 db 02 	sts	0x02DB, r15
	
	return Kp*err + Ki*integral + Kd*derivative;
     3ee:	20 e0       	ldi	r18, 0x00	; 0
     3f0:	30 e0       	ldi	r19, 0x00	; 0
     3f2:	40 e0       	ldi	r20, 0x00	; 0
     3f4:	5f e3       	ldi	r21, 0x3F	; 63
     3f6:	c5 01       	movw	r24, r10
     3f8:	b4 01       	movw	r22, r8
     3fa:	fa d6       	rcall	.+3572   	; 0x11f0 <__mulsf3>
     3fc:	a7 01       	movw	r20, r14
     3fe:	96 01       	movw	r18, r12
     400:	40 d5       	rcall	.+2688   	; 0xe82 <__addsf3>
     402:	6b 01       	movw	r12, r22
     404:	7c 01       	movw	r14, r24
     406:	20 e0       	ldi	r18, 0x00	; 0
     408:	30 e0       	ldi	r19, 0x00	; 0
     40a:	a9 01       	movw	r20, r18
     40c:	c3 01       	movw	r24, r6
     40e:	b2 01       	movw	r22, r4
     410:	ef d6       	rcall	.+3550   	; 0x11f0 <__mulsf3>
     412:	9b 01       	movw	r18, r22
     414:	ac 01       	movw	r20, r24
     416:	c7 01       	movw	r24, r14
     418:	b6 01       	movw	r22, r12
     41a:	33 d5       	rcall	.+2662   	; 0xe82 <__addsf3>
     41c:	df 91       	pop	r29
     41e:	cf 91       	pop	r28
     420:	ff 90       	pop	r15
     422:	ef 90       	pop	r14
     424:	df 90       	pop	r13
     426:	cf 90       	pop	r12
     428:	bf 90       	pop	r11
     42a:	af 90       	pop	r10
     42c:	9f 90       	pop	r9
     42e:	8f 90       	pop	r8
     430:	7f 90       	pop	r7
     432:	6f 90       	pop	r6
     434:	5f 90       	pop	r5
     436:	4f 90       	pop	r4
     438:	08 95       	ret

0000043a <ADC_init>:
     43a:	ea e7       	ldi	r30, 0x7A	; 122
     43c:	f0 e0       	ldi	r31, 0x00	; 0
     43e:	80 81       	ld	r24, Z
     440:	80 68       	ori	r24, 0x80	; 128
     442:	80 83       	st	Z, r24
     444:	80 81       	ld	r24, Z
     446:	87 60       	ori	r24, 0x07	; 7
     448:	80 83       	st	Z, r24
     44a:	08 95       	ret

0000044c <ADC_read>:
     44c:	8f 71       	andi	r24, 0x1F	; 31
     44e:	80 66       	ori	r24, 0x60	; 96
     450:	80 93 7c 00 	sts	0x007C, r24
     454:	ea e7       	ldi	r30, 0x7A	; 122
     456:	f0 e0       	ldi	r31, 0x00	; 0
     458:	80 81       	ld	r24, Z
     45a:	80 64       	ori	r24, 0x40	; 64
     45c:	80 83       	st	Z, r24
     45e:	80 81       	ld	r24, Z
     460:	86 fd       	sbrc	r24, 6
     462:	fd cf       	rjmp	.-6      	; 0x45e <ADC_read+0x12>
     464:	80 91 79 00 	lds	r24, 0x0079
     468:	08 95       	ret

0000046a <CAN_init>:
     46a:	ab d1       	rcall	.+854    	; 0x7c2 <MCP2515_init>
     46c:	40 e0       	ldi	r20, 0x00	; 0
     46e:	60 ee       	ldi	r22, 0xE0	; 224
     470:	8f e0       	ldi	r24, 0x0F	; 15
     472:	8a d1       	rcall	.+788    	; 0x788 <MCP2515_bit_modify>
     474:	8e e0       	ldi	r24, 0x0E	; 14
     476:	49 d1       	rcall	.+658    	; 0x70a <MCP2515_read_data>
     478:	80 7e       	andi	r24, 0xE0	; 224
     47a:	21 f0       	breq	.+8      	; 0x484 <CAN_init+0x1a>
     47c:	8c e2       	ldi	r24, 0x2C	; 44
     47e:	92 e0       	ldi	r25, 0x02	; 2
     480:	7b c7       	rjmp	.+3830   	; 0x1378 <puts>
     482:	08 95       	ret
     484:	43 e2       	ldi	r20, 0x23	; 35
     486:	6f ef       	ldi	r22, 0xFF	; 255
     488:	8b e2       	ldi	r24, 0x2B	; 43
     48a:	7e d1       	rcall	.+764    	; 0x788 <MCP2515_bit_modify>
     48c:	e9 e6       	ldi	r30, 0x69	; 105
     48e:	f0 e0       	ldi	r31, 0x00	; 0
     490:	80 81       	ld	r24, Z
     492:	80 62       	ori	r24, 0x20	; 32
     494:	80 83       	st	Z, r24
     496:	ea 9a       	sbi	0x1d, 2	; 29
     498:	78 94       	sei
     49a:	08 95       	ret

0000049c <CAN_message_send>:
     49c:	0f 93       	push	r16
     49e:	1f 93       	push	r17
     4a0:	cf 93       	push	r28
     4a2:	df 93       	push	r29
     4a4:	cd b7       	in	r28, 0x3d	; 61
     4a6:	de b7       	in	r29, 0x3e	; 62
     4a8:	dc 01       	movw	r26, r24
     4aa:	0d b7       	in	r16, 0x3d	; 61
     4ac:	1e b7       	in	r17, 0x3e	; 62
     4ae:	12 96       	adiw	r26, 0x02	; 2
     4b0:	4c 91       	ld	r20, X
     4b2:	12 97       	sbiw	r26, 0x02	; 2
     4b4:	50 e0       	ldi	r21, 0x00	; 0
     4b6:	4b 5f       	subi	r20, 0xFB	; 251
     4b8:	5f 4f       	sbci	r21, 0xFF	; 255
     4ba:	8d b7       	in	r24, 0x3d	; 61
     4bc:	9e b7       	in	r25, 0x3e	; 62
     4be:	84 1b       	sub	r24, r20
     4c0:	95 0b       	sbc	r25, r21
     4c2:	0f b6       	in	r0, 0x3f	; 63
     4c4:	f8 94       	cli
     4c6:	9e bf       	out	0x3e, r25	; 62
     4c8:	0f be       	out	0x3f, r0	; 63
     4ca:	8d bf       	out	0x3d, r24	; 61
     4cc:	6d b7       	in	r22, 0x3d	; 61
     4ce:	7e b7       	in	r23, 0x3e	; 62
     4d0:	6f 5f       	subi	r22, 0xFF	; 255
     4d2:	7f 4f       	sbci	r23, 0xFF	; 255
     4d4:	8d 91       	ld	r24, X+
     4d6:	9c 91       	ld	r25, X
     4d8:	11 97       	sbiw	r26, 0x01	; 1
     4da:	96 95       	lsr	r25
     4dc:	87 95       	ror	r24
     4de:	96 95       	lsr	r25
     4e0:	87 95       	ror	r24
     4e2:	96 95       	lsr	r25
     4e4:	87 95       	ror	r24
     4e6:	ed b7       	in	r30, 0x3d	; 61
     4e8:	fe b7       	in	r31, 0x3e	; 62
     4ea:	81 83       	std	Z+1, r24	; 0x01
     4ec:	8c 91       	ld	r24, X
     4ee:	82 95       	swap	r24
     4f0:	88 0f       	add	r24, r24
     4f2:	80 7e       	andi	r24, 0xE0	; 224
     4f4:	fb 01       	movw	r30, r22
     4f6:	81 83       	std	Z+1, r24	; 0x01
     4f8:	12 82       	std	Z+2, r1	; 0x02
     4fa:	13 82       	std	Z+3, r1	; 0x03
     4fc:	12 96       	adiw	r26, 0x02	; 2
     4fe:	8c 91       	ld	r24, X
     500:	12 97       	sbiw	r26, 0x02	; 2
     502:	84 83       	std	Z+4, r24	; 0x04
     504:	46 30       	cpi	r20, 0x06	; 6
     506:	51 05       	cpc	r21, r1
     508:	5c f0       	brlt	.+22     	; 0x520 <CAN_message_send+0x84>
     50a:	13 96       	adiw	r26, 0x03	; 3
     50c:	35 96       	adiw	r30, 0x05	; 5
     50e:	25 e0       	ldi	r18, 0x05	; 5
     510:	30 e0       	ldi	r19, 0x00	; 0
     512:	8d 91       	ld	r24, X+
     514:	81 93       	st	Z+, r24
     516:	2f 5f       	subi	r18, 0xFF	; 255
     518:	3f 4f       	sbci	r19, 0xFF	; 255
     51a:	24 17       	cp	r18, r20
     51c:	35 07       	cpc	r19, r21
     51e:	cc f3       	brlt	.-14     	; 0x512 <CAN_message_send+0x76>
     520:	81 e3       	ldi	r24, 0x31	; 49
     522:	03 d1       	rcall	.+518    	; 0x72a <MCP2515_write_data>
     524:	81 e0       	ldi	r24, 0x01	; 1
     526:	24 d1       	rcall	.+584    	; 0x770 <MCP2515_request_to_send>
     528:	0f b6       	in	r0, 0x3f	; 63
     52a:	f8 94       	cli
     52c:	1e bf       	out	0x3e, r17	; 62
     52e:	0f be       	out	0x3f, r0	; 63
     530:	0d bf       	out	0x3d, r16	; 61
     532:	df 91       	pop	r29
     534:	cf 91       	pop	r28
     536:	1f 91       	pop	r17
     538:	0f 91       	pop	r16
     53a:	08 95       	ret

0000053c <CAN_data_receive>:
     53c:	8f 92       	push	r8
     53e:	9f 92       	push	r9
     540:	af 92       	push	r10
     542:	bf 92       	push	r11
     544:	cf 92       	push	r12
     546:	df 92       	push	r13
     548:	ef 92       	push	r14
     54a:	ff 92       	push	r15
     54c:	0f 93       	push	r16
     54e:	1f 93       	push	r17
     550:	cf 93       	push	r28
     552:	df 93       	push	r29
     554:	cd b7       	in	r28, 0x3d	; 61
     556:	de b7       	in	r29, 0x3e	; 62
     558:	2b 97       	sbiw	r28, 0x0b	; 11
     55a:	0f b6       	in	r0, 0x3f	; 63
     55c:	f8 94       	cli
     55e:	de bf       	out	0x3e, r29	; 62
     560:	0f be       	out	0x3f, r0	; 63
     562:	cd bf       	out	0x3d, r28	; 61
     564:	7c 01       	movw	r14, r24
     566:	80 91 f2 02 	lds	r24, 0x02F2
     56a:	88 23       	and	r24, r24
     56c:	b1 f1       	breq	.+108    	; 0x5da <CAN_data_receive+0x9e>
     56e:	81 e6       	ldi	r24, 0x61	; 97
     570:	cc d0       	rcall	.+408    	; 0x70a <MCP2515_read_data>
     572:	a8 2e       	mov	r10, r24
     574:	82 e6       	ldi	r24, 0x62	; 98
     576:	c9 d0       	rcall	.+402    	; 0x70a <MCP2515_read_data>
     578:	82 95       	swap	r24
     57a:	86 95       	lsr	r24
     57c:	87 70       	andi	r24, 0x07	; 7
     57e:	b1 2c       	mov	r11, r1
     580:	aa 0c       	add	r10, r10
     582:	bb 1c       	adc	r11, r11
     584:	aa 0c       	add	r10, r10
     586:	bb 1c       	adc	r11, r11
     588:	aa 0c       	add	r10, r10
     58a:	bb 1c       	adc	r11, r11
     58c:	a8 2a       	or	r10, r24
     58e:	85 e6       	ldi	r24, 0x65	; 101
     590:	bc d0       	rcall	.+376    	; 0x70a <MCP2515_read_data>
     592:	8f 70       	andi	r24, 0x0F	; 15
     594:	88 2e       	mov	r8, r24
     596:	99 f0       	breq	.+38     	; 0x5be <CAN_data_receive+0x82>
     598:	8e 01       	movw	r16, r28
     59a:	0c 5f       	subi	r16, 0xFC	; 252
     59c:	1f 4f       	sbci	r17, 0xFF	; 255
     59e:	68 01       	movw	r12, r16
     5a0:	c8 0e       	add	r12, r24
     5a2:	d1 1c       	adc	r13, r1
     5a4:	0f 2e       	mov	r0, r31
     5a6:	f6 e6       	ldi	r31, 0x66	; 102
     5a8:	9f 2e       	mov	r9, r31
     5aa:	f0 2d       	mov	r31, r0
     5ac:	89 2d       	mov	r24, r9
     5ae:	ad d0       	rcall	.+346    	; 0x70a <MCP2515_read_data>
     5b0:	f8 01       	movw	r30, r16
     5b2:	81 93       	st	Z+, r24
     5b4:	8f 01       	movw	r16, r30
     5b6:	93 94       	inc	r9
     5b8:	ec 15       	cp	r30, r12
     5ba:	fd 05       	cpc	r31, r13
     5bc:	b9 f7       	brne	.-18     	; 0x5ac <CAN_data_receive+0x70>
     5be:	10 92 f2 02 	sts	0x02F2, r1
     5c2:	ba 82       	std	Y+2, r11	; 0x02
     5c4:	a9 82       	std	Y+1, r10	; 0x01
     5c6:	8b 82       	std	Y+3, r8	; 0x03
     5c8:	8b e0       	ldi	r24, 0x0B	; 11
     5ca:	fe 01       	movw	r30, r28
     5cc:	31 96       	adiw	r30, 0x01	; 1
     5ce:	d7 01       	movw	r26, r14
     5d0:	01 90       	ld	r0, Z+
     5d2:	0d 92       	st	X+, r0
     5d4:	8a 95       	dec	r24
     5d6:	e1 f7       	brne	.-8      	; 0x5d0 <CAN_data_receive+0x94>
     5d8:	08 c0       	rjmp	.+16     	; 0x5ea <CAN_data_receive+0xae>
     5da:	8b e0       	ldi	r24, 0x0B	; 11
     5dc:	e8 e0       	ldi	r30, 0x08	; 8
     5de:	f2 e0       	ldi	r31, 0x02	; 2
     5e0:	d7 01       	movw	r26, r14
     5e2:	01 90       	ld	r0, Z+
     5e4:	0d 92       	st	X+, r0
     5e6:	8a 95       	dec	r24
     5e8:	e1 f7       	brne	.-8      	; 0x5e2 <CAN_data_receive+0xa6>
     5ea:	c7 01       	movw	r24, r14
     5ec:	2b 96       	adiw	r28, 0x0b	; 11
     5ee:	0f b6       	in	r0, 0x3f	; 63
     5f0:	f8 94       	cli
     5f2:	de bf       	out	0x3e, r29	; 62
     5f4:	0f be       	out	0x3f, r0	; 63
     5f6:	cd bf       	out	0x3d, r28	; 61
     5f8:	df 91       	pop	r29
     5fa:	cf 91       	pop	r28
     5fc:	1f 91       	pop	r17
     5fe:	0f 91       	pop	r16
     600:	ff 90       	pop	r15
     602:	ef 90       	pop	r14
     604:	df 90       	pop	r13
     606:	cf 90       	pop	r12
     608:	bf 90       	pop	r11
     60a:	af 90       	pop	r10
     60c:	9f 90       	pop	r9
     60e:	8f 90       	pop	r8
     610:	08 95       	ret

00000612 <CAN_error>:
     612:	cf 93       	push	r28
     614:	8d e2       	ldi	r24, 0x2D	; 45
     616:	79 d0       	rcall	.+242    	; 0x70a <MCP2515_read_data>
     618:	c8 2f       	mov	r28, r24
     61a:	82 ff       	sbrs	r24, 2
     61c:	03 c0       	rjmp	.+6      	; 0x624 <CAN_error+0x12>
     61e:	87 e5       	ldi	r24, 0x57	; 87
     620:	92 e0       	ldi	r25, 0x02	; 2
     622:	aa d6       	rcall	.+3412   	; 0x1378 <puts>
     624:	c1 ff       	sbrs	r28, 1
     626:	03 c0       	rjmp	.+6      	; 0x62e <CAN_error+0x1c>
     628:	85 e7       	ldi	r24, 0x75	; 117
     62a:	92 e0       	ldi	r25, 0x02	; 2
     62c:	a5 d6       	rcall	.+3402   	; 0x1378 <puts>
     62e:	cf 91       	pop	r28
     630:	08 95       	ret

00000632 <CAN_int_vect>:
     632:	cf 93       	push	r28
     634:	8c e2       	ldi	r24, 0x2C	; 44
     636:	69 d0       	rcall	.+210    	; 0x70a <MCP2515_read_data>
     638:	c8 2f       	mov	r28, r24
     63a:	85 fd       	sbrc	r24, 5
     63c:	ea df       	rcall	.-44     	; 0x612 <CAN_error>
     63e:	c0 ff       	sbrs	r28, 0
     640:	03 c0       	rjmp	.+6      	; 0x648 <CAN_int_vect+0x16>
     642:	81 e0       	ldi	r24, 0x01	; 1
     644:	80 93 f2 02 	sts	0x02F2, r24
     648:	40 e0       	ldi	r20, 0x00	; 0
     64a:	6f ef       	ldi	r22, 0xFF	; 255
     64c:	8c e2       	ldi	r24, 0x2C	; 44
     64e:	9c d0       	rcall	.+312    	; 0x788 <MCP2515_bit_modify>
     650:	cf 91       	pop	r28
     652:	08 95       	ret

00000654 <__vector_3>:
     654:	1f 92       	push	r1
     656:	0f 92       	push	r0
     658:	0f b6       	in	r0, 0x3f	; 63
     65a:	0f 92       	push	r0
     65c:	11 24       	eor	r1, r1
     65e:	0b b6       	in	r0, 0x3b	; 59
     660:	0f 92       	push	r0
     662:	2f 93       	push	r18
     664:	3f 93       	push	r19
     666:	4f 93       	push	r20
     668:	5f 93       	push	r21
     66a:	6f 93       	push	r22
     66c:	7f 93       	push	r23
     66e:	8f 93       	push	r24
     670:	9f 93       	push	r25
     672:	af 93       	push	r26
     674:	bf 93       	push	r27
     676:	ef 93       	push	r30
     678:	ff 93       	push	r31
     67a:	db df       	rcall	.-74     	; 0x632 <CAN_int_vect>
     67c:	ff 91       	pop	r31
     67e:	ef 91       	pop	r30
     680:	bf 91       	pop	r27
     682:	af 91       	pop	r26
     684:	9f 91       	pop	r25
     686:	8f 91       	pop	r24
     688:	7f 91       	pop	r23
     68a:	6f 91       	pop	r22
     68c:	5f 91       	pop	r21
     68e:	4f 91       	pop	r20
     690:	3f 91       	pop	r19
     692:	2f 91       	pop	r18
     694:	0f 90       	pop	r0
     696:	0b be       	out	0x3b, r0	; 59
     698:	0f 90       	pop	r0
     69a:	0f be       	out	0x3f, r0	; 63
     69c:	0f 90       	pop	r0
     69e:	1f 90       	pop	r1
     6a0:	18 95       	reti

000006a2 <DAC_init>:
     6a2:	1d c2       	rjmp	.+1082   	; 0xade <TWI_Master_Initialise>
     6a4:	08 95       	ret

000006a6 <DAC_write>:
     6a6:	cf 93       	push	r28
     6a8:	df 93       	push	r29
     6aa:	00 d0       	rcall	.+0      	; 0x6ac <DAC_write+0x6>
     6ac:	cd b7       	in	r28, 0x3d	; 61
     6ae:	de b7       	in	r29, 0x3e	; 62
     6b0:	90 e5       	ldi	r25, 0x50	; 80
     6b2:	99 83       	std	Y+1, r25	; 0x01
     6b4:	1a 82       	std	Y+2, r1	; 0x02
     6b6:	8b 83       	std	Y+3, r24	; 0x03
     6b8:	63 e0       	ldi	r22, 0x03	; 3
     6ba:	ce 01       	movw	r24, r28
     6bc:	01 96       	adiw	r24, 0x01	; 1
     6be:	19 d2       	rcall	.+1074   	; 0xaf2 <TWI_Start_Transceiver_With_Data>
     6c0:	0f 90       	pop	r0
     6c2:	0f 90       	pop	r0
     6c4:	0f 90       	pop	r0
     6c6:	df 91       	pop	r29
     6c8:	cf 91       	pop	r28
     6ca:	08 95       	ret

000006cc <IR_init>:
     6cc:	b6 ce       	rjmp	.-660    	; 0x43a <ADC_init>
     6ce:	08 95       	ret

000006d0 <IR_read>:
     6d0:	80 e0       	ldi	r24, 0x00	; 0
     6d2:	bc de       	rcall	.-648    	; 0x44c <ADC_read>
     6d4:	e1 ee       	ldi	r30, 0xE1	; 225
     6d6:	f2 e0       	ldi	r31, 0x02	; 2
     6d8:	20 81       	ld	r18, Z
     6da:	20 93 e0 02 	sts	0x02E0, r18
     6de:	a2 ee       	ldi	r26, 0xE2	; 226
     6e0:	b2 e0       	ldi	r27, 0x02	; 2
     6e2:	4c 91       	ld	r20, X
     6e4:	40 83       	st	Z, r20
     6e6:	e3 ee       	ldi	r30, 0xE3	; 227
     6e8:	f2 e0       	ldi	r31, 0x02	; 2
     6ea:	90 81       	ld	r25, Z
     6ec:	30 e0       	ldi	r19, 0x00	; 0
     6ee:	24 0f       	add	r18, r20
     6f0:	31 1d       	adc	r19, r1
     6f2:	29 0f       	add	r18, r25
     6f4:	31 1d       	adc	r19, r1
     6f6:	9c 93       	st	X, r25
     6f8:	80 83       	st	Z, r24
     6fa:	28 0f       	add	r18, r24
     6fc:	31 1d       	adc	r19, r1
     6fe:	81 e0       	ldi	r24, 0x01	; 1
     700:	28 3c       	cpi	r18, 0xC8	; 200
     702:	31 05       	cpc	r19, r1
     704:	08 f0       	brcs	.+2      	; 0x708 <IR_read+0x38>
     706:	80 e0       	ldi	r24, 0x00	; 0
     708:	08 95       	ret

0000070a <MCP2515_read_data>:
     70a:	cf 93       	push	r28
     70c:	c8 2f       	mov	r28, r24
     70e:	f8 94       	cli
     710:	e2 d1       	rcall	.+964    	; 0xad6 <SPI_SS_low>
     712:	83 e0       	ldi	r24, 0x03	; 3
     714:	da d1       	rcall	.+948    	; 0xaca <SPI_transcieve>
     716:	8c 2f       	mov	r24, r28
     718:	d8 d1       	rcall	.+944    	; 0xaca <SPI_transcieve>
     71a:	80 e0       	ldi	r24, 0x00	; 0
     71c:	d6 d1       	rcall	.+940    	; 0xaca <SPI_transcieve>
     71e:	c8 2f       	mov	r28, r24
     720:	dc d1       	rcall	.+952    	; 0xada <SPI_SS_high>
     722:	78 94       	sei
     724:	8c 2f       	mov	r24, r28
     726:	cf 91       	pop	r28
     728:	08 95       	ret

0000072a <MCP2515_write_data>:
     72a:	ef 92       	push	r14
     72c:	ff 92       	push	r15
     72e:	0f 93       	push	r16
     730:	1f 93       	push	r17
     732:	cf 93       	push	r28
     734:	df 93       	push	r29
     736:	c8 2f       	mov	r28, r24
     738:	7b 01       	movw	r14, r22
     73a:	8a 01       	movw	r16, r20
     73c:	f8 94       	cli
     73e:	cb d1       	rcall	.+918    	; 0xad6 <SPI_SS_low>
     740:	82 e0       	ldi	r24, 0x02	; 2
     742:	c3 d1       	rcall	.+902    	; 0xaca <SPI_transcieve>
     744:	8c 2f       	mov	r24, r28
     746:	c1 d1       	rcall	.+898    	; 0xaca <SPI_transcieve>
     748:	10 16       	cp	r1, r16
     74a:	11 06       	cpc	r1, r17
     74c:	44 f4       	brge	.+16     	; 0x75e <MCP2515_write_data+0x34>
     74e:	e7 01       	movw	r28, r14
     750:	0e 0d       	add	r16, r14
     752:	1f 1d       	adc	r17, r15
     754:	89 91       	ld	r24, Y+
     756:	b9 d1       	rcall	.+882    	; 0xaca <SPI_transcieve>
     758:	c0 17       	cp	r28, r16
     75a:	d1 07       	cpc	r29, r17
     75c:	d9 f7       	brne	.-10     	; 0x754 <MCP2515_write_data+0x2a>
     75e:	bd d1       	rcall	.+890    	; 0xada <SPI_SS_high>
     760:	78 94       	sei
     762:	df 91       	pop	r29
     764:	cf 91       	pop	r28
     766:	1f 91       	pop	r17
     768:	0f 91       	pop	r16
     76a:	ff 90       	pop	r15
     76c:	ef 90       	pop	r14
     76e:	08 95       	ret

00000770 <MCP2515_request_to_send>:
     770:	cf 93       	push	r28
     772:	c8 2f       	mov	r28, r24
     774:	f8 94       	cli
     776:	af d1       	rcall	.+862    	; 0xad6 <SPI_SS_low>
     778:	8c 2f       	mov	r24, r28
     77a:	87 70       	andi	r24, 0x07	; 7
     77c:	80 68       	ori	r24, 0x80	; 128
     77e:	a5 d1       	rcall	.+842    	; 0xaca <SPI_transcieve>
     780:	ac d1       	rcall	.+856    	; 0xada <SPI_SS_high>
     782:	78 94       	sei
     784:	cf 91       	pop	r28
     786:	08 95       	ret

00000788 <MCP2515_bit_modify>:
     788:	1f 93       	push	r17
     78a:	cf 93       	push	r28
     78c:	df 93       	push	r29
     78e:	18 2f       	mov	r17, r24
     790:	d6 2f       	mov	r29, r22
     792:	c4 2f       	mov	r28, r20
     794:	f8 94       	cli
     796:	9f d1       	rcall	.+830    	; 0xad6 <SPI_SS_low>
     798:	85 e0       	ldi	r24, 0x05	; 5
     79a:	97 d1       	rcall	.+814    	; 0xaca <SPI_transcieve>
     79c:	81 2f       	mov	r24, r17
     79e:	95 d1       	rcall	.+810    	; 0xaca <SPI_transcieve>
     7a0:	8d 2f       	mov	r24, r29
     7a2:	93 d1       	rcall	.+806    	; 0xaca <SPI_transcieve>
     7a4:	8c 2f       	mov	r24, r28
     7a6:	91 d1       	rcall	.+802    	; 0xaca <SPI_transcieve>
     7a8:	98 d1       	rcall	.+816    	; 0xada <SPI_SS_high>
     7aa:	78 94       	sei
     7ac:	df 91       	pop	r29
     7ae:	cf 91       	pop	r28
     7b0:	1f 91       	pop	r17
     7b2:	08 95       	ret

000007b4 <MCP2515_reset>:
     7b4:	f8 94       	cli
     7b6:	8f d1       	rcall	.+798    	; 0xad6 <SPI_SS_low>
     7b8:	80 ec       	ldi	r24, 0xC0	; 192
     7ba:	87 d1       	rcall	.+782    	; 0xaca <SPI_transcieve>
     7bc:	8e d1       	rcall	.+796    	; 0xada <SPI_SS_high>
     7be:	78 94       	sei
     7c0:	08 95       	ret

000007c2 <MCP2515_init>:
     7c2:	cf 93       	push	r28
     7c4:	df 93       	push	r29
     7c6:	1f 92       	push	r1
     7c8:	cd b7       	in	r28, 0x3d	; 61
     7ca:	de b7       	in	r29, 0x3e	; 62
     7cc:	77 d1       	rcall	.+750    	; 0xabc <SPI_master_init>
     7ce:	f2 df       	rcall	.-28     	; 0x7b4 <MCP2515_reset>
     7d0:	8f e3       	ldi	r24, 0x3F	; 63
     7d2:	9c e9       	ldi	r25, 0x9C	; 156
     7d4:	01 97       	sbiw	r24, 0x01	; 1
     7d6:	f1 f7       	brne	.-4      	; 0x7d4 <MCP2515_init+0x12>
     7d8:	00 c0       	rjmp	.+0      	; 0x7da <MCP2515_init+0x18>
     7da:	00 00       	nop
     7dc:	8e e0       	ldi	r24, 0x0E	; 14
     7de:	95 df       	rcall	.-214    	; 0x70a <MCP2515_read_data>
     7e0:	89 83       	std	Y+1, r24	; 0x01
     7e2:	89 81       	ldd	r24, Y+1	; 0x01
     7e4:	80 7e       	andi	r24, 0xE0	; 224
     7e6:	80 38       	cpi	r24, 0x80	; 128
     7e8:	29 f0       	breq	.+10     	; 0x7f4 <MCP2515_init+0x32>
     7ea:	8e e8       	ldi	r24, 0x8E	; 142
     7ec:	92 e0       	ldi	r25, 0x02	; 2
     7ee:	c4 d5       	rcall	.+2952   	; 0x1378 <puts>
     7f0:	81 e0       	ldi	r24, 0x01	; 1
     7f2:	01 c0       	rjmp	.+2      	; 0x7f6 <MCP2515_init+0x34>
     7f4:	80 e0       	ldi	r24, 0x00	; 0
     7f6:	0f 90       	pop	r0
     7f8:	df 91       	pop	r29
     7fa:	cf 91       	pop	r28
     7fc:	08 95       	ret

000007fe <MOTOR_max_encoder_value>:
     7fe:	80 91 f3 02 	lds	r24, 0x02F3
     802:	90 91 f4 02 	lds	r25, 0x02F4
     806:	08 95       	ret

00000808 <MOTOR_set_velocity>:
     808:	80 37       	cpi	r24, 0x70	; 112
     80a:	10 f4       	brcc	.+4      	; 0x810 <MOTOR_set_velocity+0x8>
     80c:	4c cf       	rjmp	.-360    	; 0x6a6 <DAC_write>
     80e:	08 95       	ret
     810:	80 e7       	ldi	r24, 0x70	; 112
     812:	49 cf       	rjmp	.-366    	; 0x6a6 <DAC_write>
     814:	08 95       	ret

00000816 <MOTOR_set_dir_right>:
     816:	88 23       	and	r24, r24
     818:	31 f0       	breq	.+12     	; 0x826 <MOTOR_set_dir_right+0x10>
     81a:	e2 e0       	ldi	r30, 0x02	; 2
     81c:	f1 e0       	ldi	r31, 0x01	; 1
     81e:	80 81       	ld	r24, Z
     820:	82 60       	ori	r24, 0x02	; 2
     822:	80 83       	st	Z, r24
     824:	08 95       	ret
     826:	e2 e0       	ldi	r30, 0x02	; 2
     828:	f1 e0       	ldi	r31, 0x01	; 1
     82a:	80 81       	ld	r24, Z
     82c:	8d 7f       	andi	r24, 0xFD	; 253
     82e:	80 83       	st	Z, r24
     830:	08 95       	ret

00000832 <MOTOR_read_encoder>:
     832:	cf 93       	push	r28
     834:	df 93       	push	r29
     836:	1f 92       	push	r1
     838:	1f 92       	push	r1
     83a:	cd b7       	in	r28, 0x3d	; 61
     83c:	de b7       	in	r29, 0x3e	; 62
     83e:	1a 82       	std	Y+2, r1	; 0x02
     840:	19 82       	std	Y+1, r1	; 0x01
     842:	e2 e0       	ldi	r30, 0x02	; 2
     844:	f1 e0       	ldi	r31, 0x01	; 1
     846:	80 81       	ld	r24, Z
     848:	8f 7d       	andi	r24, 0xDF	; 223
     84a:	80 83       	st	Z, r24
     84c:	80 81       	ld	r24, Z
     84e:	88 60       	ori	r24, 0x08	; 8
     850:	80 83       	st	Z, r24
     852:	2f ef       	ldi	r18, 0xFF	; 255
     854:	89 ef       	ldi	r24, 0xF9	; 249
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	21 50       	subi	r18, 0x01	; 1
     85a:	80 40       	sbci	r24, 0x00	; 0
     85c:	90 40       	sbci	r25, 0x00	; 0
     85e:	e1 f7       	brne	.-8      	; 0x858 <MOTOR_read_encoder+0x26>
     860:	00 c0       	rjmp	.+0      	; 0x862 <MOTOR_read_encoder+0x30>
     862:	00 00       	nop
     864:	20 91 06 01 	lds	r18, 0x0106
     868:	89 81       	ldd	r24, Y+1	; 0x01
     86a:	9a 81       	ldd	r25, Y+2	; 0x02
     86c:	82 2b       	or	r24, r18
     86e:	9a 83       	std	Y+2, r25	; 0x02
     870:	89 83       	std	Y+1, r24	; 0x01
     872:	80 81       	ld	r24, Z
     874:	87 7f       	andi	r24, 0xF7	; 247
     876:	80 83       	st	Z, r24
     878:	2f ef       	ldi	r18, 0xFF	; 255
     87a:	89 ef       	ldi	r24, 0xF9	; 249
     87c:	90 e0       	ldi	r25, 0x00	; 0
     87e:	21 50       	subi	r18, 0x01	; 1
     880:	80 40       	sbci	r24, 0x00	; 0
     882:	90 40       	sbci	r25, 0x00	; 0
     884:	e1 f7       	brne	.-8      	; 0x87e <MOTOR_read_encoder+0x4c>
     886:	00 c0       	rjmp	.+0      	; 0x888 <MOTOR_read_encoder+0x56>
     888:	00 00       	nop
     88a:	20 91 06 01 	lds	r18, 0x0106
     88e:	89 81       	ldd	r24, Y+1	; 0x01
     890:	9a 81       	ldd	r25, Y+2	; 0x02
     892:	92 2b       	or	r25, r18
     894:	9a 83       	std	Y+2, r25	; 0x02
     896:	89 83       	std	Y+1, r24	; 0x01
     898:	80 81       	ld	r24, Z
     89a:	80 62       	ori	r24, 0x20	; 32
     89c:	80 83       	st	Z, r24
     89e:	89 81       	ldd	r24, Y+1	; 0x01
     8a0:	9a 81       	ldd	r25, Y+2	; 0x02
     8a2:	91 95       	neg	r25
     8a4:	81 95       	neg	r24
     8a6:	91 09       	sbc	r25, r1
     8a8:	0f 90       	pop	r0
     8aa:	0f 90       	pop	r0
     8ac:	df 91       	pop	r29
     8ae:	cf 91       	pop	r28
     8b0:	08 95       	ret

000008b2 <MOTOR_calibrate>:
     8b2:	80 e0       	ldi	r24, 0x00	; 0
     8b4:	b0 df       	rcall	.-160    	; 0x816 <MOTOR_set_dir_right>
     8b6:	80 e7       	ldi	r24, 0x70	; 112
     8b8:	f6 de       	rcall	.-532    	; 0x6a6 <DAC_write>
     8ba:	2f ef       	ldi	r18, 0xFF	; 255
     8bc:	8b e7       	ldi	r24, 0x7B	; 123
     8be:	92 e9       	ldi	r25, 0x92	; 146
     8c0:	21 50       	subi	r18, 0x01	; 1
     8c2:	80 40       	sbci	r24, 0x00	; 0
     8c4:	90 40       	sbci	r25, 0x00	; 0
     8c6:	e1 f7       	brne	.-8      	; 0x8c0 <MOTOR_calibrate+0xe>
     8c8:	00 c0       	rjmp	.+0      	; 0x8ca <MOTOR_calibrate+0x18>
     8ca:	00 00       	nop
     8cc:	80 e0       	ldi	r24, 0x00	; 0
     8ce:	eb de       	rcall	.-554    	; 0x6a6 <DAC_write>
     8d0:	2f ef       	ldi	r18, 0xFF	; 255
     8d2:	89 ef       	ldi	r24, 0xF9	; 249
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	21 50       	subi	r18, 0x01	; 1
     8d8:	80 40       	sbci	r24, 0x00	; 0
     8da:	90 40       	sbci	r25, 0x00	; 0
     8dc:	e1 f7       	brne	.-8      	; 0x8d6 <MOTOR_calibrate+0x24>
     8de:	00 c0       	rjmp	.+0      	; 0x8e0 <MOTOR_calibrate+0x2e>
     8e0:	00 00       	nop
     8e2:	e2 e0       	ldi	r30, 0x02	; 2
     8e4:	f1 e0       	ldi	r31, 0x01	; 1
     8e6:	80 81       	ld	r24, Z
     8e8:	8f 7b       	andi	r24, 0xBF	; 191
     8ea:	80 83       	st	Z, r24
     8ec:	2f ef       	ldi	r18, 0xFF	; 255
     8ee:	89 ef       	ldi	r24, 0xF9	; 249
     8f0:	90 e0       	ldi	r25, 0x00	; 0
     8f2:	21 50       	subi	r18, 0x01	; 1
     8f4:	80 40       	sbci	r24, 0x00	; 0
     8f6:	90 40       	sbci	r25, 0x00	; 0
     8f8:	e1 f7       	brne	.-8      	; 0x8f2 <MOTOR_calibrate+0x40>
     8fa:	00 c0       	rjmp	.+0      	; 0x8fc <MOTOR_calibrate+0x4a>
     8fc:	00 00       	nop
     8fe:	80 81       	ld	r24, Z
     900:	80 64       	ori	r24, 0x40	; 64
     902:	80 83       	st	Z, r24
     904:	96 df       	rcall	.-212    	; 0x832 <MOTOR_read_encoder>
     906:	9f 93       	push	r25
     908:	8f 93       	push	r24
     90a:	80 ec       	ldi	r24, 0xC0	; 192
     90c:	92 e0       	ldi	r25, 0x02	; 2
     90e:	9f 93       	push	r25
     910:	8f 93       	push	r24
     912:	21 d5       	rcall	.+2626   	; 0x1356 <printf>
     914:	81 e0       	ldi	r24, 0x01	; 1
     916:	7f df       	rcall	.-258    	; 0x816 <MOTOR_set_dir_right>
     918:	80 e7       	ldi	r24, 0x70	; 112
     91a:	c5 de       	rcall	.-630    	; 0x6a6 <DAC_write>
     91c:	2f ef       	ldi	r18, 0xFF	; 255
     91e:	8b e7       	ldi	r24, 0x7B	; 123
     920:	92 e9       	ldi	r25, 0x92	; 146
     922:	21 50       	subi	r18, 0x01	; 1
     924:	80 40       	sbci	r24, 0x00	; 0
     926:	90 40       	sbci	r25, 0x00	; 0
     928:	e1 f7       	brne	.-8      	; 0x922 <MOTOR_calibrate+0x70>
     92a:	00 c0       	rjmp	.+0      	; 0x92c <MOTOR_calibrate+0x7a>
     92c:	00 00       	nop
     92e:	81 df       	rcall	.-254    	; 0x832 <MOTOR_read_encoder>
     930:	80 93 f3 02 	sts	0x02F3, r24
     934:	90 93 f4 02 	sts	0x02F4, r25
     938:	9f 93       	push	r25
     93a:	8f 93       	push	r24
     93c:	8a ec       	ldi	r24, 0xCA	; 202
     93e:	92 e0       	ldi	r25, 0x02	; 2
     940:	9f 93       	push	r25
     942:	8f 93       	push	r24
     944:	08 d5       	rcall	.+2576   	; 0x1356 <printf>
     946:	2f ef       	ldi	r18, 0xFF	; 255
     948:	83 ed       	ldi	r24, 0xD3	; 211
     94a:	90 e3       	ldi	r25, 0x30	; 48
     94c:	21 50       	subi	r18, 0x01	; 1
     94e:	80 40       	sbci	r24, 0x00	; 0
     950:	90 40       	sbci	r25, 0x00	; 0
     952:	e1 f7       	brne	.-8      	; 0x94c <MOTOR_calibrate+0x9a>
     954:	00 c0       	rjmp	.+0      	; 0x956 <MOTOR_calibrate+0xa4>
     956:	00 00       	nop
     958:	8d b7       	in	r24, 0x3d	; 61
     95a:	9e b7       	in	r25, 0x3e	; 62
     95c:	08 96       	adiw	r24, 0x08	; 8
     95e:	0f b6       	in	r0, 0x3f	; 63
     960:	f8 94       	cli
     962:	9e bf       	out	0x3e, r25	; 62
     964:	0f be       	out	0x3f, r0	; 63
     966:	8d bf       	out	0x3d, r24	; 61
     968:	08 95       	ret

0000096a <MOTOR_init>:
     96a:	9b de       	rcall	.-714    	; 0x6a2 <DAC_init>
     96c:	e1 e0       	ldi	r30, 0x01	; 1
     96e:	f1 e0       	ldi	r31, 0x01	; 1
     970:	80 81       	ld	r24, Z
     972:	8a 67       	ori	r24, 0x7A	; 122
     974:	80 83       	st	Z, r24
     976:	10 92 07 01 	sts	0x0107, r1
     97a:	e2 e0       	ldi	r30, 0x02	; 2
     97c:	f1 e0       	ldi	r31, 0x01	; 1
     97e:	80 81       	ld	r24, Z
     980:	82 61       	ori	r24, 0x12	; 18
     982:	80 83       	st	Z, r24
     984:	80 81       	ld	r24, Z
     986:	8f 7b       	andi	r24, 0xBF	; 191
     988:	80 83       	st	Z, r24
     98a:	2f ef       	ldi	r18, 0xFF	; 255
     98c:	89 ef       	ldi	r24, 0xF9	; 249
     98e:	90 e0       	ldi	r25, 0x00	; 0
     990:	21 50       	subi	r18, 0x01	; 1
     992:	80 40       	sbci	r24, 0x00	; 0
     994:	90 40       	sbci	r25, 0x00	; 0
     996:	e1 f7       	brne	.-8      	; 0x990 <MOTOR_init+0x26>
     998:	00 c0       	rjmp	.+0      	; 0x99a <MOTOR_init+0x30>
     99a:	00 00       	nop
     99c:	80 81       	ld	r24, Z
     99e:	80 64       	ori	r24, 0x40	; 64
     9a0:	80 83       	st	Z, r24
     9a2:	87 cf       	rjmp	.-242    	; 0x8b2 <MOTOR_calibrate>
     9a4:	08 95       	ret

000009a6 <PWM_set_period>:
     9a6:	a0 e8       	ldi	r26, 0x80	; 128
     9a8:	b0 e0       	ldi	r27, 0x00	; 0
     9aa:	22 e0       	ldi	r18, 0x02	; 2
     9ac:	2c 93       	st	X, r18
     9ae:	e1 e8       	ldi	r30, 0x81	; 129
     9b0:	f0 e0       	ldi	r31, 0x00	; 0
     9b2:	28 e1       	ldi	r18, 0x18	; 24
     9b4:	20 83       	st	Z, r18
     9b6:	2c 91       	ld	r18, X
     9b8:	20 68       	ori	r18, 0x80	; 128
     9ba:	2c 93       	st	X, r18
     9bc:	20 81       	ld	r18, Z
     9be:	23 60       	ori	r18, 0x03	; 3
     9c0:	20 83       	st	Z, r18
     9c2:	20 e0       	ldi	r18, 0x00	; 0
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	4a e7       	ldi	r20, 0x7A	; 122
     9c8:	53 e4       	ldi	r21, 0x43	; 67
     9ca:	12 d4       	rcall	.+2084   	; 0x11f0 <__mulsf3>
     9cc:	2f d3       	rcall	.+1630   	; 0x102c <__fixunssfsi>
     9ce:	70 93 87 00 	sts	0x0087, r23
     9d2:	60 93 86 00 	sts	0x0086, r22
     9d6:	25 9a       	sbi	0x04, 5	; 4
     9d8:	08 95       	ret

000009da <PWM_set_pulse_width>:
     9da:	20 e0       	ldi	r18, 0x00	; 0
     9dc:	30 e0       	ldi	r19, 0x00	; 0
     9de:	4a e7       	ldi	r20, 0x7A	; 122
     9e0:	53 e4       	ldi	r21, 0x43	; 67
     9e2:	06 d4       	rcall	.+2060   	; 0x11f0 <__mulsf3>
     9e4:	23 d3       	rcall	.+1606   	; 0x102c <__fixunssfsi>
     9e6:	70 93 89 00 	sts	0x0089, r23
     9ea:	60 93 88 00 	sts	0x0088, r22
     9ee:	08 95       	ret

000009f0 <SERVO_init>:
     9f0:	60 e0       	ldi	r22, 0x00	; 0
     9f2:	70 e0       	ldi	r23, 0x00	; 0
     9f4:	80 ea       	ldi	r24, 0xA0	; 160
     9f6:	91 e4       	ldi	r25, 0x41	; 65
     9f8:	d6 df       	rcall	.-84     	; 0x9a6 <PWM_set_period>
     9fa:	67 ed       	ldi	r22, 0xD7	; 215
     9fc:	73 ea       	ldi	r23, 0xA3	; 163
     9fe:	80 ec       	ldi	r24, 0xC0	; 192
     a00:	9f e3       	ldi	r25, 0x3F	; 63
     a02:	eb cf       	rjmp	.-42     	; 0x9da <PWM_set_pulse_width>
     a04:	08 95       	ret

00000a06 <SERVO_write>:
     a06:	cf 92       	push	r12
     a08:	df 92       	push	r13
     a0a:	ef 92       	push	r14
     a0c:	ff 92       	push	r15
     a0e:	68 2f       	mov	r22, r24
     a10:	77 27       	eor	r23, r23
     a12:	67 fd       	sbrc	r22, 7
     a14:	70 95       	com	r23
     a16:	87 2f       	mov	r24, r23
     a18:	97 2f       	mov	r25, r23
     a1a:	36 d3       	rcall	.+1644   	; 0x1088 <__floatsisf>
     a1c:	20 e0       	ldi	r18, 0x00	; 0
     a1e:	30 e0       	ldi	r19, 0x00	; 0
     a20:	48 ec       	ldi	r20, 0xC8	; 200
     a22:	52 e4       	ldi	r21, 0x42	; 66
     a24:	96 d2       	rcall	.+1324   	; 0xf52 <__divsf3>
     a26:	20 e0       	ldi	r18, 0x00	; 0
     a28:	30 e0       	ldi	r19, 0x00	; 0
     a2a:	40 e0       	ldi	r20, 0x00	; 0
     a2c:	5f e3       	ldi	r21, 0x3F	; 63
     a2e:	e0 d3       	rcall	.+1984   	; 0x11f0 <__mulsf3>
     a30:	20 e0       	ldi	r18, 0x00	; 0
     a32:	30 e0       	ldi	r19, 0x00	; 0
     a34:	40 ec       	ldi	r20, 0xC0	; 192
     a36:	5f e3       	ldi	r21, 0x3F	; 63
     a38:	24 d2       	rcall	.+1096   	; 0xe82 <__addsf3>
     a3a:	6b 01       	movw	r12, r22
     a3c:	7c 01       	movw	r14, r24
     a3e:	26 e6       	ldi	r18, 0x66	; 102
     a40:	36 e6       	ldi	r19, 0x66	; 102
     a42:	46 e0       	ldi	r20, 0x06	; 6
     a44:	50 e4       	ldi	r21, 0x40	; 64
     a46:	d0 d3       	rcall	.+1952   	; 0x11e8 <__gesf2>
     a48:	18 16       	cp	r1, r24
     a4a:	54 f0       	brlt	.+20     	; 0xa60 <SERVO_write+0x5a>
     a4c:	26 e6       	ldi	r18, 0x66	; 102
     a4e:	36 e6       	ldi	r19, 0x66	; 102
     a50:	46 e6       	ldi	r20, 0x66	; 102
     a52:	5f e3       	ldi	r21, 0x3F	; 63
     a54:	c7 01       	movw	r24, r14
     a56:	b6 01       	movw	r22, r12
     a58:	78 d2       	rcall	.+1264   	; 0xf4a <__cmpsf2>
     a5a:	88 23       	and	r24, r24
     a5c:	5c f0       	brlt	.+22     	; 0xa74 <SERVO_write+0x6e>
     a5e:	12 c0       	rjmp	.+36     	; 0xa84 <SERVO_write+0x7e>
     a60:	0f 2e       	mov	r0, r31
     a62:	f6 e6       	ldi	r31, 0x66	; 102
     a64:	cf 2e       	mov	r12, r31
     a66:	dc 2c       	mov	r13, r12
     a68:	f6 e0       	ldi	r31, 0x06	; 6
     a6a:	ef 2e       	mov	r14, r31
     a6c:	f0 e4       	ldi	r31, 0x40	; 64
     a6e:	ff 2e       	mov	r15, r31
     a70:	f0 2d       	mov	r31, r0
     a72:	08 c0       	rjmp	.+16     	; 0xa84 <SERVO_write+0x7e>
     a74:	0f 2e       	mov	r0, r31
     a76:	f6 e6       	ldi	r31, 0x66	; 102
     a78:	cf 2e       	mov	r12, r31
     a7a:	dc 2c       	mov	r13, r12
     a7c:	ec 2c       	mov	r14, r12
     a7e:	ff e3       	ldi	r31, 0x3F	; 63
     a80:	ff 2e       	mov	r15, r31
     a82:	f0 2d       	mov	r31, r0
     a84:	c7 01       	movw	r24, r14
     a86:	b6 01       	movw	r22, r12
     a88:	a8 df       	rcall	.-176    	; 0x9da <PWM_set_pulse_width>
     a8a:	ff 90       	pop	r15
     a8c:	ef 90       	pop	r14
     a8e:	df 90       	pop	r13
     a90:	cf 90       	pop	r12
     a92:	08 95       	ret

00000a94 <SOLENOID_init>:
#include <util/delay.h>

#include "solenoid.h"

void SOLENOID_init() {
	SOLENOID_DDR |= (1 << SOLENOID_PIN);
     a94:	6c 9a       	sbi	0x0d, 4	; 13
     a96:	08 95       	ret

00000a98 <SOLENOID_shoot>:
}

void SOLENOID_shoot(uint8_t enable) {
	static uint8_t enabled = 0;
	if(enable != enabled) {
     a98:	90 91 e4 02 	lds	r25, 0x02E4
     a9c:	89 17       	cp	r24, r25
     a9e:	69 f0       	breq	.+26     	; 0xaba <SOLENOID_shoot+0x22>
		if(enable) {
     aa0:	88 23       	and	r24, r24
     aa2:	11 f0       	breq	.+4      	; 0xaa8 <SOLENOID_shoot+0x10>
			SOLENOID_PORT &= ~(1 << SOLENOID_PIN);
     aa4:	74 98       	cbi	0x0e, 4	; 14
     aa6:	01 c0       	rjmp	.+2      	; 0xaaa <SOLENOID_shoot+0x12>
		} else {
			SOLENOID_PORT |= (1 << SOLENOID_PIN);
     aa8:	74 9a       	sbi	0x0e, 4	; 14
     aaa:	ef e3       	ldi	r30, 0x3F	; 63
     aac:	fc e9       	ldi	r31, 0x9C	; 156
     aae:	31 97       	sbiw	r30, 0x01	; 1
     ab0:	f1 f7       	brne	.-4      	; 0xaae <SOLENOID_shoot+0x16>
     ab2:	00 c0       	rjmp	.+0      	; 0xab4 <SOLENOID_shoot+0x1c>
     ab4:	00 00       	nop
		}
		_delay_ms(10);
		enabled = enable;
     ab6:	80 93 e4 02 	sts	0x02E4, r24
     aba:	08 95       	ret

00000abc <SPI_master_init>:
     abc:	87 e8       	ldi	r24, 0x87	; 135
     abe:	84 b9       	out	0x04, r24	; 4
     ac0:	28 9a       	sbi	0x05, 0	; 5
     ac2:	8c b5       	in	r24, 0x2c	; 44
     ac4:	81 65       	ori	r24, 0x51	; 81
     ac6:	8c bd       	out	0x2c, r24	; 44
     ac8:	08 95       	ret

00000aca <SPI_transcieve>:
     aca:	8e bd       	out	0x2e, r24	; 46
     acc:	0d b4       	in	r0, 0x2d	; 45
     ace:	07 fe       	sbrs	r0, 7
     ad0:	fd cf       	rjmp	.-6      	; 0xacc <SPI_transcieve+0x2>
     ad2:	8e b5       	in	r24, 0x2e	; 46
     ad4:	08 95       	ret

00000ad6 <SPI_SS_low>:
     ad6:	2f 98       	cbi	0x05, 7	; 5
     ad8:	08 95       	ret

00000ada <SPI_SS_high>:
     ada:	2f 9a       	sbi	0x05, 7	; 5
     adc:	08 95       	ret

00000ade <TWI_Master_Initialise>:
     ade:	8c e0       	ldi	r24, 0x0C	; 12
     ae0:	80 93 b8 00 	sts	0x00B8, r24
     ae4:	8f ef       	ldi	r24, 0xFF	; 255
     ae6:	80 93 bb 00 	sts	0x00BB, r24
     aea:	84 e0       	ldi	r24, 0x04	; 4
     aec:	80 93 bc 00 	sts	0x00BC, r24
     af0:	08 95       	ret

00000af2 <TWI_Start_Transceiver_With_Data>:
     af2:	ec eb       	ldi	r30, 0xBC	; 188
     af4:	f0 e0       	ldi	r31, 0x00	; 0
     af6:	20 81       	ld	r18, Z
     af8:	20 fd       	sbrc	r18, 0
     afa:	fd cf       	rjmp	.-6      	; 0xaf6 <TWI_Start_Transceiver_With_Data+0x4>
     afc:	60 93 e7 02 	sts	0x02E7, r22
     b00:	fc 01       	movw	r30, r24
     b02:	20 81       	ld	r18, Z
     b04:	20 93 e8 02 	sts	0x02E8, r18
     b08:	20 fd       	sbrc	r18, 0
     b0a:	0c c0       	rjmp	.+24     	; 0xb24 <TWI_Start_Transceiver_With_Data+0x32>
     b0c:	62 30       	cpi	r22, 0x02	; 2
     b0e:	50 f0       	brcs	.+20     	; 0xb24 <TWI_Start_Transceiver_With_Data+0x32>
     b10:	dc 01       	movw	r26, r24
     b12:	11 96       	adiw	r26, 0x01	; 1
     b14:	e9 ee       	ldi	r30, 0xE9	; 233
     b16:	f2 e0       	ldi	r31, 0x02	; 2
     b18:	81 e0       	ldi	r24, 0x01	; 1
     b1a:	9d 91       	ld	r25, X+
     b1c:	91 93       	st	Z+, r25
     b1e:	8f 5f       	subi	r24, 0xFF	; 255
     b20:	86 13       	cpse	r24, r22
     b22:	fb cf       	rjmp	.-10     	; 0xb1a <TWI_Start_Transceiver_With_Data+0x28>
     b24:	10 92 e6 02 	sts	0x02E6, r1
     b28:	88 ef       	ldi	r24, 0xF8	; 248
     b2a:	80 93 13 02 	sts	0x0213, r24
     b2e:	85 ea       	ldi	r24, 0xA5	; 165
     b30:	80 93 bc 00 	sts	0x00BC, r24
     b34:	08 95       	ret

00000b36 <__vector_39>:
     b36:	1f 92       	push	r1
     b38:	0f 92       	push	r0
     b3a:	0f b6       	in	r0, 0x3f	; 63
     b3c:	0f 92       	push	r0
     b3e:	11 24       	eor	r1, r1
     b40:	0b b6       	in	r0, 0x3b	; 59
     b42:	0f 92       	push	r0
     b44:	2f 93       	push	r18
     b46:	3f 93       	push	r19
     b48:	8f 93       	push	r24
     b4a:	9f 93       	push	r25
     b4c:	af 93       	push	r26
     b4e:	bf 93       	push	r27
     b50:	ef 93       	push	r30
     b52:	ff 93       	push	r31
     b54:	80 91 b9 00 	lds	r24, 0x00B9
     b58:	90 e0       	ldi	r25, 0x00	; 0
     b5a:	fc 01       	movw	r30, r24
     b5c:	38 97       	sbiw	r30, 0x08	; 8
     b5e:	e1 35       	cpi	r30, 0x51	; 81
     b60:	f1 05       	cpc	r31, r1
     b62:	08 f0       	brcs	.+2      	; 0xb66 <__vector_39+0x30>
     b64:	55 c0       	rjmp	.+170    	; 0xc10 <__vector_39+0xda>
     b66:	ee 58       	subi	r30, 0x8E	; 142
     b68:	ff 4f       	sbci	r31, 0xFF	; 255
     b6a:	a5 c3       	rjmp	.+1866   	; 0x12b6 <__tablejump2__>
     b6c:	10 92 e5 02 	sts	0x02E5, r1
     b70:	e0 91 e5 02 	lds	r30, 0x02E5
     b74:	80 91 e7 02 	lds	r24, 0x02E7
     b78:	e8 17       	cp	r30, r24
     b7a:	70 f4       	brcc	.+28     	; 0xb98 <__vector_39+0x62>
     b7c:	81 e0       	ldi	r24, 0x01	; 1
     b7e:	8e 0f       	add	r24, r30
     b80:	80 93 e5 02 	sts	0x02E5, r24
     b84:	f0 e0       	ldi	r31, 0x00	; 0
     b86:	e8 51       	subi	r30, 0x18	; 24
     b88:	fd 4f       	sbci	r31, 0xFD	; 253
     b8a:	80 81       	ld	r24, Z
     b8c:	80 93 bb 00 	sts	0x00BB, r24
     b90:	85 e8       	ldi	r24, 0x85	; 133
     b92:	80 93 bc 00 	sts	0x00BC, r24
     b96:	43 c0       	rjmp	.+134    	; 0xc1e <__vector_39+0xe8>
     b98:	80 91 e6 02 	lds	r24, 0x02E6
     b9c:	81 60       	ori	r24, 0x01	; 1
     b9e:	80 93 e6 02 	sts	0x02E6, r24
     ba2:	84 e9       	ldi	r24, 0x94	; 148
     ba4:	80 93 bc 00 	sts	0x00BC, r24
     ba8:	3a c0       	rjmp	.+116    	; 0xc1e <__vector_39+0xe8>
     baa:	e0 91 e5 02 	lds	r30, 0x02E5
     bae:	81 e0       	ldi	r24, 0x01	; 1
     bb0:	8e 0f       	add	r24, r30
     bb2:	80 93 e5 02 	sts	0x02E5, r24
     bb6:	80 91 bb 00 	lds	r24, 0x00BB
     bba:	f0 e0       	ldi	r31, 0x00	; 0
     bbc:	e8 51       	subi	r30, 0x18	; 24
     bbe:	fd 4f       	sbci	r31, 0xFD	; 253
     bc0:	80 83       	st	Z, r24
     bc2:	20 91 e5 02 	lds	r18, 0x02E5
     bc6:	30 e0       	ldi	r19, 0x00	; 0
     bc8:	80 91 e7 02 	lds	r24, 0x02E7
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	01 97       	sbiw	r24, 0x01	; 1
     bd0:	28 17       	cp	r18, r24
     bd2:	39 07       	cpc	r19, r25
     bd4:	24 f4       	brge	.+8      	; 0xbde <__vector_39+0xa8>
     bd6:	85 ec       	ldi	r24, 0xC5	; 197
     bd8:	80 93 bc 00 	sts	0x00BC, r24
     bdc:	20 c0       	rjmp	.+64     	; 0xc1e <__vector_39+0xe8>
     bde:	85 e8       	ldi	r24, 0x85	; 133
     be0:	80 93 bc 00 	sts	0x00BC, r24
     be4:	1c c0       	rjmp	.+56     	; 0xc1e <__vector_39+0xe8>
     be6:	80 91 bb 00 	lds	r24, 0x00BB
     bea:	e0 91 e5 02 	lds	r30, 0x02E5
     bee:	f0 e0       	ldi	r31, 0x00	; 0
     bf0:	e8 51       	subi	r30, 0x18	; 24
     bf2:	fd 4f       	sbci	r31, 0xFD	; 253
     bf4:	80 83       	st	Z, r24
     bf6:	80 91 e6 02 	lds	r24, 0x02E6
     bfa:	81 60       	ori	r24, 0x01	; 1
     bfc:	80 93 e6 02 	sts	0x02E6, r24
     c00:	84 e9       	ldi	r24, 0x94	; 148
     c02:	80 93 bc 00 	sts	0x00BC, r24
     c06:	0b c0       	rjmp	.+22     	; 0xc1e <__vector_39+0xe8>
     c08:	85 ea       	ldi	r24, 0xA5	; 165
     c0a:	80 93 bc 00 	sts	0x00BC, r24
     c0e:	07 c0       	rjmp	.+14     	; 0xc1e <__vector_39+0xe8>
     c10:	80 91 b9 00 	lds	r24, 0x00B9
     c14:	80 93 13 02 	sts	0x0213, r24
     c18:	84 e0       	ldi	r24, 0x04	; 4
     c1a:	80 93 bc 00 	sts	0x00BC, r24
     c1e:	ff 91       	pop	r31
     c20:	ef 91       	pop	r30
     c22:	bf 91       	pop	r27
     c24:	af 91       	pop	r26
     c26:	9f 91       	pop	r25
     c28:	8f 91       	pop	r24
     c2a:	3f 91       	pop	r19
     c2c:	2f 91       	pop	r18
     c2e:	0f 90       	pop	r0
     c30:	0b be       	out	0x3b, r0	; 59
     c32:	0f 90       	pop	r0
     c34:	0f be       	out	0x3f, r0	; 63
     c36:	0f 90       	pop	r0
     c38:	1f 90       	pop	r1
     c3a:	18 95       	reti

00000c3c <UART_transmit>:
     c3c:	e0 ec       	ldi	r30, 0xC0	; 192
     c3e:	f0 e0       	ldi	r31, 0x00	; 0
     c40:	90 81       	ld	r25, Z
     c42:	95 ff       	sbrs	r25, 5
     c44:	fd cf       	rjmp	.-6      	; 0xc40 <UART_transmit+0x4>
     c46:	80 93 c6 00 	sts	0x00C6, r24
     c4a:	80 e0       	ldi	r24, 0x00	; 0
     c4c:	90 e0       	ldi	r25, 0x00	; 0
     c4e:	08 95       	ret

00000c50 <UART_receive>:
     c50:	e0 ec       	ldi	r30, 0xC0	; 192
     c52:	f0 e0       	ldi	r31, 0x00	; 0
     c54:	80 81       	ld	r24, Z
     c56:	88 23       	and	r24, r24
     c58:	ec f7       	brge	.-6      	; 0xc54 <UART_receive+0x4>
     c5a:	80 91 c6 00 	lds	r24, 0x00C6
     c5e:	08 95       	ret

00000c60 <UART_init>:
     c60:	90 93 c5 00 	sts	0x00C5, r25
     c64:	80 93 c4 00 	sts	0x00C4, r24
     c68:	88 e1       	ldi	r24, 0x18	; 24
     c6a:	80 93 c1 00 	sts	0x00C1, r24
     c6e:	8e e0       	ldi	r24, 0x0E	; 14
     c70:	80 93 c2 00 	sts	0x00C2, r24
     c74:	68 e2       	ldi	r22, 0x28	; 40
     c76:	76 e0       	ldi	r23, 0x06	; 6
     c78:	8e e1       	ldi	r24, 0x1E	; 30
     c7a:	96 e0       	ldi	r25, 0x06	; 6
     c7c:	22 d3       	rcall	.+1604   	; 0x12c2 <fdevopen>
     c7e:	80 e0       	ldi	r24, 0x00	; 0
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	08 95       	ret

00000c84 <Initialize_timer3>:
}

int US_get_distance(){
	US_trigger();
	return distance_cm_avg;
}
     c84:	e1 e9       	ldi	r30, 0x91	; 145
     c86:	f0 e0       	ldi	r31, 0x00	; 0
     c88:	80 81       	ld	r24, Z
     c8a:	8e 7f       	andi	r24, 0xFE	; 254
     c8c:	80 83       	st	Z, r24
     c8e:	80 81       	ld	r24, Z
     c90:	82 60       	ori	r24, 0x02	; 2
     c92:	80 83       	st	Z, r24
     c94:	16 bc       	out	0x26, r1	; 38
     c96:	e1 e7       	ldi	r30, 0x71	; 113
     c98:	f0 e0       	ldi	r31, 0x00	; 0
     c9a:	80 81       	ld	r24, Z
     c9c:	81 60       	ori	r24, 0x01	; 1
     c9e:	80 83       	st	Z, r24
     ca0:	08 95       	ret

00000ca2 <US_init>:
     ca2:	f8 94       	cli
     ca4:	6b 9a       	sbi	0x0d, 3	; 13
     ca6:	6d 98       	cbi	0x0d, 5	; 13
     ca8:	ed 9a       	sbi	0x1d, 5	; 29
     caa:	ea e6       	ldi	r30, 0x6A	; 106
     cac:	f0 e0       	ldi	r31, 0x00	; 0
     cae:	80 81       	ld	r24, Z
     cb0:	84 60       	ori	r24, 0x04	; 4
     cb2:	80 83       	st	Z, r24
     cb4:	78 94       	sei
     cb6:	08 95       	ret

00000cb8 <__vector_6>:

ISR (US_ECHO_EDGE_DETECT)
{
     cb8:	1f 92       	push	r1
     cba:	0f 92       	push	r0
     cbc:	0f b6       	in	r0, 0x3f	; 63
     cbe:	0f 92       	push	r0
     cc0:	11 24       	eor	r1, r1
     cc2:	0b b6       	in	r0, 0x3b	; 59
     cc4:	0f 92       	push	r0
     cc6:	8f 92       	push	r8
     cc8:	9f 92       	push	r9
     cca:	af 92       	push	r10
     ccc:	bf 92       	push	r11
     cce:	cf 92       	push	r12
     cd0:	df 92       	push	r13
     cd2:	ef 92       	push	r14
     cd4:	ff 92       	push	r15
     cd6:	0f 93       	push	r16
     cd8:	1f 93       	push	r17
     cda:	2f 93       	push	r18
     cdc:	3f 93       	push	r19
     cde:	4f 93       	push	r20
     ce0:	5f 93       	push	r21
     ce2:	6f 93       	push	r22
     ce4:	7f 93       	push	r23
     ce6:	8f 93       	push	r24
     ce8:	9f 93       	push	r25
     cea:	af 93       	push	r26
     cec:	bf 93       	push	r27
     cee:	cf 93       	push	r28
     cf0:	df 93       	push	r29
     cf2:	ef 93       	push	r30
     cf4:	ff 93       	push	r31
	if(working = 1)		// Trigger has been sent, 
     cf6:	81 e0       	ldi	r24, 0x01	; 1
     cf8:	80 93 f5 02 	sts	0x02F5, r24
						// this is the returning signal proportional to the range
	{
		if(rising_edge == 0)		// Start measuring echo width
     cfc:	80 91 f8 02 	lds	r24, 0x02F8
     d00:	81 11       	cpse	r24, r1
     d02:	0d c0       	rjmp	.+26     	; 0xd1e <__vector_6+0x66>
		{
			rising_edge = 1;
     d04:	81 e0       	ldi	r24, 0x01	; 1
     d06:	80 93 f8 02 	sts	0x02F8, r24
			TCCR3B |= (1 << CS31);
     d0a:	e1 e9       	ldi	r30, 0x91	; 145
     d0c:	f0 e0       	ldi	r31, 0x00	; 0
     d0e:	80 81       	ld	r24, Z
     d10:	82 60       	ori	r24, 0x02	; 2
     d12:	80 83       	st	Z, r24
			timer_value = 0;
     d14:	10 92 f7 02 	sts	0x02F7, r1
     d18:	10 92 f6 02 	sts	0x02F6, r1
     d1c:	77 c0       	rjmp	.+238    	; 0xe0c <__vector_6+0x154>
		}
		else if (rising_edge == 1)	// Echo is finished
     d1e:	81 30       	cpi	r24, 0x01	; 1
     d20:	09 f0       	breq	.+2      	; 0xd24 <__vector_6+0x6c>
     d22:	74 c0       	rjmp	.+232    	; 0xe0c <__vector_6+0x154>
		{	
			/* 3th order moving average filter */
			static int filter[3];
			int new_val = (timer_value*30.5 + TCNT3)/2/58 + 5; //(2MHz/16bit = 30.5)
     d24:	60 91 f6 02 	lds	r22, 0x02F6
     d28:	70 91 f7 02 	lds	r23, 0x02F7
     d2c:	80 e0       	ldi	r24, 0x00	; 0
     d2e:	90 e0       	ldi	r25, 0x00	; 0
     d30:	a9 d1       	rcall	.+850    	; 0x1084 <__floatunsisf>
     d32:	20 e0       	ldi	r18, 0x00	; 0
     d34:	30 e0       	ldi	r19, 0x00	; 0
     d36:	44 ef       	ldi	r20, 0xF4	; 244
     d38:	51 e4       	ldi	r21, 0x41	; 65
     d3a:	5a d2       	rcall	.+1204   	; 0x11f0 <__mulsf3>
     d3c:	4b 01       	movw	r8, r22
     d3e:	5c 01       	movw	r10, r24
     d40:	c4 e9       	ldi	r28, 0x94	; 148
     d42:	d0 e0       	ldi	r29, 0x00	; 0
     d44:	c8 80       	ld	r12, Y
     d46:	d9 80       	ldd	r13, Y+1	; 0x01
			distance_cm_avg = (timer_value*30.5 + TCNT3)/2/58 + 5;
     d48:	68 81       	ld	r22, Y
     d4a:	79 81       	ldd	r23, Y+1	; 0x01
			for(int i = 1; i < 3; i++) {
				distance_cm_avg += filter[i];
     d4c:	0f 2e       	mov	r0, r31
     d4e:	fe ee       	ldi	r31, 0xEE	; 238
     d50:	ef 2e       	mov	r14, r31
     d52:	f2 e0       	ldi	r31, 0x02	; 2
     d54:	ff 2e       	mov	r15, r31
     d56:	f0 2d       	mov	r31, r0
     d58:	f7 01       	movw	r30, r14
     d5a:	00 81       	ld	r16, Z
     d5c:	11 81       	ldd	r17, Z+1	; 0x01
		else if (rising_edge == 1)	// Echo is finished
		{	
			/* 3th order moving average filter */
			static int filter[3];
			int new_val = (timer_value*30.5 + TCNT3)/2/58 + 5; //(2MHz/16bit = 30.5)
			distance_cm_avg = (timer_value*30.5 + TCNT3)/2/58 + 5;
     d5e:	80 e0       	ldi	r24, 0x00	; 0
     d60:	90 e0       	ldi	r25, 0x00	; 0
     d62:	90 d1       	rcall	.+800    	; 0x1084 <__floatunsisf>
     d64:	9b 01       	movw	r18, r22
     d66:	ac 01       	movw	r20, r24
     d68:	c5 01       	movw	r24, r10
     d6a:	b4 01       	movw	r22, r8
     d6c:	8a d0       	rcall	.+276    	; 0xe82 <__addsf3>
     d6e:	20 e0       	ldi	r18, 0x00	; 0
     d70:	30 e0       	ldi	r19, 0x00	; 0
     d72:	40 e0       	ldi	r20, 0x00	; 0
     d74:	5f e3       	ldi	r21, 0x3F	; 63
     d76:	3c d2       	rcall	.+1144   	; 0x11f0 <__mulsf3>
     d78:	20 e0       	ldi	r18, 0x00	; 0
     d7a:	30 e0       	ldi	r19, 0x00	; 0
     d7c:	48 e6       	ldi	r20, 0x68	; 104
     d7e:	52 e4       	ldi	r21, 0x42	; 66
     d80:	e8 d0       	rcall	.+464    	; 0xf52 <__divsf3>
     d82:	20 e0       	ldi	r18, 0x00	; 0
     d84:	30 e0       	ldi	r19, 0x00	; 0
     d86:	40 ea       	ldi	r20, 0xA0	; 160
     d88:	50 e4       	ldi	r21, 0x40	; 64
     d8a:	7b d0       	rcall	.+246    	; 0xe82 <__addsf3>
     d8c:	4f d1       	rcall	.+670    	; 0x102c <__fixunssfsi>
			for(int i = 1; i < 3; i++) {
				distance_cm_avg += filter[i];
     d8e:	60 0f       	add	r22, r16
     d90:	71 1f       	adc	r23, r17
				filter[i - 1] = filter[i];
     d92:	10 93 ed 02 	sts	0x02ED, r17
     d96:	00 93 ec 02 	sts	0x02EC, r16
			/* 3th order moving average filter */
			static int filter[3];
			int new_val = (timer_value*30.5 + TCNT3)/2/58 + 5; //(2MHz/16bit = 30.5)
			distance_cm_avg = (timer_value*30.5 + TCNT3)/2/58 + 5;
			for(int i = 1; i < 3; i++) {
				distance_cm_avg += filter[i];
     d9a:	00 ef       	ldi	r16, 0xF0	; 240
     d9c:	12 e0       	ldi	r17, 0x02	; 2
     d9e:	f8 01       	movw	r30, r16
     da0:	80 81       	ld	r24, Z
     da2:	91 81       	ldd	r25, Z+1	; 0x01
				filter[i - 1] = filter[i];
     da4:	f7 01       	movw	r30, r14
     da6:	91 83       	std	Z+1, r25	; 0x01
     da8:	80 83       	st	Z, r24
			/* 3th order moving average filter */
			static int filter[3];
			int new_val = (timer_value*30.5 + TCNT3)/2/58 + 5; //(2MHz/16bit = 30.5)
			distance_cm_avg = (timer_value*30.5 + TCNT3)/2/58 + 5;
			for(int i = 1; i < 3; i++) {
				distance_cm_avg += filter[i];
     daa:	86 0f       	add	r24, r22
     dac:	97 1f       	adc	r25, r23
				filter[i - 1] = filter[i];
			}
			distance_cm_avg /= 4;
     dae:	96 95       	lsr	r25
     db0:	87 95       	ror	r24
     db2:	96 95       	lsr	r25
     db4:	87 95       	ror	r24
     db6:	90 93 fc 02 	sts	0x02FC, r25
     dba:	80 93 fb 02 	sts	0x02FB, r24
		}
		else if (rising_edge == 1)	// Echo is finished
		{	
			/* 3th order moving average filter */
			static int filter[3];
			int new_val = (timer_value*30.5 + TCNT3)/2/58 + 5; //(2MHz/16bit = 30.5)
     dbe:	b6 01       	movw	r22, r12
     dc0:	80 e0       	ldi	r24, 0x00	; 0
     dc2:	90 e0       	ldi	r25, 0x00	; 0
     dc4:	5f d1       	rcall	.+702    	; 0x1084 <__floatunsisf>
     dc6:	9b 01       	movw	r18, r22
     dc8:	ac 01       	movw	r20, r24
     dca:	c5 01       	movw	r24, r10
     dcc:	b4 01       	movw	r22, r8
     dce:	59 d0       	rcall	.+178    	; 0xe82 <__addsf3>
     dd0:	20 e0       	ldi	r18, 0x00	; 0
     dd2:	30 e0       	ldi	r19, 0x00	; 0
     dd4:	40 e0       	ldi	r20, 0x00	; 0
     dd6:	5f e3       	ldi	r21, 0x3F	; 63
     dd8:	0b d2       	rcall	.+1046   	; 0x11f0 <__mulsf3>
     dda:	20 e0       	ldi	r18, 0x00	; 0
     ddc:	30 e0       	ldi	r19, 0x00	; 0
     dde:	48 e6       	ldi	r20, 0x68	; 104
     de0:	52 e4       	ldi	r21, 0x42	; 66
     de2:	b7 d0       	rcall	.+366    	; 0xf52 <__divsf3>
     de4:	20 e0       	ldi	r18, 0x00	; 0
     de6:	30 e0       	ldi	r19, 0x00	; 0
     de8:	40 ea       	ldi	r20, 0xA0	; 160
     dea:	50 e4       	ldi	r21, 0x40	; 64
     dec:	4a d0       	rcall	.+148    	; 0xe82 <__addsf3>
     dee:	19 d1       	rcall	.+562    	; 0x1022 <__fixsfsi>
     df0:	f8 01       	movw	r30, r16
     df2:	71 83       	std	Z+1, r23	; 0x01
     df4:	60 83       	st	Z, r22
			distance_cm_avg /= 4;
			filter[2] = new_val;
			 
			 
			//printf("timer_value: %d", timer_value);
			rising_edge = 0;
     df6:	10 92 f8 02 	sts	0x02F8, r1
			working = 0;
     dfa:	10 92 f5 02 	sts	0x02F5, r1
			/* Stop and reset timer */
			TCCR3B &= ~(1 << CS31);
     dfe:	e1 e9       	ldi	r30, 0x91	; 145
     e00:	f0 e0       	ldi	r31, 0x00	; 0
     e02:	80 81       	ld	r24, Z
     e04:	8d 7f       	andi	r24, 0xFD	; 253
     e06:	80 83       	st	Z, r24
			TCNT3 = 0;
     e08:	19 82       	std	Y+1, r1	; 0x01
     e0a:	18 82       	st	Y, r1
		}
	}
}
     e0c:	ff 91       	pop	r31
     e0e:	ef 91       	pop	r30
     e10:	df 91       	pop	r29
     e12:	cf 91       	pop	r28
     e14:	bf 91       	pop	r27
     e16:	af 91       	pop	r26
     e18:	9f 91       	pop	r25
     e1a:	8f 91       	pop	r24
     e1c:	7f 91       	pop	r23
     e1e:	6f 91       	pop	r22
     e20:	5f 91       	pop	r21
     e22:	4f 91       	pop	r20
     e24:	3f 91       	pop	r19
     e26:	2f 91       	pop	r18
     e28:	1f 91       	pop	r17
     e2a:	0f 91       	pop	r16
     e2c:	ff 90       	pop	r15
     e2e:	ef 90       	pop	r14
     e30:	df 90       	pop	r13
     e32:	cf 90       	pop	r12
     e34:	bf 90       	pop	r11
     e36:	af 90       	pop	r10
     e38:	9f 90       	pop	r9
     e3a:	8f 90       	pop	r8
     e3c:	0f 90       	pop	r0
     e3e:	0b be       	out	0x3b, r0	; 59
     e40:	0f 90       	pop	r0
     e42:	0f be       	out	0x3f, r0	; 63
     e44:	0f 90       	pop	r0
     e46:	1f 90       	pop	r1
     e48:	18 95       	reti

00000e4a <__vector_35>:

ISR (US_ECHO_TIMER_OVERFLOW)
{
     e4a:	1f 92       	push	r1
     e4c:	0f 92       	push	r0
     e4e:	0f b6       	in	r0, 0x3f	; 63
     e50:	0f 92       	push	r0
     e52:	11 24       	eor	r1, r1
     e54:	8f 93       	push	r24
     e56:	9f 93       	push	r25
	if(rising_edge == 1) //Check if the echo signal is active
     e58:	80 91 f8 02 	lds	r24, 0x02F8
     e5c:	81 30       	cpi	r24, 0x01	; 1
     e5e:	49 f4       	brne	.+18     	; 0xe72 <__vector_35+0x28>
	{
		timer_value++;
     e60:	80 91 f6 02 	lds	r24, 0x02F6
     e64:	90 91 f7 02 	lds	r25, 0x02F7
     e68:	01 96       	adiw	r24, 0x01	; 1
     e6a:	90 93 f7 02 	sts	0x02F7, r25
     e6e:	80 93 f6 02 	sts	0x02F6, r24
			working = 0;
			rising_edge = 0;
			error = 1;
		}
	}
     e72:	9f 91       	pop	r25
     e74:	8f 91       	pop	r24
     e76:	0f 90       	pop	r0
     e78:	0f be       	out	0x3f, r0	; 63
     e7a:	0f 90       	pop	r0
     e7c:	1f 90       	pop	r1
     e7e:	18 95       	reti

00000e80 <__subsf3>:
     e80:	50 58       	subi	r21, 0x80	; 128

00000e82 <__addsf3>:
     e82:	bb 27       	eor	r27, r27
     e84:	aa 27       	eor	r26, r26
     e86:	0e d0       	rcall	.+28     	; 0xea4 <__addsf3x>
     e88:	75 c1       	rjmp	.+746    	; 0x1174 <__fp_round>
     e8a:	66 d1       	rcall	.+716    	; 0x1158 <__fp_pscA>
     e8c:	30 f0       	brcs	.+12     	; 0xe9a <__addsf3+0x18>
     e8e:	6b d1       	rcall	.+726    	; 0x1166 <__fp_pscB>
     e90:	20 f0       	brcs	.+8      	; 0xe9a <__addsf3+0x18>
     e92:	31 f4       	brne	.+12     	; 0xea0 <__addsf3+0x1e>
     e94:	9f 3f       	cpi	r25, 0xFF	; 255
     e96:	11 f4       	brne	.+4      	; 0xe9c <__addsf3+0x1a>
     e98:	1e f4       	brtc	.+6      	; 0xea0 <__addsf3+0x1e>
     e9a:	5b c1       	rjmp	.+694    	; 0x1152 <__fp_nan>
     e9c:	0e f4       	brtc	.+2      	; 0xea0 <__addsf3+0x1e>
     e9e:	e0 95       	com	r30
     ea0:	e7 fb       	bst	r30, 7
     ea2:	51 c1       	rjmp	.+674    	; 0x1146 <__fp_inf>

00000ea4 <__addsf3x>:
     ea4:	e9 2f       	mov	r30, r25
     ea6:	77 d1       	rcall	.+750    	; 0x1196 <__fp_split3>
     ea8:	80 f3       	brcs	.-32     	; 0xe8a <__addsf3+0x8>
     eaa:	ba 17       	cp	r27, r26
     eac:	62 07       	cpc	r22, r18
     eae:	73 07       	cpc	r23, r19
     eb0:	84 07       	cpc	r24, r20
     eb2:	95 07       	cpc	r25, r21
     eb4:	18 f0       	brcs	.+6      	; 0xebc <__addsf3x+0x18>
     eb6:	71 f4       	brne	.+28     	; 0xed4 <__addsf3x+0x30>
     eb8:	9e f5       	brtc	.+102    	; 0xf20 <__addsf3x+0x7c>
     eba:	8f c1       	rjmp	.+798    	; 0x11da <__fp_zero>
     ebc:	0e f4       	brtc	.+2      	; 0xec0 <__addsf3x+0x1c>
     ebe:	e0 95       	com	r30
     ec0:	0b 2e       	mov	r0, r27
     ec2:	ba 2f       	mov	r27, r26
     ec4:	a0 2d       	mov	r26, r0
     ec6:	0b 01       	movw	r0, r22
     ec8:	b9 01       	movw	r22, r18
     eca:	90 01       	movw	r18, r0
     ecc:	0c 01       	movw	r0, r24
     ece:	ca 01       	movw	r24, r20
     ed0:	a0 01       	movw	r20, r0
     ed2:	11 24       	eor	r1, r1
     ed4:	ff 27       	eor	r31, r31
     ed6:	59 1b       	sub	r21, r25
     ed8:	99 f0       	breq	.+38     	; 0xf00 <__addsf3x+0x5c>
     eda:	59 3f       	cpi	r21, 0xF9	; 249
     edc:	50 f4       	brcc	.+20     	; 0xef2 <__addsf3x+0x4e>
     ede:	50 3e       	cpi	r21, 0xE0	; 224
     ee0:	68 f1       	brcs	.+90     	; 0xf3c <__addsf3x+0x98>
     ee2:	1a 16       	cp	r1, r26
     ee4:	f0 40       	sbci	r31, 0x00	; 0
     ee6:	a2 2f       	mov	r26, r18
     ee8:	23 2f       	mov	r18, r19
     eea:	34 2f       	mov	r19, r20
     eec:	44 27       	eor	r20, r20
     eee:	58 5f       	subi	r21, 0xF8	; 248
     ef0:	f3 cf       	rjmp	.-26     	; 0xed8 <__addsf3x+0x34>
     ef2:	46 95       	lsr	r20
     ef4:	37 95       	ror	r19
     ef6:	27 95       	ror	r18
     ef8:	a7 95       	ror	r26
     efa:	f0 40       	sbci	r31, 0x00	; 0
     efc:	53 95       	inc	r21
     efe:	c9 f7       	brne	.-14     	; 0xef2 <__addsf3x+0x4e>
     f00:	7e f4       	brtc	.+30     	; 0xf20 <__addsf3x+0x7c>
     f02:	1f 16       	cp	r1, r31
     f04:	ba 0b       	sbc	r27, r26
     f06:	62 0b       	sbc	r22, r18
     f08:	73 0b       	sbc	r23, r19
     f0a:	84 0b       	sbc	r24, r20
     f0c:	ba f0       	brmi	.+46     	; 0xf3c <__addsf3x+0x98>
     f0e:	91 50       	subi	r25, 0x01	; 1
     f10:	a1 f0       	breq	.+40     	; 0xf3a <__addsf3x+0x96>
     f12:	ff 0f       	add	r31, r31
     f14:	bb 1f       	adc	r27, r27
     f16:	66 1f       	adc	r22, r22
     f18:	77 1f       	adc	r23, r23
     f1a:	88 1f       	adc	r24, r24
     f1c:	c2 f7       	brpl	.-16     	; 0xf0e <__addsf3x+0x6a>
     f1e:	0e c0       	rjmp	.+28     	; 0xf3c <__addsf3x+0x98>
     f20:	ba 0f       	add	r27, r26
     f22:	62 1f       	adc	r22, r18
     f24:	73 1f       	adc	r23, r19
     f26:	84 1f       	adc	r24, r20
     f28:	48 f4       	brcc	.+18     	; 0xf3c <__addsf3x+0x98>
     f2a:	87 95       	ror	r24
     f2c:	77 95       	ror	r23
     f2e:	67 95       	ror	r22
     f30:	b7 95       	ror	r27
     f32:	f7 95       	ror	r31
     f34:	9e 3f       	cpi	r25, 0xFE	; 254
     f36:	08 f0       	brcs	.+2      	; 0xf3a <__addsf3x+0x96>
     f38:	b3 cf       	rjmp	.-154    	; 0xea0 <__addsf3+0x1e>
     f3a:	93 95       	inc	r25
     f3c:	88 0f       	add	r24, r24
     f3e:	08 f0       	brcs	.+2      	; 0xf42 <__addsf3x+0x9e>
     f40:	99 27       	eor	r25, r25
     f42:	ee 0f       	add	r30, r30
     f44:	97 95       	ror	r25
     f46:	87 95       	ror	r24
     f48:	08 95       	ret

00000f4a <__cmpsf2>:
     f4a:	d9 d0       	rcall	.+434    	; 0x10fe <__fp_cmp>
     f4c:	08 f4       	brcc	.+2      	; 0xf50 <__cmpsf2+0x6>
     f4e:	81 e0       	ldi	r24, 0x01	; 1
     f50:	08 95       	ret

00000f52 <__divsf3>:
     f52:	0c d0       	rcall	.+24     	; 0xf6c <__divsf3x>
     f54:	0f c1       	rjmp	.+542    	; 0x1174 <__fp_round>
     f56:	07 d1       	rcall	.+526    	; 0x1166 <__fp_pscB>
     f58:	40 f0       	brcs	.+16     	; 0xf6a <__divsf3+0x18>
     f5a:	fe d0       	rcall	.+508    	; 0x1158 <__fp_pscA>
     f5c:	30 f0       	brcs	.+12     	; 0xf6a <__divsf3+0x18>
     f5e:	21 f4       	brne	.+8      	; 0xf68 <__divsf3+0x16>
     f60:	5f 3f       	cpi	r21, 0xFF	; 255
     f62:	19 f0       	breq	.+6      	; 0xf6a <__divsf3+0x18>
     f64:	f0 c0       	rjmp	.+480    	; 0x1146 <__fp_inf>
     f66:	51 11       	cpse	r21, r1
     f68:	39 c1       	rjmp	.+626    	; 0x11dc <__fp_szero>
     f6a:	f3 c0       	rjmp	.+486    	; 0x1152 <__fp_nan>

00000f6c <__divsf3x>:
     f6c:	14 d1       	rcall	.+552    	; 0x1196 <__fp_split3>
     f6e:	98 f3       	brcs	.-26     	; 0xf56 <__divsf3+0x4>

00000f70 <__divsf3_pse>:
     f70:	99 23       	and	r25, r25
     f72:	c9 f3       	breq	.-14     	; 0xf66 <__divsf3+0x14>
     f74:	55 23       	and	r21, r21
     f76:	b1 f3       	breq	.-20     	; 0xf64 <__divsf3+0x12>
     f78:	95 1b       	sub	r25, r21
     f7a:	55 0b       	sbc	r21, r21
     f7c:	bb 27       	eor	r27, r27
     f7e:	aa 27       	eor	r26, r26
     f80:	62 17       	cp	r22, r18
     f82:	73 07       	cpc	r23, r19
     f84:	84 07       	cpc	r24, r20
     f86:	38 f0       	brcs	.+14     	; 0xf96 <__divsf3_pse+0x26>
     f88:	9f 5f       	subi	r25, 0xFF	; 255
     f8a:	5f 4f       	sbci	r21, 0xFF	; 255
     f8c:	22 0f       	add	r18, r18
     f8e:	33 1f       	adc	r19, r19
     f90:	44 1f       	adc	r20, r20
     f92:	aa 1f       	adc	r26, r26
     f94:	a9 f3       	breq	.-22     	; 0xf80 <__divsf3_pse+0x10>
     f96:	33 d0       	rcall	.+102    	; 0xffe <__divsf3_pse+0x8e>
     f98:	0e 2e       	mov	r0, r30
     f9a:	3a f0       	brmi	.+14     	; 0xfaa <__divsf3_pse+0x3a>
     f9c:	e0 e8       	ldi	r30, 0x80	; 128
     f9e:	30 d0       	rcall	.+96     	; 0x1000 <__divsf3_pse+0x90>
     fa0:	91 50       	subi	r25, 0x01	; 1
     fa2:	50 40       	sbci	r21, 0x00	; 0
     fa4:	e6 95       	lsr	r30
     fa6:	00 1c       	adc	r0, r0
     fa8:	ca f7       	brpl	.-14     	; 0xf9c <__divsf3_pse+0x2c>
     faa:	29 d0       	rcall	.+82     	; 0xffe <__divsf3_pse+0x8e>
     fac:	fe 2f       	mov	r31, r30
     fae:	27 d0       	rcall	.+78     	; 0xffe <__divsf3_pse+0x8e>
     fb0:	66 0f       	add	r22, r22
     fb2:	77 1f       	adc	r23, r23
     fb4:	88 1f       	adc	r24, r24
     fb6:	bb 1f       	adc	r27, r27
     fb8:	26 17       	cp	r18, r22
     fba:	37 07       	cpc	r19, r23
     fbc:	48 07       	cpc	r20, r24
     fbe:	ab 07       	cpc	r26, r27
     fc0:	b0 e8       	ldi	r27, 0x80	; 128
     fc2:	09 f0       	breq	.+2      	; 0xfc6 <__divsf3_pse+0x56>
     fc4:	bb 0b       	sbc	r27, r27
     fc6:	80 2d       	mov	r24, r0
     fc8:	bf 01       	movw	r22, r30
     fca:	ff 27       	eor	r31, r31
     fcc:	93 58       	subi	r25, 0x83	; 131
     fce:	5f 4f       	sbci	r21, 0xFF	; 255
     fd0:	2a f0       	brmi	.+10     	; 0xfdc <__divsf3_pse+0x6c>
     fd2:	9e 3f       	cpi	r25, 0xFE	; 254
     fd4:	51 05       	cpc	r21, r1
     fd6:	68 f0       	brcs	.+26     	; 0xff2 <__divsf3_pse+0x82>
     fd8:	b6 c0       	rjmp	.+364    	; 0x1146 <__fp_inf>
     fda:	00 c1       	rjmp	.+512    	; 0x11dc <__fp_szero>
     fdc:	5f 3f       	cpi	r21, 0xFF	; 255
     fde:	ec f3       	brlt	.-6      	; 0xfda <__divsf3_pse+0x6a>
     fe0:	98 3e       	cpi	r25, 0xE8	; 232
     fe2:	dc f3       	brlt	.-10     	; 0xfda <__divsf3_pse+0x6a>
     fe4:	86 95       	lsr	r24
     fe6:	77 95       	ror	r23
     fe8:	67 95       	ror	r22
     fea:	b7 95       	ror	r27
     fec:	f7 95       	ror	r31
     fee:	9f 5f       	subi	r25, 0xFF	; 255
     ff0:	c9 f7       	brne	.-14     	; 0xfe4 <__divsf3_pse+0x74>
     ff2:	88 0f       	add	r24, r24
     ff4:	91 1d       	adc	r25, r1
     ff6:	96 95       	lsr	r25
     ff8:	87 95       	ror	r24
     ffa:	97 f9       	bld	r25, 7
     ffc:	08 95       	ret
     ffe:	e1 e0       	ldi	r30, 0x01	; 1
    1000:	66 0f       	add	r22, r22
    1002:	77 1f       	adc	r23, r23
    1004:	88 1f       	adc	r24, r24
    1006:	bb 1f       	adc	r27, r27
    1008:	62 17       	cp	r22, r18
    100a:	73 07       	cpc	r23, r19
    100c:	84 07       	cpc	r24, r20
    100e:	ba 07       	cpc	r27, r26
    1010:	20 f0       	brcs	.+8      	; 0x101a <__divsf3_pse+0xaa>
    1012:	62 1b       	sub	r22, r18
    1014:	73 0b       	sbc	r23, r19
    1016:	84 0b       	sbc	r24, r20
    1018:	ba 0b       	sbc	r27, r26
    101a:	ee 1f       	adc	r30, r30
    101c:	88 f7       	brcc	.-30     	; 0x1000 <__divsf3_pse+0x90>
    101e:	e0 95       	com	r30
    1020:	08 95       	ret

00001022 <__fixsfsi>:
    1022:	04 d0       	rcall	.+8      	; 0x102c <__fixunssfsi>
    1024:	68 94       	set
    1026:	b1 11       	cpse	r27, r1
    1028:	d9 c0       	rjmp	.+434    	; 0x11dc <__fp_szero>
    102a:	08 95       	ret

0000102c <__fixunssfsi>:
    102c:	bc d0       	rcall	.+376    	; 0x11a6 <__fp_splitA>
    102e:	88 f0       	brcs	.+34     	; 0x1052 <__fixunssfsi+0x26>
    1030:	9f 57       	subi	r25, 0x7F	; 127
    1032:	90 f0       	brcs	.+36     	; 0x1058 <__fixunssfsi+0x2c>
    1034:	b9 2f       	mov	r27, r25
    1036:	99 27       	eor	r25, r25
    1038:	b7 51       	subi	r27, 0x17	; 23
    103a:	a0 f0       	brcs	.+40     	; 0x1064 <__fixunssfsi+0x38>
    103c:	d1 f0       	breq	.+52     	; 0x1072 <__fixunssfsi+0x46>
    103e:	66 0f       	add	r22, r22
    1040:	77 1f       	adc	r23, r23
    1042:	88 1f       	adc	r24, r24
    1044:	99 1f       	adc	r25, r25
    1046:	1a f0       	brmi	.+6      	; 0x104e <__fixunssfsi+0x22>
    1048:	ba 95       	dec	r27
    104a:	c9 f7       	brne	.-14     	; 0x103e <__fixunssfsi+0x12>
    104c:	12 c0       	rjmp	.+36     	; 0x1072 <__fixunssfsi+0x46>
    104e:	b1 30       	cpi	r27, 0x01	; 1
    1050:	81 f0       	breq	.+32     	; 0x1072 <__fixunssfsi+0x46>
    1052:	c3 d0       	rcall	.+390    	; 0x11da <__fp_zero>
    1054:	b1 e0       	ldi	r27, 0x01	; 1
    1056:	08 95       	ret
    1058:	c0 c0       	rjmp	.+384    	; 0x11da <__fp_zero>
    105a:	67 2f       	mov	r22, r23
    105c:	78 2f       	mov	r23, r24
    105e:	88 27       	eor	r24, r24
    1060:	b8 5f       	subi	r27, 0xF8	; 248
    1062:	39 f0       	breq	.+14     	; 0x1072 <__fixunssfsi+0x46>
    1064:	b9 3f       	cpi	r27, 0xF9	; 249
    1066:	cc f3       	brlt	.-14     	; 0x105a <__fixunssfsi+0x2e>
    1068:	86 95       	lsr	r24
    106a:	77 95       	ror	r23
    106c:	67 95       	ror	r22
    106e:	b3 95       	inc	r27
    1070:	d9 f7       	brne	.-10     	; 0x1068 <__fixunssfsi+0x3c>
    1072:	3e f4       	brtc	.+14     	; 0x1082 <__fixunssfsi+0x56>
    1074:	90 95       	com	r25
    1076:	80 95       	com	r24
    1078:	70 95       	com	r23
    107a:	61 95       	neg	r22
    107c:	7f 4f       	sbci	r23, 0xFF	; 255
    107e:	8f 4f       	sbci	r24, 0xFF	; 255
    1080:	9f 4f       	sbci	r25, 0xFF	; 255
    1082:	08 95       	ret

00001084 <__floatunsisf>:
    1084:	e8 94       	clt
    1086:	09 c0       	rjmp	.+18     	; 0x109a <__floatsisf+0x12>

00001088 <__floatsisf>:
    1088:	97 fb       	bst	r25, 7
    108a:	3e f4       	brtc	.+14     	; 0x109a <__floatsisf+0x12>
    108c:	90 95       	com	r25
    108e:	80 95       	com	r24
    1090:	70 95       	com	r23
    1092:	61 95       	neg	r22
    1094:	7f 4f       	sbci	r23, 0xFF	; 255
    1096:	8f 4f       	sbci	r24, 0xFF	; 255
    1098:	9f 4f       	sbci	r25, 0xFF	; 255
    109a:	99 23       	and	r25, r25
    109c:	a9 f0       	breq	.+42     	; 0x10c8 <__floatsisf+0x40>
    109e:	f9 2f       	mov	r31, r25
    10a0:	96 e9       	ldi	r25, 0x96	; 150
    10a2:	bb 27       	eor	r27, r27
    10a4:	93 95       	inc	r25
    10a6:	f6 95       	lsr	r31
    10a8:	87 95       	ror	r24
    10aa:	77 95       	ror	r23
    10ac:	67 95       	ror	r22
    10ae:	b7 95       	ror	r27
    10b0:	f1 11       	cpse	r31, r1
    10b2:	f8 cf       	rjmp	.-16     	; 0x10a4 <__floatsisf+0x1c>
    10b4:	fa f4       	brpl	.+62     	; 0x10f4 <__floatsisf+0x6c>
    10b6:	bb 0f       	add	r27, r27
    10b8:	11 f4       	brne	.+4      	; 0x10be <__floatsisf+0x36>
    10ba:	60 ff       	sbrs	r22, 0
    10bc:	1b c0       	rjmp	.+54     	; 0x10f4 <__floatsisf+0x6c>
    10be:	6f 5f       	subi	r22, 0xFF	; 255
    10c0:	7f 4f       	sbci	r23, 0xFF	; 255
    10c2:	8f 4f       	sbci	r24, 0xFF	; 255
    10c4:	9f 4f       	sbci	r25, 0xFF	; 255
    10c6:	16 c0       	rjmp	.+44     	; 0x10f4 <__floatsisf+0x6c>
    10c8:	88 23       	and	r24, r24
    10ca:	11 f0       	breq	.+4      	; 0x10d0 <__floatsisf+0x48>
    10cc:	96 e9       	ldi	r25, 0x96	; 150
    10ce:	11 c0       	rjmp	.+34     	; 0x10f2 <__floatsisf+0x6a>
    10d0:	77 23       	and	r23, r23
    10d2:	21 f0       	breq	.+8      	; 0x10dc <__floatsisf+0x54>
    10d4:	9e e8       	ldi	r25, 0x8E	; 142
    10d6:	87 2f       	mov	r24, r23
    10d8:	76 2f       	mov	r23, r22
    10da:	05 c0       	rjmp	.+10     	; 0x10e6 <__floatsisf+0x5e>
    10dc:	66 23       	and	r22, r22
    10de:	71 f0       	breq	.+28     	; 0x10fc <__floatsisf+0x74>
    10e0:	96 e8       	ldi	r25, 0x86	; 134
    10e2:	86 2f       	mov	r24, r22
    10e4:	70 e0       	ldi	r23, 0x00	; 0
    10e6:	60 e0       	ldi	r22, 0x00	; 0
    10e8:	2a f0       	brmi	.+10     	; 0x10f4 <__floatsisf+0x6c>
    10ea:	9a 95       	dec	r25
    10ec:	66 0f       	add	r22, r22
    10ee:	77 1f       	adc	r23, r23
    10f0:	88 1f       	adc	r24, r24
    10f2:	da f7       	brpl	.-10     	; 0x10ea <__floatsisf+0x62>
    10f4:	88 0f       	add	r24, r24
    10f6:	96 95       	lsr	r25
    10f8:	87 95       	ror	r24
    10fa:	97 f9       	bld	r25, 7
    10fc:	08 95       	ret

000010fe <__fp_cmp>:
    10fe:	99 0f       	add	r25, r25
    1100:	00 08       	sbc	r0, r0
    1102:	55 0f       	add	r21, r21
    1104:	aa 0b       	sbc	r26, r26
    1106:	e0 e8       	ldi	r30, 0x80	; 128
    1108:	fe ef       	ldi	r31, 0xFE	; 254
    110a:	16 16       	cp	r1, r22
    110c:	17 06       	cpc	r1, r23
    110e:	e8 07       	cpc	r30, r24
    1110:	f9 07       	cpc	r31, r25
    1112:	c0 f0       	brcs	.+48     	; 0x1144 <__fp_cmp+0x46>
    1114:	12 16       	cp	r1, r18
    1116:	13 06       	cpc	r1, r19
    1118:	e4 07       	cpc	r30, r20
    111a:	f5 07       	cpc	r31, r21
    111c:	98 f0       	brcs	.+38     	; 0x1144 <__fp_cmp+0x46>
    111e:	62 1b       	sub	r22, r18
    1120:	73 0b       	sbc	r23, r19
    1122:	84 0b       	sbc	r24, r20
    1124:	95 0b       	sbc	r25, r21
    1126:	39 f4       	brne	.+14     	; 0x1136 <__fp_cmp+0x38>
    1128:	0a 26       	eor	r0, r26
    112a:	61 f0       	breq	.+24     	; 0x1144 <__fp_cmp+0x46>
    112c:	23 2b       	or	r18, r19
    112e:	24 2b       	or	r18, r20
    1130:	25 2b       	or	r18, r21
    1132:	21 f4       	brne	.+8      	; 0x113c <__fp_cmp+0x3e>
    1134:	08 95       	ret
    1136:	0a 26       	eor	r0, r26
    1138:	09 f4       	brne	.+2      	; 0x113c <__fp_cmp+0x3e>
    113a:	a1 40       	sbci	r26, 0x01	; 1
    113c:	a6 95       	lsr	r26
    113e:	8f ef       	ldi	r24, 0xFF	; 255
    1140:	81 1d       	adc	r24, r1
    1142:	81 1d       	adc	r24, r1
    1144:	08 95       	ret

00001146 <__fp_inf>:
    1146:	97 f9       	bld	r25, 7
    1148:	9f 67       	ori	r25, 0x7F	; 127
    114a:	80 e8       	ldi	r24, 0x80	; 128
    114c:	70 e0       	ldi	r23, 0x00	; 0
    114e:	60 e0       	ldi	r22, 0x00	; 0
    1150:	08 95       	ret

00001152 <__fp_nan>:
    1152:	9f ef       	ldi	r25, 0xFF	; 255
    1154:	80 ec       	ldi	r24, 0xC0	; 192
    1156:	08 95       	ret

00001158 <__fp_pscA>:
    1158:	00 24       	eor	r0, r0
    115a:	0a 94       	dec	r0
    115c:	16 16       	cp	r1, r22
    115e:	17 06       	cpc	r1, r23
    1160:	18 06       	cpc	r1, r24
    1162:	09 06       	cpc	r0, r25
    1164:	08 95       	ret

00001166 <__fp_pscB>:
    1166:	00 24       	eor	r0, r0
    1168:	0a 94       	dec	r0
    116a:	12 16       	cp	r1, r18
    116c:	13 06       	cpc	r1, r19
    116e:	14 06       	cpc	r1, r20
    1170:	05 06       	cpc	r0, r21
    1172:	08 95       	ret

00001174 <__fp_round>:
    1174:	09 2e       	mov	r0, r25
    1176:	03 94       	inc	r0
    1178:	00 0c       	add	r0, r0
    117a:	11 f4       	brne	.+4      	; 0x1180 <__fp_round+0xc>
    117c:	88 23       	and	r24, r24
    117e:	52 f0       	brmi	.+20     	; 0x1194 <__fp_round+0x20>
    1180:	bb 0f       	add	r27, r27
    1182:	40 f4       	brcc	.+16     	; 0x1194 <__fp_round+0x20>
    1184:	bf 2b       	or	r27, r31
    1186:	11 f4       	brne	.+4      	; 0x118c <__fp_round+0x18>
    1188:	60 ff       	sbrs	r22, 0
    118a:	04 c0       	rjmp	.+8      	; 0x1194 <__fp_round+0x20>
    118c:	6f 5f       	subi	r22, 0xFF	; 255
    118e:	7f 4f       	sbci	r23, 0xFF	; 255
    1190:	8f 4f       	sbci	r24, 0xFF	; 255
    1192:	9f 4f       	sbci	r25, 0xFF	; 255
    1194:	08 95       	ret

00001196 <__fp_split3>:
    1196:	57 fd       	sbrc	r21, 7
    1198:	90 58       	subi	r25, 0x80	; 128
    119a:	44 0f       	add	r20, r20
    119c:	55 1f       	adc	r21, r21
    119e:	59 f0       	breq	.+22     	; 0x11b6 <__fp_splitA+0x10>
    11a0:	5f 3f       	cpi	r21, 0xFF	; 255
    11a2:	71 f0       	breq	.+28     	; 0x11c0 <__fp_splitA+0x1a>
    11a4:	47 95       	ror	r20

000011a6 <__fp_splitA>:
    11a6:	88 0f       	add	r24, r24
    11a8:	97 fb       	bst	r25, 7
    11aa:	99 1f       	adc	r25, r25
    11ac:	61 f0       	breq	.+24     	; 0x11c6 <__fp_splitA+0x20>
    11ae:	9f 3f       	cpi	r25, 0xFF	; 255
    11b0:	79 f0       	breq	.+30     	; 0x11d0 <__fp_splitA+0x2a>
    11b2:	87 95       	ror	r24
    11b4:	08 95       	ret
    11b6:	12 16       	cp	r1, r18
    11b8:	13 06       	cpc	r1, r19
    11ba:	14 06       	cpc	r1, r20
    11bc:	55 1f       	adc	r21, r21
    11be:	f2 cf       	rjmp	.-28     	; 0x11a4 <__fp_split3+0xe>
    11c0:	46 95       	lsr	r20
    11c2:	f1 df       	rcall	.-30     	; 0x11a6 <__fp_splitA>
    11c4:	08 c0       	rjmp	.+16     	; 0x11d6 <__fp_splitA+0x30>
    11c6:	16 16       	cp	r1, r22
    11c8:	17 06       	cpc	r1, r23
    11ca:	18 06       	cpc	r1, r24
    11cc:	99 1f       	adc	r25, r25
    11ce:	f1 cf       	rjmp	.-30     	; 0x11b2 <__fp_splitA+0xc>
    11d0:	86 95       	lsr	r24
    11d2:	71 05       	cpc	r23, r1
    11d4:	61 05       	cpc	r22, r1
    11d6:	08 94       	sec
    11d8:	08 95       	ret

000011da <__fp_zero>:
    11da:	e8 94       	clt

000011dc <__fp_szero>:
    11dc:	bb 27       	eor	r27, r27
    11de:	66 27       	eor	r22, r22
    11e0:	77 27       	eor	r23, r23
    11e2:	cb 01       	movw	r24, r22
    11e4:	97 f9       	bld	r25, 7
    11e6:	08 95       	ret

000011e8 <__gesf2>:
    11e8:	8a df       	rcall	.-236    	; 0x10fe <__fp_cmp>
    11ea:	08 f4       	brcc	.+2      	; 0x11ee <__gesf2+0x6>
    11ec:	8f ef       	ldi	r24, 0xFF	; 255
    11ee:	08 95       	ret

000011f0 <__mulsf3>:
    11f0:	0b d0       	rcall	.+22     	; 0x1208 <__mulsf3x>
    11f2:	c0 cf       	rjmp	.-128    	; 0x1174 <__fp_round>
    11f4:	b1 df       	rcall	.-158    	; 0x1158 <__fp_pscA>
    11f6:	28 f0       	brcs	.+10     	; 0x1202 <__mulsf3+0x12>
    11f8:	b6 df       	rcall	.-148    	; 0x1166 <__fp_pscB>
    11fa:	18 f0       	brcs	.+6      	; 0x1202 <__mulsf3+0x12>
    11fc:	95 23       	and	r25, r21
    11fe:	09 f0       	breq	.+2      	; 0x1202 <__mulsf3+0x12>
    1200:	a2 cf       	rjmp	.-188    	; 0x1146 <__fp_inf>
    1202:	a7 cf       	rjmp	.-178    	; 0x1152 <__fp_nan>
    1204:	11 24       	eor	r1, r1
    1206:	ea cf       	rjmp	.-44     	; 0x11dc <__fp_szero>

00001208 <__mulsf3x>:
    1208:	c6 df       	rcall	.-116    	; 0x1196 <__fp_split3>
    120a:	a0 f3       	brcs	.-24     	; 0x11f4 <__mulsf3+0x4>

0000120c <__mulsf3_pse>:
    120c:	95 9f       	mul	r25, r21
    120e:	d1 f3       	breq	.-12     	; 0x1204 <__mulsf3+0x14>
    1210:	95 0f       	add	r25, r21
    1212:	50 e0       	ldi	r21, 0x00	; 0
    1214:	55 1f       	adc	r21, r21
    1216:	62 9f       	mul	r22, r18
    1218:	f0 01       	movw	r30, r0
    121a:	72 9f       	mul	r23, r18
    121c:	bb 27       	eor	r27, r27
    121e:	f0 0d       	add	r31, r0
    1220:	b1 1d       	adc	r27, r1
    1222:	63 9f       	mul	r22, r19
    1224:	aa 27       	eor	r26, r26
    1226:	f0 0d       	add	r31, r0
    1228:	b1 1d       	adc	r27, r1
    122a:	aa 1f       	adc	r26, r26
    122c:	64 9f       	mul	r22, r20
    122e:	66 27       	eor	r22, r22
    1230:	b0 0d       	add	r27, r0
    1232:	a1 1d       	adc	r26, r1
    1234:	66 1f       	adc	r22, r22
    1236:	82 9f       	mul	r24, r18
    1238:	22 27       	eor	r18, r18
    123a:	b0 0d       	add	r27, r0
    123c:	a1 1d       	adc	r26, r1
    123e:	62 1f       	adc	r22, r18
    1240:	73 9f       	mul	r23, r19
    1242:	b0 0d       	add	r27, r0
    1244:	a1 1d       	adc	r26, r1
    1246:	62 1f       	adc	r22, r18
    1248:	83 9f       	mul	r24, r19
    124a:	a0 0d       	add	r26, r0
    124c:	61 1d       	adc	r22, r1
    124e:	22 1f       	adc	r18, r18
    1250:	74 9f       	mul	r23, r20
    1252:	33 27       	eor	r19, r19
    1254:	a0 0d       	add	r26, r0
    1256:	61 1d       	adc	r22, r1
    1258:	23 1f       	adc	r18, r19
    125a:	84 9f       	mul	r24, r20
    125c:	60 0d       	add	r22, r0
    125e:	21 1d       	adc	r18, r1
    1260:	82 2f       	mov	r24, r18
    1262:	76 2f       	mov	r23, r22
    1264:	6a 2f       	mov	r22, r26
    1266:	11 24       	eor	r1, r1
    1268:	9f 57       	subi	r25, 0x7F	; 127
    126a:	50 40       	sbci	r21, 0x00	; 0
    126c:	8a f0       	brmi	.+34     	; 0x1290 <__mulsf3_pse+0x84>
    126e:	e1 f0       	breq	.+56     	; 0x12a8 <__mulsf3_pse+0x9c>
    1270:	88 23       	and	r24, r24
    1272:	4a f0       	brmi	.+18     	; 0x1286 <__mulsf3_pse+0x7a>
    1274:	ee 0f       	add	r30, r30
    1276:	ff 1f       	adc	r31, r31
    1278:	bb 1f       	adc	r27, r27
    127a:	66 1f       	adc	r22, r22
    127c:	77 1f       	adc	r23, r23
    127e:	88 1f       	adc	r24, r24
    1280:	91 50       	subi	r25, 0x01	; 1
    1282:	50 40       	sbci	r21, 0x00	; 0
    1284:	a9 f7       	brne	.-22     	; 0x1270 <__mulsf3_pse+0x64>
    1286:	9e 3f       	cpi	r25, 0xFE	; 254
    1288:	51 05       	cpc	r21, r1
    128a:	70 f0       	brcs	.+28     	; 0x12a8 <__mulsf3_pse+0x9c>
    128c:	5c cf       	rjmp	.-328    	; 0x1146 <__fp_inf>
    128e:	a6 cf       	rjmp	.-180    	; 0x11dc <__fp_szero>
    1290:	5f 3f       	cpi	r21, 0xFF	; 255
    1292:	ec f3       	brlt	.-6      	; 0x128e <__mulsf3_pse+0x82>
    1294:	98 3e       	cpi	r25, 0xE8	; 232
    1296:	dc f3       	brlt	.-10     	; 0x128e <__mulsf3_pse+0x82>
    1298:	86 95       	lsr	r24
    129a:	77 95       	ror	r23
    129c:	67 95       	ror	r22
    129e:	b7 95       	ror	r27
    12a0:	f7 95       	ror	r31
    12a2:	e7 95       	ror	r30
    12a4:	9f 5f       	subi	r25, 0xFF	; 255
    12a6:	c1 f7       	brne	.-16     	; 0x1298 <__mulsf3_pse+0x8c>
    12a8:	fe 2b       	or	r31, r30
    12aa:	88 0f       	add	r24, r24
    12ac:	91 1d       	adc	r25, r1
    12ae:	96 95       	lsr	r25
    12b0:	87 95       	ror	r24
    12b2:	97 f9       	bld	r25, 7
    12b4:	08 95       	ret

000012b6 <__tablejump2__>:
    12b6:	ee 0f       	add	r30, r30
    12b8:	ff 1f       	adc	r31, r31

000012ba <__tablejump__>:
    12ba:	05 90       	lpm	r0, Z+
    12bc:	f4 91       	lpm	r31, Z
    12be:	e0 2d       	mov	r30, r0
    12c0:	19 94       	eijmp

000012c2 <fdevopen>:
    12c2:	0f 93       	push	r16
    12c4:	1f 93       	push	r17
    12c6:	cf 93       	push	r28
    12c8:	df 93       	push	r29
    12ca:	ec 01       	movw	r28, r24
    12cc:	8b 01       	movw	r16, r22
    12ce:	00 97       	sbiw	r24, 0x00	; 0
    12d0:	31 f4       	brne	.+12     	; 0x12de <fdevopen+0x1c>
    12d2:	61 15       	cp	r22, r1
    12d4:	71 05       	cpc	r23, r1
    12d6:	19 f4       	brne	.+6      	; 0x12de <fdevopen+0x1c>
    12d8:	80 e0       	ldi	r24, 0x00	; 0
    12da:	90 e0       	ldi	r25, 0x00	; 0
    12dc:	37 c0       	rjmp	.+110    	; 0x134c <fdevopen+0x8a>
    12de:	6e e0       	ldi	r22, 0x0E	; 14
    12e0:	70 e0       	ldi	r23, 0x00	; 0
    12e2:	81 e0       	ldi	r24, 0x01	; 1
    12e4:	90 e0       	ldi	r25, 0x00	; 0
    12e6:	63 d2       	rcall	.+1222   	; 0x17ae <calloc>
    12e8:	fc 01       	movw	r30, r24
    12ea:	00 97       	sbiw	r24, 0x00	; 0
    12ec:	a9 f3       	breq	.-22     	; 0x12d8 <fdevopen+0x16>
    12ee:	80 e8       	ldi	r24, 0x80	; 128
    12f0:	83 83       	std	Z+3, r24	; 0x03
    12f2:	01 15       	cp	r16, r1
    12f4:	11 05       	cpc	r17, r1
    12f6:	71 f0       	breq	.+28     	; 0x1314 <fdevopen+0x52>
    12f8:	13 87       	std	Z+11, r17	; 0x0b
    12fa:	02 87       	std	Z+10, r16	; 0x0a
    12fc:	81 e8       	ldi	r24, 0x81	; 129
    12fe:	83 83       	std	Z+3, r24	; 0x03
    1300:	80 91 fd 02 	lds	r24, 0x02FD
    1304:	90 91 fe 02 	lds	r25, 0x02FE
    1308:	89 2b       	or	r24, r25
    130a:	21 f4       	brne	.+8      	; 0x1314 <fdevopen+0x52>
    130c:	f0 93 fe 02 	sts	0x02FE, r31
    1310:	e0 93 fd 02 	sts	0x02FD, r30
    1314:	20 97       	sbiw	r28, 0x00	; 0
    1316:	c9 f0       	breq	.+50     	; 0x134a <fdevopen+0x88>
    1318:	d1 87       	std	Z+9, r29	; 0x09
    131a:	c0 87       	std	Z+8, r28	; 0x08
    131c:	83 81       	ldd	r24, Z+3	; 0x03
    131e:	82 60       	ori	r24, 0x02	; 2
    1320:	83 83       	std	Z+3, r24	; 0x03
    1322:	80 91 ff 02 	lds	r24, 0x02FF
    1326:	90 91 00 03 	lds	r25, 0x0300
    132a:	89 2b       	or	r24, r25
    132c:	71 f4       	brne	.+28     	; 0x134a <fdevopen+0x88>
    132e:	f0 93 00 03 	sts	0x0300, r31
    1332:	e0 93 ff 02 	sts	0x02FF, r30
    1336:	80 91 01 03 	lds	r24, 0x0301
    133a:	90 91 02 03 	lds	r25, 0x0302
    133e:	89 2b       	or	r24, r25
    1340:	21 f4       	brne	.+8      	; 0x134a <fdevopen+0x88>
    1342:	f0 93 02 03 	sts	0x0302, r31
    1346:	e0 93 01 03 	sts	0x0301, r30
    134a:	cf 01       	movw	r24, r30
    134c:	df 91       	pop	r29
    134e:	cf 91       	pop	r28
    1350:	1f 91       	pop	r17
    1352:	0f 91       	pop	r16
    1354:	08 95       	ret

00001356 <printf>:
    1356:	cf 93       	push	r28
    1358:	df 93       	push	r29
    135a:	cd b7       	in	r28, 0x3d	; 61
    135c:	de b7       	in	r29, 0x3e	; 62
    135e:	fe 01       	movw	r30, r28
    1360:	36 96       	adiw	r30, 0x06	; 6
    1362:	61 91       	ld	r22, Z+
    1364:	71 91       	ld	r23, Z+
    1366:	af 01       	movw	r20, r30
    1368:	80 91 ff 02 	lds	r24, 0x02FF
    136c:	90 91 00 03 	lds	r25, 0x0300
    1370:	30 d0       	rcall	.+96     	; 0x13d2 <vfprintf>
    1372:	df 91       	pop	r29
    1374:	cf 91       	pop	r28
    1376:	08 95       	ret

00001378 <puts>:
    1378:	0f 93       	push	r16
    137a:	1f 93       	push	r17
    137c:	cf 93       	push	r28
    137e:	df 93       	push	r29
    1380:	e0 91 ff 02 	lds	r30, 0x02FF
    1384:	f0 91 00 03 	lds	r31, 0x0300
    1388:	23 81       	ldd	r18, Z+3	; 0x03
    138a:	21 ff       	sbrs	r18, 1
    138c:	1b c0       	rjmp	.+54     	; 0x13c4 <puts+0x4c>
    138e:	ec 01       	movw	r28, r24
    1390:	00 e0       	ldi	r16, 0x00	; 0
    1392:	10 e0       	ldi	r17, 0x00	; 0
    1394:	89 91       	ld	r24, Y+
    1396:	60 91 ff 02 	lds	r22, 0x02FF
    139a:	70 91 00 03 	lds	r23, 0x0300
    139e:	db 01       	movw	r26, r22
    13a0:	18 96       	adiw	r26, 0x08	; 8
    13a2:	ed 91       	ld	r30, X+
    13a4:	fc 91       	ld	r31, X
    13a6:	19 97       	sbiw	r26, 0x09	; 9
    13a8:	88 23       	and	r24, r24
    13aa:	31 f0       	breq	.+12     	; 0x13b8 <puts+0x40>
    13ac:	19 95       	eicall
    13ae:	89 2b       	or	r24, r25
    13b0:	89 f3       	breq	.-30     	; 0x1394 <puts+0x1c>
    13b2:	0f ef       	ldi	r16, 0xFF	; 255
    13b4:	1f ef       	ldi	r17, 0xFF	; 255
    13b6:	ee cf       	rjmp	.-36     	; 0x1394 <puts+0x1c>
    13b8:	8a e0       	ldi	r24, 0x0A	; 10
    13ba:	19 95       	eicall
    13bc:	89 2b       	or	r24, r25
    13be:	11 f4       	brne	.+4      	; 0x13c4 <puts+0x4c>
    13c0:	c8 01       	movw	r24, r16
    13c2:	02 c0       	rjmp	.+4      	; 0x13c8 <puts+0x50>
    13c4:	8f ef       	ldi	r24, 0xFF	; 255
    13c6:	9f ef       	ldi	r25, 0xFF	; 255
    13c8:	df 91       	pop	r29
    13ca:	cf 91       	pop	r28
    13cc:	1f 91       	pop	r17
    13ce:	0f 91       	pop	r16
    13d0:	08 95       	ret

000013d2 <vfprintf>:
    13d2:	2f 92       	push	r2
    13d4:	3f 92       	push	r3
    13d6:	4f 92       	push	r4
    13d8:	5f 92       	push	r5
    13da:	6f 92       	push	r6
    13dc:	7f 92       	push	r7
    13de:	8f 92       	push	r8
    13e0:	9f 92       	push	r9
    13e2:	af 92       	push	r10
    13e4:	bf 92       	push	r11
    13e6:	cf 92       	push	r12
    13e8:	df 92       	push	r13
    13ea:	ef 92       	push	r14
    13ec:	ff 92       	push	r15
    13ee:	0f 93       	push	r16
    13f0:	1f 93       	push	r17
    13f2:	cf 93       	push	r28
    13f4:	df 93       	push	r29
    13f6:	cd b7       	in	r28, 0x3d	; 61
    13f8:	de b7       	in	r29, 0x3e	; 62
    13fa:	2c 97       	sbiw	r28, 0x0c	; 12
    13fc:	0f b6       	in	r0, 0x3f	; 63
    13fe:	f8 94       	cli
    1400:	de bf       	out	0x3e, r29	; 62
    1402:	0f be       	out	0x3f, r0	; 63
    1404:	cd bf       	out	0x3d, r28	; 61
    1406:	7c 01       	movw	r14, r24
    1408:	6b 01       	movw	r12, r22
    140a:	8a 01       	movw	r16, r20
    140c:	fc 01       	movw	r30, r24
    140e:	17 82       	std	Z+7, r1	; 0x07
    1410:	16 82       	std	Z+6, r1	; 0x06
    1412:	83 81       	ldd	r24, Z+3	; 0x03
    1414:	81 ff       	sbrs	r24, 1
    1416:	b0 c1       	rjmp	.+864    	; 0x1778 <vfprintf+0x3a6>
    1418:	ce 01       	movw	r24, r28
    141a:	01 96       	adiw	r24, 0x01	; 1
    141c:	4c 01       	movw	r8, r24
    141e:	f7 01       	movw	r30, r14
    1420:	93 81       	ldd	r25, Z+3	; 0x03
    1422:	f6 01       	movw	r30, r12
    1424:	93 fd       	sbrc	r25, 3
    1426:	85 91       	lpm	r24, Z+
    1428:	93 ff       	sbrs	r25, 3
    142a:	81 91       	ld	r24, Z+
    142c:	6f 01       	movw	r12, r30
    142e:	88 23       	and	r24, r24
    1430:	09 f4       	brne	.+2      	; 0x1434 <vfprintf+0x62>
    1432:	9e c1       	rjmp	.+828    	; 0x1770 <vfprintf+0x39e>
    1434:	85 32       	cpi	r24, 0x25	; 37
    1436:	39 f4       	brne	.+14     	; 0x1446 <vfprintf+0x74>
    1438:	93 fd       	sbrc	r25, 3
    143a:	85 91       	lpm	r24, Z+
    143c:	93 ff       	sbrs	r25, 3
    143e:	81 91       	ld	r24, Z+
    1440:	6f 01       	movw	r12, r30
    1442:	85 32       	cpi	r24, 0x25	; 37
    1444:	21 f4       	brne	.+8      	; 0x144e <vfprintf+0x7c>
    1446:	b7 01       	movw	r22, r14
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	0f d3       	rcall	.+1566   	; 0x1a6a <fputc>
    144c:	e8 cf       	rjmp	.-48     	; 0x141e <vfprintf+0x4c>
    144e:	51 2c       	mov	r5, r1
    1450:	31 2c       	mov	r3, r1
    1452:	20 e0       	ldi	r18, 0x00	; 0
    1454:	20 32       	cpi	r18, 0x20	; 32
    1456:	a0 f4       	brcc	.+40     	; 0x1480 <vfprintf+0xae>
    1458:	8b 32       	cpi	r24, 0x2B	; 43
    145a:	69 f0       	breq	.+26     	; 0x1476 <vfprintf+0xa4>
    145c:	30 f4       	brcc	.+12     	; 0x146a <vfprintf+0x98>
    145e:	80 32       	cpi	r24, 0x20	; 32
    1460:	59 f0       	breq	.+22     	; 0x1478 <vfprintf+0xa6>
    1462:	83 32       	cpi	r24, 0x23	; 35
    1464:	69 f4       	brne	.+26     	; 0x1480 <vfprintf+0xae>
    1466:	20 61       	ori	r18, 0x10	; 16
    1468:	2c c0       	rjmp	.+88     	; 0x14c2 <vfprintf+0xf0>
    146a:	8d 32       	cpi	r24, 0x2D	; 45
    146c:	39 f0       	breq	.+14     	; 0x147c <vfprintf+0xaa>
    146e:	80 33       	cpi	r24, 0x30	; 48
    1470:	39 f4       	brne	.+14     	; 0x1480 <vfprintf+0xae>
    1472:	21 60       	ori	r18, 0x01	; 1
    1474:	26 c0       	rjmp	.+76     	; 0x14c2 <vfprintf+0xf0>
    1476:	22 60       	ori	r18, 0x02	; 2
    1478:	24 60       	ori	r18, 0x04	; 4
    147a:	23 c0       	rjmp	.+70     	; 0x14c2 <vfprintf+0xf0>
    147c:	28 60       	ori	r18, 0x08	; 8
    147e:	21 c0       	rjmp	.+66     	; 0x14c2 <vfprintf+0xf0>
    1480:	27 fd       	sbrc	r18, 7
    1482:	27 c0       	rjmp	.+78     	; 0x14d2 <vfprintf+0x100>
    1484:	30 ed       	ldi	r19, 0xD0	; 208
    1486:	38 0f       	add	r19, r24
    1488:	3a 30       	cpi	r19, 0x0A	; 10
    148a:	78 f4       	brcc	.+30     	; 0x14aa <vfprintf+0xd8>
    148c:	26 ff       	sbrs	r18, 6
    148e:	06 c0       	rjmp	.+12     	; 0x149c <vfprintf+0xca>
    1490:	fa e0       	ldi	r31, 0x0A	; 10
    1492:	5f 9e       	mul	r5, r31
    1494:	30 0d       	add	r19, r0
    1496:	11 24       	eor	r1, r1
    1498:	53 2e       	mov	r5, r19
    149a:	13 c0       	rjmp	.+38     	; 0x14c2 <vfprintf+0xf0>
    149c:	8a e0       	ldi	r24, 0x0A	; 10
    149e:	38 9e       	mul	r3, r24
    14a0:	30 0d       	add	r19, r0
    14a2:	11 24       	eor	r1, r1
    14a4:	33 2e       	mov	r3, r19
    14a6:	20 62       	ori	r18, 0x20	; 32
    14a8:	0c c0       	rjmp	.+24     	; 0x14c2 <vfprintf+0xf0>
    14aa:	8e 32       	cpi	r24, 0x2E	; 46
    14ac:	21 f4       	brne	.+8      	; 0x14b6 <vfprintf+0xe4>
    14ae:	26 fd       	sbrc	r18, 6
    14b0:	5f c1       	rjmp	.+702    	; 0x1770 <vfprintf+0x39e>
    14b2:	20 64       	ori	r18, 0x40	; 64
    14b4:	06 c0       	rjmp	.+12     	; 0x14c2 <vfprintf+0xf0>
    14b6:	8c 36       	cpi	r24, 0x6C	; 108
    14b8:	11 f4       	brne	.+4      	; 0x14be <vfprintf+0xec>
    14ba:	20 68       	ori	r18, 0x80	; 128
    14bc:	02 c0       	rjmp	.+4      	; 0x14c2 <vfprintf+0xf0>
    14be:	88 36       	cpi	r24, 0x68	; 104
    14c0:	41 f4       	brne	.+16     	; 0x14d2 <vfprintf+0x100>
    14c2:	f6 01       	movw	r30, r12
    14c4:	93 fd       	sbrc	r25, 3
    14c6:	85 91       	lpm	r24, Z+
    14c8:	93 ff       	sbrs	r25, 3
    14ca:	81 91       	ld	r24, Z+
    14cc:	6f 01       	movw	r12, r30
    14ce:	81 11       	cpse	r24, r1
    14d0:	c1 cf       	rjmp	.-126    	; 0x1454 <vfprintf+0x82>
    14d2:	98 2f       	mov	r25, r24
    14d4:	9f 7d       	andi	r25, 0xDF	; 223
    14d6:	95 54       	subi	r25, 0x45	; 69
    14d8:	93 30       	cpi	r25, 0x03	; 3
    14da:	28 f4       	brcc	.+10     	; 0x14e6 <vfprintf+0x114>
    14dc:	0c 5f       	subi	r16, 0xFC	; 252
    14de:	1f 4f       	sbci	r17, 0xFF	; 255
    14e0:	ff e3       	ldi	r31, 0x3F	; 63
    14e2:	f9 83       	std	Y+1, r31	; 0x01
    14e4:	0d c0       	rjmp	.+26     	; 0x1500 <vfprintf+0x12e>
    14e6:	83 36       	cpi	r24, 0x63	; 99
    14e8:	31 f0       	breq	.+12     	; 0x14f6 <vfprintf+0x124>
    14ea:	83 37       	cpi	r24, 0x73	; 115
    14ec:	71 f0       	breq	.+28     	; 0x150a <vfprintf+0x138>
    14ee:	83 35       	cpi	r24, 0x53	; 83
    14f0:	09 f0       	breq	.+2      	; 0x14f4 <vfprintf+0x122>
    14f2:	57 c0       	rjmp	.+174    	; 0x15a2 <vfprintf+0x1d0>
    14f4:	21 c0       	rjmp	.+66     	; 0x1538 <vfprintf+0x166>
    14f6:	f8 01       	movw	r30, r16
    14f8:	80 81       	ld	r24, Z
    14fa:	89 83       	std	Y+1, r24	; 0x01
    14fc:	0e 5f       	subi	r16, 0xFE	; 254
    14fe:	1f 4f       	sbci	r17, 0xFF	; 255
    1500:	44 24       	eor	r4, r4
    1502:	43 94       	inc	r4
    1504:	51 2c       	mov	r5, r1
    1506:	54 01       	movw	r10, r8
    1508:	14 c0       	rjmp	.+40     	; 0x1532 <vfprintf+0x160>
    150a:	38 01       	movw	r6, r16
    150c:	f2 e0       	ldi	r31, 0x02	; 2
    150e:	6f 0e       	add	r6, r31
    1510:	71 1c       	adc	r7, r1
    1512:	f8 01       	movw	r30, r16
    1514:	a0 80       	ld	r10, Z
    1516:	b1 80       	ldd	r11, Z+1	; 0x01
    1518:	26 ff       	sbrs	r18, 6
    151a:	03 c0       	rjmp	.+6      	; 0x1522 <vfprintf+0x150>
    151c:	65 2d       	mov	r22, r5
    151e:	70 e0       	ldi	r23, 0x00	; 0
    1520:	02 c0       	rjmp	.+4      	; 0x1526 <vfprintf+0x154>
    1522:	6f ef       	ldi	r22, 0xFF	; 255
    1524:	7f ef       	ldi	r23, 0xFF	; 255
    1526:	c5 01       	movw	r24, r10
    1528:	2c 87       	std	Y+12, r18	; 0x0c
    152a:	94 d2       	rcall	.+1320   	; 0x1a54 <strnlen>
    152c:	2c 01       	movw	r4, r24
    152e:	83 01       	movw	r16, r6
    1530:	2c 85       	ldd	r18, Y+12	; 0x0c
    1532:	2f 77       	andi	r18, 0x7F	; 127
    1534:	22 2e       	mov	r2, r18
    1536:	16 c0       	rjmp	.+44     	; 0x1564 <vfprintf+0x192>
    1538:	38 01       	movw	r6, r16
    153a:	f2 e0       	ldi	r31, 0x02	; 2
    153c:	6f 0e       	add	r6, r31
    153e:	71 1c       	adc	r7, r1
    1540:	f8 01       	movw	r30, r16
    1542:	a0 80       	ld	r10, Z
    1544:	b1 80       	ldd	r11, Z+1	; 0x01
    1546:	26 ff       	sbrs	r18, 6
    1548:	03 c0       	rjmp	.+6      	; 0x1550 <vfprintf+0x17e>
    154a:	65 2d       	mov	r22, r5
    154c:	70 e0       	ldi	r23, 0x00	; 0
    154e:	02 c0       	rjmp	.+4      	; 0x1554 <vfprintf+0x182>
    1550:	6f ef       	ldi	r22, 0xFF	; 255
    1552:	7f ef       	ldi	r23, 0xFF	; 255
    1554:	c5 01       	movw	r24, r10
    1556:	2c 87       	std	Y+12, r18	; 0x0c
    1558:	6b d2       	rcall	.+1238   	; 0x1a30 <strnlen_P>
    155a:	2c 01       	movw	r4, r24
    155c:	2c 85       	ldd	r18, Y+12	; 0x0c
    155e:	20 68       	ori	r18, 0x80	; 128
    1560:	22 2e       	mov	r2, r18
    1562:	83 01       	movw	r16, r6
    1564:	23 fc       	sbrc	r2, 3
    1566:	19 c0       	rjmp	.+50     	; 0x159a <vfprintf+0x1c8>
    1568:	83 2d       	mov	r24, r3
    156a:	90 e0       	ldi	r25, 0x00	; 0
    156c:	48 16       	cp	r4, r24
    156e:	59 06       	cpc	r5, r25
    1570:	a0 f4       	brcc	.+40     	; 0x159a <vfprintf+0x1c8>
    1572:	b7 01       	movw	r22, r14
    1574:	80 e2       	ldi	r24, 0x20	; 32
    1576:	90 e0       	ldi	r25, 0x00	; 0
    1578:	78 d2       	rcall	.+1264   	; 0x1a6a <fputc>
    157a:	3a 94       	dec	r3
    157c:	f5 cf       	rjmp	.-22     	; 0x1568 <vfprintf+0x196>
    157e:	f5 01       	movw	r30, r10
    1580:	27 fc       	sbrc	r2, 7
    1582:	85 91       	lpm	r24, Z+
    1584:	27 fe       	sbrs	r2, 7
    1586:	81 91       	ld	r24, Z+
    1588:	5f 01       	movw	r10, r30
    158a:	b7 01       	movw	r22, r14
    158c:	90 e0       	ldi	r25, 0x00	; 0
    158e:	6d d2       	rcall	.+1242   	; 0x1a6a <fputc>
    1590:	31 10       	cpse	r3, r1
    1592:	3a 94       	dec	r3
    1594:	f1 e0       	ldi	r31, 0x01	; 1
    1596:	4f 1a       	sub	r4, r31
    1598:	51 08       	sbc	r5, r1
    159a:	41 14       	cp	r4, r1
    159c:	51 04       	cpc	r5, r1
    159e:	79 f7       	brne	.-34     	; 0x157e <vfprintf+0x1ac>
    15a0:	de c0       	rjmp	.+444    	; 0x175e <vfprintf+0x38c>
    15a2:	84 36       	cpi	r24, 0x64	; 100
    15a4:	11 f0       	breq	.+4      	; 0x15aa <vfprintf+0x1d8>
    15a6:	89 36       	cpi	r24, 0x69	; 105
    15a8:	31 f5       	brne	.+76     	; 0x15f6 <vfprintf+0x224>
    15aa:	f8 01       	movw	r30, r16
    15ac:	27 ff       	sbrs	r18, 7
    15ae:	07 c0       	rjmp	.+14     	; 0x15be <vfprintf+0x1ec>
    15b0:	60 81       	ld	r22, Z
    15b2:	71 81       	ldd	r23, Z+1	; 0x01
    15b4:	82 81       	ldd	r24, Z+2	; 0x02
    15b6:	93 81       	ldd	r25, Z+3	; 0x03
    15b8:	0c 5f       	subi	r16, 0xFC	; 252
    15ba:	1f 4f       	sbci	r17, 0xFF	; 255
    15bc:	08 c0       	rjmp	.+16     	; 0x15ce <vfprintf+0x1fc>
    15be:	60 81       	ld	r22, Z
    15c0:	71 81       	ldd	r23, Z+1	; 0x01
    15c2:	88 27       	eor	r24, r24
    15c4:	77 fd       	sbrc	r23, 7
    15c6:	80 95       	com	r24
    15c8:	98 2f       	mov	r25, r24
    15ca:	0e 5f       	subi	r16, 0xFE	; 254
    15cc:	1f 4f       	sbci	r17, 0xFF	; 255
    15ce:	2f 76       	andi	r18, 0x6F	; 111
    15d0:	b2 2e       	mov	r11, r18
    15d2:	97 ff       	sbrs	r25, 7
    15d4:	09 c0       	rjmp	.+18     	; 0x15e8 <vfprintf+0x216>
    15d6:	90 95       	com	r25
    15d8:	80 95       	com	r24
    15da:	70 95       	com	r23
    15dc:	61 95       	neg	r22
    15de:	7f 4f       	sbci	r23, 0xFF	; 255
    15e0:	8f 4f       	sbci	r24, 0xFF	; 255
    15e2:	9f 4f       	sbci	r25, 0xFF	; 255
    15e4:	20 68       	ori	r18, 0x80	; 128
    15e6:	b2 2e       	mov	r11, r18
    15e8:	2a e0       	ldi	r18, 0x0A	; 10
    15ea:	30 e0       	ldi	r19, 0x00	; 0
    15ec:	a4 01       	movw	r20, r8
    15ee:	6f d2       	rcall	.+1246   	; 0x1ace <__ultoa_invert>
    15f0:	a8 2e       	mov	r10, r24
    15f2:	a8 18       	sub	r10, r8
    15f4:	43 c0       	rjmp	.+134    	; 0x167c <vfprintf+0x2aa>
    15f6:	85 37       	cpi	r24, 0x75	; 117
    15f8:	29 f4       	brne	.+10     	; 0x1604 <vfprintf+0x232>
    15fa:	2f 7e       	andi	r18, 0xEF	; 239
    15fc:	b2 2e       	mov	r11, r18
    15fe:	2a e0       	ldi	r18, 0x0A	; 10
    1600:	30 e0       	ldi	r19, 0x00	; 0
    1602:	25 c0       	rjmp	.+74     	; 0x164e <vfprintf+0x27c>
    1604:	f2 2f       	mov	r31, r18
    1606:	f9 7f       	andi	r31, 0xF9	; 249
    1608:	bf 2e       	mov	r11, r31
    160a:	8f 36       	cpi	r24, 0x6F	; 111
    160c:	c1 f0       	breq	.+48     	; 0x163e <vfprintf+0x26c>
    160e:	18 f4       	brcc	.+6      	; 0x1616 <vfprintf+0x244>
    1610:	88 35       	cpi	r24, 0x58	; 88
    1612:	79 f0       	breq	.+30     	; 0x1632 <vfprintf+0x260>
    1614:	ad c0       	rjmp	.+346    	; 0x1770 <vfprintf+0x39e>
    1616:	80 37       	cpi	r24, 0x70	; 112
    1618:	19 f0       	breq	.+6      	; 0x1620 <vfprintf+0x24e>
    161a:	88 37       	cpi	r24, 0x78	; 120
    161c:	21 f0       	breq	.+8      	; 0x1626 <vfprintf+0x254>
    161e:	a8 c0       	rjmp	.+336    	; 0x1770 <vfprintf+0x39e>
    1620:	2f 2f       	mov	r18, r31
    1622:	20 61       	ori	r18, 0x10	; 16
    1624:	b2 2e       	mov	r11, r18
    1626:	b4 fe       	sbrs	r11, 4
    1628:	0d c0       	rjmp	.+26     	; 0x1644 <vfprintf+0x272>
    162a:	8b 2d       	mov	r24, r11
    162c:	84 60       	ori	r24, 0x04	; 4
    162e:	b8 2e       	mov	r11, r24
    1630:	09 c0       	rjmp	.+18     	; 0x1644 <vfprintf+0x272>
    1632:	24 ff       	sbrs	r18, 4
    1634:	0a c0       	rjmp	.+20     	; 0x164a <vfprintf+0x278>
    1636:	9f 2f       	mov	r25, r31
    1638:	96 60       	ori	r25, 0x06	; 6
    163a:	b9 2e       	mov	r11, r25
    163c:	06 c0       	rjmp	.+12     	; 0x164a <vfprintf+0x278>
    163e:	28 e0       	ldi	r18, 0x08	; 8
    1640:	30 e0       	ldi	r19, 0x00	; 0
    1642:	05 c0       	rjmp	.+10     	; 0x164e <vfprintf+0x27c>
    1644:	20 e1       	ldi	r18, 0x10	; 16
    1646:	30 e0       	ldi	r19, 0x00	; 0
    1648:	02 c0       	rjmp	.+4      	; 0x164e <vfprintf+0x27c>
    164a:	20 e1       	ldi	r18, 0x10	; 16
    164c:	32 e0       	ldi	r19, 0x02	; 2
    164e:	f8 01       	movw	r30, r16
    1650:	b7 fe       	sbrs	r11, 7
    1652:	07 c0       	rjmp	.+14     	; 0x1662 <vfprintf+0x290>
    1654:	60 81       	ld	r22, Z
    1656:	71 81       	ldd	r23, Z+1	; 0x01
    1658:	82 81       	ldd	r24, Z+2	; 0x02
    165a:	93 81       	ldd	r25, Z+3	; 0x03
    165c:	0c 5f       	subi	r16, 0xFC	; 252
    165e:	1f 4f       	sbci	r17, 0xFF	; 255
    1660:	06 c0       	rjmp	.+12     	; 0x166e <vfprintf+0x29c>
    1662:	60 81       	ld	r22, Z
    1664:	71 81       	ldd	r23, Z+1	; 0x01
    1666:	80 e0       	ldi	r24, 0x00	; 0
    1668:	90 e0       	ldi	r25, 0x00	; 0
    166a:	0e 5f       	subi	r16, 0xFE	; 254
    166c:	1f 4f       	sbci	r17, 0xFF	; 255
    166e:	a4 01       	movw	r20, r8
    1670:	2e d2       	rcall	.+1116   	; 0x1ace <__ultoa_invert>
    1672:	a8 2e       	mov	r10, r24
    1674:	a8 18       	sub	r10, r8
    1676:	fb 2d       	mov	r31, r11
    1678:	ff 77       	andi	r31, 0x7F	; 127
    167a:	bf 2e       	mov	r11, r31
    167c:	b6 fe       	sbrs	r11, 6
    167e:	0b c0       	rjmp	.+22     	; 0x1696 <vfprintf+0x2c4>
    1680:	2b 2d       	mov	r18, r11
    1682:	2e 7f       	andi	r18, 0xFE	; 254
    1684:	a5 14       	cp	r10, r5
    1686:	50 f4       	brcc	.+20     	; 0x169c <vfprintf+0x2ca>
    1688:	b4 fe       	sbrs	r11, 4
    168a:	0a c0       	rjmp	.+20     	; 0x16a0 <vfprintf+0x2ce>
    168c:	b2 fc       	sbrc	r11, 2
    168e:	08 c0       	rjmp	.+16     	; 0x16a0 <vfprintf+0x2ce>
    1690:	2b 2d       	mov	r18, r11
    1692:	2e 7e       	andi	r18, 0xEE	; 238
    1694:	05 c0       	rjmp	.+10     	; 0x16a0 <vfprintf+0x2ce>
    1696:	7a 2c       	mov	r7, r10
    1698:	2b 2d       	mov	r18, r11
    169a:	03 c0       	rjmp	.+6      	; 0x16a2 <vfprintf+0x2d0>
    169c:	7a 2c       	mov	r7, r10
    169e:	01 c0       	rjmp	.+2      	; 0x16a2 <vfprintf+0x2d0>
    16a0:	75 2c       	mov	r7, r5
    16a2:	24 ff       	sbrs	r18, 4
    16a4:	0d c0       	rjmp	.+26     	; 0x16c0 <vfprintf+0x2ee>
    16a6:	fe 01       	movw	r30, r28
    16a8:	ea 0d       	add	r30, r10
    16aa:	f1 1d       	adc	r31, r1
    16ac:	80 81       	ld	r24, Z
    16ae:	80 33       	cpi	r24, 0x30	; 48
    16b0:	11 f4       	brne	.+4      	; 0x16b6 <vfprintf+0x2e4>
    16b2:	29 7e       	andi	r18, 0xE9	; 233
    16b4:	09 c0       	rjmp	.+18     	; 0x16c8 <vfprintf+0x2f6>
    16b6:	22 ff       	sbrs	r18, 2
    16b8:	06 c0       	rjmp	.+12     	; 0x16c6 <vfprintf+0x2f4>
    16ba:	73 94       	inc	r7
    16bc:	73 94       	inc	r7
    16be:	04 c0       	rjmp	.+8      	; 0x16c8 <vfprintf+0x2f6>
    16c0:	82 2f       	mov	r24, r18
    16c2:	86 78       	andi	r24, 0x86	; 134
    16c4:	09 f0       	breq	.+2      	; 0x16c8 <vfprintf+0x2f6>
    16c6:	73 94       	inc	r7
    16c8:	23 fd       	sbrc	r18, 3
    16ca:	12 c0       	rjmp	.+36     	; 0x16f0 <vfprintf+0x31e>
    16cc:	20 ff       	sbrs	r18, 0
    16ce:	06 c0       	rjmp	.+12     	; 0x16dc <vfprintf+0x30a>
    16d0:	5a 2c       	mov	r5, r10
    16d2:	73 14       	cp	r7, r3
    16d4:	18 f4       	brcc	.+6      	; 0x16dc <vfprintf+0x30a>
    16d6:	53 0c       	add	r5, r3
    16d8:	57 18       	sub	r5, r7
    16da:	73 2c       	mov	r7, r3
    16dc:	73 14       	cp	r7, r3
    16de:	60 f4       	brcc	.+24     	; 0x16f8 <vfprintf+0x326>
    16e0:	b7 01       	movw	r22, r14
    16e2:	80 e2       	ldi	r24, 0x20	; 32
    16e4:	90 e0       	ldi	r25, 0x00	; 0
    16e6:	2c 87       	std	Y+12, r18	; 0x0c
    16e8:	c0 d1       	rcall	.+896    	; 0x1a6a <fputc>
    16ea:	73 94       	inc	r7
    16ec:	2c 85       	ldd	r18, Y+12	; 0x0c
    16ee:	f6 cf       	rjmp	.-20     	; 0x16dc <vfprintf+0x30a>
    16f0:	73 14       	cp	r7, r3
    16f2:	10 f4       	brcc	.+4      	; 0x16f8 <vfprintf+0x326>
    16f4:	37 18       	sub	r3, r7
    16f6:	01 c0       	rjmp	.+2      	; 0x16fa <vfprintf+0x328>
    16f8:	31 2c       	mov	r3, r1
    16fa:	24 ff       	sbrs	r18, 4
    16fc:	11 c0       	rjmp	.+34     	; 0x1720 <vfprintf+0x34e>
    16fe:	b7 01       	movw	r22, r14
    1700:	80 e3       	ldi	r24, 0x30	; 48
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	2c 87       	std	Y+12, r18	; 0x0c
    1706:	b1 d1       	rcall	.+866    	; 0x1a6a <fputc>
    1708:	2c 85       	ldd	r18, Y+12	; 0x0c
    170a:	22 ff       	sbrs	r18, 2
    170c:	16 c0       	rjmp	.+44     	; 0x173a <vfprintf+0x368>
    170e:	21 ff       	sbrs	r18, 1
    1710:	03 c0       	rjmp	.+6      	; 0x1718 <vfprintf+0x346>
    1712:	88 e5       	ldi	r24, 0x58	; 88
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	02 c0       	rjmp	.+4      	; 0x171c <vfprintf+0x34a>
    1718:	88 e7       	ldi	r24, 0x78	; 120
    171a:	90 e0       	ldi	r25, 0x00	; 0
    171c:	b7 01       	movw	r22, r14
    171e:	0c c0       	rjmp	.+24     	; 0x1738 <vfprintf+0x366>
    1720:	82 2f       	mov	r24, r18
    1722:	86 78       	andi	r24, 0x86	; 134
    1724:	51 f0       	breq	.+20     	; 0x173a <vfprintf+0x368>
    1726:	21 fd       	sbrc	r18, 1
    1728:	02 c0       	rjmp	.+4      	; 0x172e <vfprintf+0x35c>
    172a:	80 e2       	ldi	r24, 0x20	; 32
    172c:	01 c0       	rjmp	.+2      	; 0x1730 <vfprintf+0x35e>
    172e:	8b e2       	ldi	r24, 0x2B	; 43
    1730:	27 fd       	sbrc	r18, 7
    1732:	8d e2       	ldi	r24, 0x2D	; 45
    1734:	b7 01       	movw	r22, r14
    1736:	90 e0       	ldi	r25, 0x00	; 0
    1738:	98 d1       	rcall	.+816    	; 0x1a6a <fputc>
    173a:	a5 14       	cp	r10, r5
    173c:	30 f4       	brcc	.+12     	; 0x174a <vfprintf+0x378>
    173e:	b7 01       	movw	r22, r14
    1740:	80 e3       	ldi	r24, 0x30	; 48
    1742:	90 e0       	ldi	r25, 0x00	; 0
    1744:	92 d1       	rcall	.+804    	; 0x1a6a <fputc>
    1746:	5a 94       	dec	r5
    1748:	f8 cf       	rjmp	.-16     	; 0x173a <vfprintf+0x368>
    174a:	aa 94       	dec	r10
    174c:	f4 01       	movw	r30, r8
    174e:	ea 0d       	add	r30, r10
    1750:	f1 1d       	adc	r31, r1
    1752:	80 81       	ld	r24, Z
    1754:	b7 01       	movw	r22, r14
    1756:	90 e0       	ldi	r25, 0x00	; 0
    1758:	88 d1       	rcall	.+784    	; 0x1a6a <fputc>
    175a:	a1 10       	cpse	r10, r1
    175c:	f6 cf       	rjmp	.-20     	; 0x174a <vfprintf+0x378>
    175e:	33 20       	and	r3, r3
    1760:	09 f4       	brne	.+2      	; 0x1764 <vfprintf+0x392>
    1762:	5d ce       	rjmp	.-838    	; 0x141e <vfprintf+0x4c>
    1764:	b7 01       	movw	r22, r14
    1766:	80 e2       	ldi	r24, 0x20	; 32
    1768:	90 e0       	ldi	r25, 0x00	; 0
    176a:	7f d1       	rcall	.+766    	; 0x1a6a <fputc>
    176c:	3a 94       	dec	r3
    176e:	f7 cf       	rjmp	.-18     	; 0x175e <vfprintf+0x38c>
    1770:	f7 01       	movw	r30, r14
    1772:	86 81       	ldd	r24, Z+6	; 0x06
    1774:	97 81       	ldd	r25, Z+7	; 0x07
    1776:	02 c0       	rjmp	.+4      	; 0x177c <vfprintf+0x3aa>
    1778:	8f ef       	ldi	r24, 0xFF	; 255
    177a:	9f ef       	ldi	r25, 0xFF	; 255
    177c:	2c 96       	adiw	r28, 0x0c	; 12
    177e:	0f b6       	in	r0, 0x3f	; 63
    1780:	f8 94       	cli
    1782:	de bf       	out	0x3e, r29	; 62
    1784:	0f be       	out	0x3f, r0	; 63
    1786:	cd bf       	out	0x3d, r28	; 61
    1788:	df 91       	pop	r29
    178a:	cf 91       	pop	r28
    178c:	1f 91       	pop	r17
    178e:	0f 91       	pop	r16
    1790:	ff 90       	pop	r15
    1792:	ef 90       	pop	r14
    1794:	df 90       	pop	r13
    1796:	cf 90       	pop	r12
    1798:	bf 90       	pop	r11
    179a:	af 90       	pop	r10
    179c:	9f 90       	pop	r9
    179e:	8f 90       	pop	r8
    17a0:	7f 90       	pop	r7
    17a2:	6f 90       	pop	r6
    17a4:	5f 90       	pop	r5
    17a6:	4f 90       	pop	r4
    17a8:	3f 90       	pop	r3
    17aa:	2f 90       	pop	r2
    17ac:	08 95       	ret

000017ae <calloc>:
    17ae:	0f 93       	push	r16
    17b0:	1f 93       	push	r17
    17b2:	cf 93       	push	r28
    17b4:	df 93       	push	r29
    17b6:	86 9f       	mul	r24, r22
    17b8:	80 01       	movw	r16, r0
    17ba:	87 9f       	mul	r24, r23
    17bc:	10 0d       	add	r17, r0
    17be:	96 9f       	mul	r25, r22
    17c0:	10 0d       	add	r17, r0
    17c2:	11 24       	eor	r1, r1
    17c4:	c8 01       	movw	r24, r16
    17c6:	0d d0       	rcall	.+26     	; 0x17e2 <malloc>
    17c8:	ec 01       	movw	r28, r24
    17ca:	00 97       	sbiw	r24, 0x00	; 0
    17cc:	21 f0       	breq	.+8      	; 0x17d6 <calloc+0x28>
    17ce:	a8 01       	movw	r20, r16
    17d0:	60 e0       	ldi	r22, 0x00	; 0
    17d2:	70 e0       	ldi	r23, 0x00	; 0
    17d4:	38 d1       	rcall	.+624    	; 0x1a46 <memset>
    17d6:	ce 01       	movw	r24, r28
    17d8:	df 91       	pop	r29
    17da:	cf 91       	pop	r28
    17dc:	1f 91       	pop	r17
    17de:	0f 91       	pop	r16
    17e0:	08 95       	ret

000017e2 <malloc>:
    17e2:	cf 93       	push	r28
    17e4:	df 93       	push	r29
    17e6:	82 30       	cpi	r24, 0x02	; 2
    17e8:	91 05       	cpc	r25, r1
    17ea:	10 f4       	brcc	.+4      	; 0x17f0 <malloc+0xe>
    17ec:	82 e0       	ldi	r24, 0x02	; 2
    17ee:	90 e0       	ldi	r25, 0x00	; 0
    17f0:	e0 91 05 03 	lds	r30, 0x0305
    17f4:	f0 91 06 03 	lds	r31, 0x0306
    17f8:	20 e0       	ldi	r18, 0x00	; 0
    17fa:	30 e0       	ldi	r19, 0x00	; 0
    17fc:	a0 e0       	ldi	r26, 0x00	; 0
    17fe:	b0 e0       	ldi	r27, 0x00	; 0
    1800:	30 97       	sbiw	r30, 0x00	; 0
    1802:	39 f1       	breq	.+78     	; 0x1852 <malloc+0x70>
    1804:	40 81       	ld	r20, Z
    1806:	51 81       	ldd	r21, Z+1	; 0x01
    1808:	48 17       	cp	r20, r24
    180a:	59 07       	cpc	r21, r25
    180c:	b8 f0       	brcs	.+46     	; 0x183c <malloc+0x5a>
    180e:	48 17       	cp	r20, r24
    1810:	59 07       	cpc	r21, r25
    1812:	71 f4       	brne	.+28     	; 0x1830 <malloc+0x4e>
    1814:	82 81       	ldd	r24, Z+2	; 0x02
    1816:	93 81       	ldd	r25, Z+3	; 0x03
    1818:	10 97       	sbiw	r26, 0x00	; 0
    181a:	29 f0       	breq	.+10     	; 0x1826 <malloc+0x44>
    181c:	13 96       	adiw	r26, 0x03	; 3
    181e:	9c 93       	st	X, r25
    1820:	8e 93       	st	-X, r24
    1822:	12 97       	sbiw	r26, 0x02	; 2
    1824:	2c c0       	rjmp	.+88     	; 0x187e <malloc+0x9c>
    1826:	90 93 06 03 	sts	0x0306, r25
    182a:	80 93 05 03 	sts	0x0305, r24
    182e:	27 c0       	rjmp	.+78     	; 0x187e <malloc+0x9c>
    1830:	21 15       	cp	r18, r1
    1832:	31 05       	cpc	r19, r1
    1834:	31 f0       	breq	.+12     	; 0x1842 <malloc+0x60>
    1836:	42 17       	cp	r20, r18
    1838:	53 07       	cpc	r21, r19
    183a:	18 f0       	brcs	.+6      	; 0x1842 <malloc+0x60>
    183c:	a9 01       	movw	r20, r18
    183e:	db 01       	movw	r26, r22
    1840:	01 c0       	rjmp	.+2      	; 0x1844 <malloc+0x62>
    1842:	ef 01       	movw	r28, r30
    1844:	9a 01       	movw	r18, r20
    1846:	bd 01       	movw	r22, r26
    1848:	df 01       	movw	r26, r30
    184a:	02 80       	ldd	r0, Z+2	; 0x02
    184c:	f3 81       	ldd	r31, Z+3	; 0x03
    184e:	e0 2d       	mov	r30, r0
    1850:	d7 cf       	rjmp	.-82     	; 0x1800 <malloc+0x1e>
    1852:	21 15       	cp	r18, r1
    1854:	31 05       	cpc	r19, r1
    1856:	f9 f0       	breq	.+62     	; 0x1896 <malloc+0xb4>
    1858:	28 1b       	sub	r18, r24
    185a:	39 0b       	sbc	r19, r25
    185c:	24 30       	cpi	r18, 0x04	; 4
    185e:	31 05       	cpc	r19, r1
    1860:	80 f4       	brcc	.+32     	; 0x1882 <malloc+0xa0>
    1862:	8a 81       	ldd	r24, Y+2	; 0x02
    1864:	9b 81       	ldd	r25, Y+3	; 0x03
    1866:	61 15       	cp	r22, r1
    1868:	71 05       	cpc	r23, r1
    186a:	21 f0       	breq	.+8      	; 0x1874 <malloc+0x92>
    186c:	fb 01       	movw	r30, r22
    186e:	93 83       	std	Z+3, r25	; 0x03
    1870:	82 83       	std	Z+2, r24	; 0x02
    1872:	04 c0       	rjmp	.+8      	; 0x187c <malloc+0x9a>
    1874:	90 93 06 03 	sts	0x0306, r25
    1878:	80 93 05 03 	sts	0x0305, r24
    187c:	fe 01       	movw	r30, r28
    187e:	32 96       	adiw	r30, 0x02	; 2
    1880:	44 c0       	rjmp	.+136    	; 0x190a <malloc+0x128>
    1882:	fe 01       	movw	r30, r28
    1884:	e2 0f       	add	r30, r18
    1886:	f3 1f       	adc	r31, r19
    1888:	81 93       	st	Z+, r24
    188a:	91 93       	st	Z+, r25
    188c:	22 50       	subi	r18, 0x02	; 2
    188e:	31 09       	sbc	r19, r1
    1890:	39 83       	std	Y+1, r19	; 0x01
    1892:	28 83       	st	Y, r18
    1894:	3a c0       	rjmp	.+116    	; 0x190a <malloc+0x128>
    1896:	20 91 03 03 	lds	r18, 0x0303
    189a:	30 91 04 03 	lds	r19, 0x0304
    189e:	23 2b       	or	r18, r19
    18a0:	41 f4       	brne	.+16     	; 0x18b2 <malloc+0xd0>
    18a2:	20 91 02 02 	lds	r18, 0x0202
    18a6:	30 91 03 02 	lds	r19, 0x0203
    18aa:	30 93 04 03 	sts	0x0304, r19
    18ae:	20 93 03 03 	sts	0x0303, r18
    18b2:	20 91 00 02 	lds	r18, 0x0200
    18b6:	30 91 01 02 	lds	r19, 0x0201
    18ba:	21 15       	cp	r18, r1
    18bc:	31 05       	cpc	r19, r1
    18be:	41 f4       	brne	.+16     	; 0x18d0 <malloc+0xee>
    18c0:	2d b7       	in	r18, 0x3d	; 61
    18c2:	3e b7       	in	r19, 0x3e	; 62
    18c4:	40 91 04 02 	lds	r20, 0x0204
    18c8:	50 91 05 02 	lds	r21, 0x0205
    18cc:	24 1b       	sub	r18, r20
    18ce:	35 0b       	sbc	r19, r21
    18d0:	e0 91 03 03 	lds	r30, 0x0303
    18d4:	f0 91 04 03 	lds	r31, 0x0304
    18d8:	e2 17       	cp	r30, r18
    18da:	f3 07       	cpc	r31, r19
    18dc:	a0 f4       	brcc	.+40     	; 0x1906 <malloc+0x124>
    18de:	2e 1b       	sub	r18, r30
    18e0:	3f 0b       	sbc	r19, r31
    18e2:	28 17       	cp	r18, r24
    18e4:	39 07       	cpc	r19, r25
    18e6:	78 f0       	brcs	.+30     	; 0x1906 <malloc+0x124>
    18e8:	ac 01       	movw	r20, r24
    18ea:	4e 5f       	subi	r20, 0xFE	; 254
    18ec:	5f 4f       	sbci	r21, 0xFF	; 255
    18ee:	24 17       	cp	r18, r20
    18f0:	35 07       	cpc	r19, r21
    18f2:	48 f0       	brcs	.+18     	; 0x1906 <malloc+0x124>
    18f4:	4e 0f       	add	r20, r30
    18f6:	5f 1f       	adc	r21, r31
    18f8:	50 93 04 03 	sts	0x0304, r21
    18fc:	40 93 03 03 	sts	0x0303, r20
    1900:	81 93       	st	Z+, r24
    1902:	91 93       	st	Z+, r25
    1904:	02 c0       	rjmp	.+4      	; 0x190a <malloc+0x128>
    1906:	e0 e0       	ldi	r30, 0x00	; 0
    1908:	f0 e0       	ldi	r31, 0x00	; 0
    190a:	cf 01       	movw	r24, r30
    190c:	df 91       	pop	r29
    190e:	cf 91       	pop	r28
    1910:	08 95       	ret

00001912 <free>:
    1912:	cf 93       	push	r28
    1914:	df 93       	push	r29
    1916:	00 97       	sbiw	r24, 0x00	; 0
    1918:	09 f4       	brne	.+2      	; 0x191c <free+0xa>
    191a:	87 c0       	rjmp	.+270    	; 0x1a2a <free+0x118>
    191c:	fc 01       	movw	r30, r24
    191e:	32 97       	sbiw	r30, 0x02	; 2
    1920:	13 82       	std	Z+3, r1	; 0x03
    1922:	12 82       	std	Z+2, r1	; 0x02
    1924:	c0 91 05 03 	lds	r28, 0x0305
    1928:	d0 91 06 03 	lds	r29, 0x0306
    192c:	20 97       	sbiw	r28, 0x00	; 0
    192e:	81 f4       	brne	.+32     	; 0x1950 <free+0x3e>
    1930:	20 81       	ld	r18, Z
    1932:	31 81       	ldd	r19, Z+1	; 0x01
    1934:	28 0f       	add	r18, r24
    1936:	39 1f       	adc	r19, r25
    1938:	80 91 03 03 	lds	r24, 0x0303
    193c:	90 91 04 03 	lds	r25, 0x0304
    1940:	82 17       	cp	r24, r18
    1942:	93 07       	cpc	r25, r19
    1944:	79 f5       	brne	.+94     	; 0x19a4 <free+0x92>
    1946:	f0 93 04 03 	sts	0x0304, r31
    194a:	e0 93 03 03 	sts	0x0303, r30
    194e:	6d c0       	rjmp	.+218    	; 0x1a2a <free+0x118>
    1950:	de 01       	movw	r26, r28
    1952:	20 e0       	ldi	r18, 0x00	; 0
    1954:	30 e0       	ldi	r19, 0x00	; 0
    1956:	ae 17       	cp	r26, r30
    1958:	bf 07       	cpc	r27, r31
    195a:	50 f4       	brcc	.+20     	; 0x1970 <free+0x5e>
    195c:	12 96       	adiw	r26, 0x02	; 2
    195e:	4d 91       	ld	r20, X+
    1960:	5c 91       	ld	r21, X
    1962:	13 97       	sbiw	r26, 0x03	; 3
    1964:	9d 01       	movw	r18, r26
    1966:	41 15       	cp	r20, r1
    1968:	51 05       	cpc	r21, r1
    196a:	09 f1       	breq	.+66     	; 0x19ae <free+0x9c>
    196c:	da 01       	movw	r26, r20
    196e:	f3 cf       	rjmp	.-26     	; 0x1956 <free+0x44>
    1970:	b3 83       	std	Z+3, r27	; 0x03
    1972:	a2 83       	std	Z+2, r26	; 0x02
    1974:	40 81       	ld	r20, Z
    1976:	51 81       	ldd	r21, Z+1	; 0x01
    1978:	84 0f       	add	r24, r20
    197a:	95 1f       	adc	r25, r21
    197c:	8a 17       	cp	r24, r26
    197e:	9b 07       	cpc	r25, r27
    1980:	71 f4       	brne	.+28     	; 0x199e <free+0x8c>
    1982:	8d 91       	ld	r24, X+
    1984:	9c 91       	ld	r25, X
    1986:	11 97       	sbiw	r26, 0x01	; 1
    1988:	84 0f       	add	r24, r20
    198a:	95 1f       	adc	r25, r21
    198c:	02 96       	adiw	r24, 0x02	; 2
    198e:	91 83       	std	Z+1, r25	; 0x01
    1990:	80 83       	st	Z, r24
    1992:	12 96       	adiw	r26, 0x02	; 2
    1994:	8d 91       	ld	r24, X+
    1996:	9c 91       	ld	r25, X
    1998:	13 97       	sbiw	r26, 0x03	; 3
    199a:	93 83       	std	Z+3, r25	; 0x03
    199c:	82 83       	std	Z+2, r24	; 0x02
    199e:	21 15       	cp	r18, r1
    19a0:	31 05       	cpc	r19, r1
    19a2:	29 f4       	brne	.+10     	; 0x19ae <free+0x9c>
    19a4:	f0 93 06 03 	sts	0x0306, r31
    19a8:	e0 93 05 03 	sts	0x0305, r30
    19ac:	3e c0       	rjmp	.+124    	; 0x1a2a <free+0x118>
    19ae:	d9 01       	movw	r26, r18
    19b0:	13 96       	adiw	r26, 0x03	; 3
    19b2:	fc 93       	st	X, r31
    19b4:	ee 93       	st	-X, r30
    19b6:	12 97       	sbiw	r26, 0x02	; 2
    19b8:	4d 91       	ld	r20, X+
    19ba:	5d 91       	ld	r21, X+
    19bc:	a4 0f       	add	r26, r20
    19be:	b5 1f       	adc	r27, r21
    19c0:	ea 17       	cp	r30, r26
    19c2:	fb 07       	cpc	r31, r27
    19c4:	79 f4       	brne	.+30     	; 0x19e4 <free+0xd2>
    19c6:	80 81       	ld	r24, Z
    19c8:	91 81       	ldd	r25, Z+1	; 0x01
    19ca:	84 0f       	add	r24, r20
    19cc:	95 1f       	adc	r25, r21
    19ce:	02 96       	adiw	r24, 0x02	; 2
    19d0:	d9 01       	movw	r26, r18
    19d2:	11 96       	adiw	r26, 0x01	; 1
    19d4:	9c 93       	st	X, r25
    19d6:	8e 93       	st	-X, r24
    19d8:	82 81       	ldd	r24, Z+2	; 0x02
    19da:	93 81       	ldd	r25, Z+3	; 0x03
    19dc:	13 96       	adiw	r26, 0x03	; 3
    19de:	9c 93       	st	X, r25
    19e0:	8e 93       	st	-X, r24
    19e2:	12 97       	sbiw	r26, 0x02	; 2
    19e4:	e0 e0       	ldi	r30, 0x00	; 0
    19e6:	f0 e0       	ldi	r31, 0x00	; 0
    19e8:	8a 81       	ldd	r24, Y+2	; 0x02
    19ea:	9b 81       	ldd	r25, Y+3	; 0x03
    19ec:	00 97       	sbiw	r24, 0x00	; 0
    19ee:	19 f0       	breq	.+6      	; 0x19f6 <free+0xe4>
    19f0:	fe 01       	movw	r30, r28
    19f2:	ec 01       	movw	r28, r24
    19f4:	f9 cf       	rjmp	.-14     	; 0x19e8 <free+0xd6>
    19f6:	ce 01       	movw	r24, r28
    19f8:	02 96       	adiw	r24, 0x02	; 2
    19fa:	28 81       	ld	r18, Y
    19fc:	39 81       	ldd	r19, Y+1	; 0x01
    19fe:	82 0f       	add	r24, r18
    1a00:	93 1f       	adc	r25, r19
    1a02:	20 91 03 03 	lds	r18, 0x0303
    1a06:	30 91 04 03 	lds	r19, 0x0304
    1a0a:	28 17       	cp	r18, r24
    1a0c:	39 07       	cpc	r19, r25
    1a0e:	69 f4       	brne	.+26     	; 0x1a2a <free+0x118>
    1a10:	30 97       	sbiw	r30, 0x00	; 0
    1a12:	29 f4       	brne	.+10     	; 0x1a1e <free+0x10c>
    1a14:	10 92 06 03 	sts	0x0306, r1
    1a18:	10 92 05 03 	sts	0x0305, r1
    1a1c:	02 c0       	rjmp	.+4      	; 0x1a22 <free+0x110>
    1a1e:	13 82       	std	Z+3, r1	; 0x03
    1a20:	12 82       	std	Z+2, r1	; 0x02
    1a22:	d0 93 04 03 	sts	0x0304, r29
    1a26:	c0 93 03 03 	sts	0x0303, r28
    1a2a:	df 91       	pop	r29
    1a2c:	cf 91       	pop	r28
    1a2e:	08 95       	ret

00001a30 <strnlen_P>:
    1a30:	fc 01       	movw	r30, r24
    1a32:	05 90       	lpm	r0, Z+
    1a34:	61 50       	subi	r22, 0x01	; 1
    1a36:	70 40       	sbci	r23, 0x00	; 0
    1a38:	01 10       	cpse	r0, r1
    1a3a:	d8 f7       	brcc	.-10     	; 0x1a32 <strnlen_P+0x2>
    1a3c:	80 95       	com	r24
    1a3e:	90 95       	com	r25
    1a40:	8e 0f       	add	r24, r30
    1a42:	9f 1f       	adc	r25, r31
    1a44:	08 95       	ret

00001a46 <memset>:
    1a46:	dc 01       	movw	r26, r24
    1a48:	01 c0       	rjmp	.+2      	; 0x1a4c <memset+0x6>
    1a4a:	6d 93       	st	X+, r22
    1a4c:	41 50       	subi	r20, 0x01	; 1
    1a4e:	50 40       	sbci	r21, 0x00	; 0
    1a50:	e0 f7       	brcc	.-8      	; 0x1a4a <memset+0x4>
    1a52:	08 95       	ret

00001a54 <strnlen>:
    1a54:	fc 01       	movw	r30, r24
    1a56:	61 50       	subi	r22, 0x01	; 1
    1a58:	70 40       	sbci	r23, 0x00	; 0
    1a5a:	01 90       	ld	r0, Z+
    1a5c:	01 10       	cpse	r0, r1
    1a5e:	d8 f7       	brcc	.-10     	; 0x1a56 <strnlen+0x2>
    1a60:	80 95       	com	r24
    1a62:	90 95       	com	r25
    1a64:	8e 0f       	add	r24, r30
    1a66:	9f 1f       	adc	r25, r31
    1a68:	08 95       	ret

00001a6a <fputc>:
    1a6a:	0f 93       	push	r16
    1a6c:	1f 93       	push	r17
    1a6e:	cf 93       	push	r28
    1a70:	df 93       	push	r29
    1a72:	18 2f       	mov	r17, r24
    1a74:	09 2f       	mov	r16, r25
    1a76:	eb 01       	movw	r28, r22
    1a78:	8b 81       	ldd	r24, Y+3	; 0x03
    1a7a:	81 fd       	sbrc	r24, 1
    1a7c:	03 c0       	rjmp	.+6      	; 0x1a84 <fputc+0x1a>
    1a7e:	8f ef       	ldi	r24, 0xFF	; 255
    1a80:	9f ef       	ldi	r25, 0xFF	; 255
    1a82:	20 c0       	rjmp	.+64     	; 0x1ac4 <fputc+0x5a>
    1a84:	82 ff       	sbrs	r24, 2
    1a86:	10 c0       	rjmp	.+32     	; 0x1aa8 <fputc+0x3e>
    1a88:	4e 81       	ldd	r20, Y+6	; 0x06
    1a8a:	5f 81       	ldd	r21, Y+7	; 0x07
    1a8c:	2c 81       	ldd	r18, Y+4	; 0x04
    1a8e:	3d 81       	ldd	r19, Y+5	; 0x05
    1a90:	42 17       	cp	r20, r18
    1a92:	53 07       	cpc	r21, r19
    1a94:	7c f4       	brge	.+30     	; 0x1ab4 <fputc+0x4a>
    1a96:	e8 81       	ld	r30, Y
    1a98:	f9 81       	ldd	r31, Y+1	; 0x01
    1a9a:	9f 01       	movw	r18, r30
    1a9c:	2f 5f       	subi	r18, 0xFF	; 255
    1a9e:	3f 4f       	sbci	r19, 0xFF	; 255
    1aa0:	39 83       	std	Y+1, r19	; 0x01
    1aa2:	28 83       	st	Y, r18
    1aa4:	10 83       	st	Z, r17
    1aa6:	06 c0       	rjmp	.+12     	; 0x1ab4 <fputc+0x4a>
    1aa8:	e8 85       	ldd	r30, Y+8	; 0x08
    1aaa:	f9 85       	ldd	r31, Y+9	; 0x09
    1aac:	81 2f       	mov	r24, r17
    1aae:	19 95       	eicall
    1ab0:	89 2b       	or	r24, r25
    1ab2:	29 f7       	brne	.-54     	; 0x1a7e <fputc+0x14>
    1ab4:	2e 81       	ldd	r18, Y+6	; 0x06
    1ab6:	3f 81       	ldd	r19, Y+7	; 0x07
    1ab8:	2f 5f       	subi	r18, 0xFF	; 255
    1aba:	3f 4f       	sbci	r19, 0xFF	; 255
    1abc:	3f 83       	std	Y+7, r19	; 0x07
    1abe:	2e 83       	std	Y+6, r18	; 0x06
    1ac0:	81 2f       	mov	r24, r17
    1ac2:	90 2f       	mov	r25, r16
    1ac4:	df 91       	pop	r29
    1ac6:	cf 91       	pop	r28
    1ac8:	1f 91       	pop	r17
    1aca:	0f 91       	pop	r16
    1acc:	08 95       	ret

00001ace <__ultoa_invert>:
    1ace:	fa 01       	movw	r30, r20
    1ad0:	aa 27       	eor	r26, r26
    1ad2:	28 30       	cpi	r18, 0x08	; 8
    1ad4:	51 f1       	breq	.+84     	; 0x1b2a <__ultoa_invert+0x5c>
    1ad6:	20 31       	cpi	r18, 0x10	; 16
    1ad8:	81 f1       	breq	.+96     	; 0x1b3a <__ultoa_invert+0x6c>
    1ada:	e8 94       	clt
    1adc:	6f 93       	push	r22
    1ade:	6e 7f       	andi	r22, 0xFE	; 254
    1ae0:	6e 5f       	subi	r22, 0xFE	; 254
    1ae2:	7f 4f       	sbci	r23, 0xFF	; 255
    1ae4:	8f 4f       	sbci	r24, 0xFF	; 255
    1ae6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ae8:	af 4f       	sbci	r26, 0xFF	; 255
    1aea:	b1 e0       	ldi	r27, 0x01	; 1
    1aec:	3e d0       	rcall	.+124    	; 0x1b6a <__ultoa_invert+0x9c>
    1aee:	b4 e0       	ldi	r27, 0x04	; 4
    1af0:	3c d0       	rcall	.+120    	; 0x1b6a <__ultoa_invert+0x9c>
    1af2:	67 0f       	add	r22, r23
    1af4:	78 1f       	adc	r23, r24
    1af6:	89 1f       	adc	r24, r25
    1af8:	9a 1f       	adc	r25, r26
    1afa:	a1 1d       	adc	r26, r1
    1afc:	68 0f       	add	r22, r24
    1afe:	79 1f       	adc	r23, r25
    1b00:	8a 1f       	adc	r24, r26
    1b02:	91 1d       	adc	r25, r1
    1b04:	a1 1d       	adc	r26, r1
    1b06:	6a 0f       	add	r22, r26
    1b08:	71 1d       	adc	r23, r1
    1b0a:	81 1d       	adc	r24, r1
    1b0c:	91 1d       	adc	r25, r1
    1b0e:	a1 1d       	adc	r26, r1
    1b10:	20 d0       	rcall	.+64     	; 0x1b52 <__ultoa_invert+0x84>
    1b12:	09 f4       	brne	.+2      	; 0x1b16 <__ultoa_invert+0x48>
    1b14:	68 94       	set
    1b16:	3f 91       	pop	r19
    1b18:	2a e0       	ldi	r18, 0x0A	; 10
    1b1a:	26 9f       	mul	r18, r22
    1b1c:	11 24       	eor	r1, r1
    1b1e:	30 19       	sub	r19, r0
    1b20:	30 5d       	subi	r19, 0xD0	; 208
    1b22:	31 93       	st	Z+, r19
    1b24:	de f6       	brtc	.-74     	; 0x1adc <__ultoa_invert+0xe>
    1b26:	cf 01       	movw	r24, r30
    1b28:	08 95       	ret
    1b2a:	46 2f       	mov	r20, r22
    1b2c:	47 70       	andi	r20, 0x07	; 7
    1b2e:	40 5d       	subi	r20, 0xD0	; 208
    1b30:	41 93       	st	Z+, r20
    1b32:	b3 e0       	ldi	r27, 0x03	; 3
    1b34:	0f d0       	rcall	.+30     	; 0x1b54 <__ultoa_invert+0x86>
    1b36:	c9 f7       	brne	.-14     	; 0x1b2a <__ultoa_invert+0x5c>
    1b38:	f6 cf       	rjmp	.-20     	; 0x1b26 <__ultoa_invert+0x58>
    1b3a:	46 2f       	mov	r20, r22
    1b3c:	4f 70       	andi	r20, 0x0F	; 15
    1b3e:	40 5d       	subi	r20, 0xD0	; 208
    1b40:	4a 33       	cpi	r20, 0x3A	; 58
    1b42:	18 f0       	brcs	.+6      	; 0x1b4a <__ultoa_invert+0x7c>
    1b44:	49 5d       	subi	r20, 0xD9	; 217
    1b46:	31 fd       	sbrc	r19, 1
    1b48:	40 52       	subi	r20, 0x20	; 32
    1b4a:	41 93       	st	Z+, r20
    1b4c:	02 d0       	rcall	.+4      	; 0x1b52 <__ultoa_invert+0x84>
    1b4e:	a9 f7       	brne	.-22     	; 0x1b3a <__ultoa_invert+0x6c>
    1b50:	ea cf       	rjmp	.-44     	; 0x1b26 <__ultoa_invert+0x58>
    1b52:	b4 e0       	ldi	r27, 0x04	; 4
    1b54:	a6 95       	lsr	r26
    1b56:	97 95       	ror	r25
    1b58:	87 95       	ror	r24
    1b5a:	77 95       	ror	r23
    1b5c:	67 95       	ror	r22
    1b5e:	ba 95       	dec	r27
    1b60:	c9 f7       	brne	.-14     	; 0x1b54 <__ultoa_invert+0x86>
    1b62:	00 97       	sbiw	r24, 0x00	; 0
    1b64:	61 05       	cpc	r22, r1
    1b66:	71 05       	cpc	r23, r1
    1b68:	08 95       	ret
    1b6a:	9b 01       	movw	r18, r22
    1b6c:	ac 01       	movw	r20, r24
    1b6e:	0a 2e       	mov	r0, r26
    1b70:	06 94       	lsr	r0
    1b72:	57 95       	ror	r21
    1b74:	47 95       	ror	r20
    1b76:	37 95       	ror	r19
    1b78:	27 95       	ror	r18
    1b7a:	ba 95       	dec	r27
    1b7c:	c9 f7       	brne	.-14     	; 0x1b70 <__ultoa_invert+0xa2>
    1b7e:	62 0f       	add	r22, r18
    1b80:	73 1f       	adc	r23, r19
    1b82:	84 1f       	adc	r24, r20
    1b84:	95 1f       	adc	r25, r21
    1b86:	a0 1d       	adc	r26, r0
    1b88:	08 95       	ret

00001b8a <_exit>:
    1b8a:	f8 94       	cli

00001b8c <__stop_program>:
    1b8c:	ff cf       	rjmp	.-2      	; 0x1b8c <__stop_program>
