
ATmega2560.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000cc  00800200  00001910  000019a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001910  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000025  008002cc  008002cc  00001a70  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001a70  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000002d8  00000000  00000000  00001acc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000020bf  00000000  00000000  00001da4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000113f  00000000  00000000  00003e63  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001702  00000000  00000000  00004fa2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000628  00000000  00000000  000066a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000847  00000000  00000000  00006ccc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000fa7  00000000  00000000  00007513  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000228  00000000  00000000  000084ba  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c2 c0       	rjmp	.+388    	; 0x186 <__ctors_end>
       2:	00 00       	nop
       4:	e0 c0       	rjmp	.+448    	; 0x1c6 <__bad_interrupt>
       6:	00 00       	nop
       8:	de c0       	rjmp	.+444    	; 0x1c6 <__bad_interrupt>
       a:	00 00       	nop
       c:	e3 c2       	rjmp	.+1478   	; 0x5d4 <__vector_3>
       e:	00 00       	nop
      10:	da c0       	rjmp	.+436    	; 0x1c6 <__bad_interrupt>
      12:	00 00       	nop
      14:	d8 c0       	rjmp	.+432    	; 0x1c6 <__bad_interrupt>
      16:	00 00       	nop
      18:	d6 c0       	rjmp	.+428    	; 0x1c6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	d4 c0       	rjmp	.+424    	; 0x1c6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	d2 c0       	rjmp	.+420    	; 0x1c6 <__bad_interrupt>
      22:	00 00       	nop
      24:	d0 c0       	rjmp	.+416    	; 0x1c6 <__bad_interrupt>
      26:	00 00       	nop
      28:	ce c0       	rjmp	.+412    	; 0x1c6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	cc c0       	rjmp	.+408    	; 0x1c6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	ca c0       	rjmp	.+404    	; 0x1c6 <__bad_interrupt>
      32:	00 00       	nop
      34:	c8 c0       	rjmp	.+400    	; 0x1c6 <__bad_interrupt>
      36:	00 00       	nop
      38:	c6 c0       	rjmp	.+396    	; 0x1c6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	c4 c0       	rjmp	.+392    	; 0x1c6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	c2 c0       	rjmp	.+388    	; 0x1c6 <__bad_interrupt>
      42:	00 00       	nop
      44:	c0 c0       	rjmp	.+384    	; 0x1c6 <__bad_interrupt>
      46:	00 00       	nop
      48:	be c0       	rjmp	.+380    	; 0x1c6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	bc c0       	rjmp	.+376    	; 0x1c6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	ba c0       	rjmp	.+372    	; 0x1c6 <__bad_interrupt>
      52:	00 00       	nop
      54:	b8 c0       	rjmp	.+368    	; 0x1c6 <__bad_interrupt>
      56:	00 00       	nop
      58:	b6 c0       	rjmp	.+364    	; 0x1c6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b4 c0       	rjmp	.+360    	; 0x1c6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	b2 c0       	rjmp	.+356    	; 0x1c6 <__bad_interrupt>
      62:	00 00       	nop
      64:	b0 c0       	rjmp	.+352    	; 0x1c6 <__bad_interrupt>
      66:	00 00       	nop
      68:	ae c0       	rjmp	.+348    	; 0x1c6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ac c0       	rjmp	.+344    	; 0x1c6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	aa c0       	rjmp	.+340    	; 0x1c6 <__bad_interrupt>
      72:	00 00       	nop
      74:	a8 c0       	rjmp	.+336    	; 0x1c6 <__bad_interrupt>
      76:	00 00       	nop
      78:	a6 c0       	rjmp	.+332    	; 0x1c6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a4 c0       	rjmp	.+328    	; 0x1c6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	a2 c0       	rjmp	.+324    	; 0x1c6 <__bad_interrupt>
      82:	00 00       	nop
      84:	a0 c0       	rjmp	.+320    	; 0x1c6 <__bad_interrupt>
      86:	00 00       	nop
      88:	9e c0       	rjmp	.+316    	; 0x1c6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	9c c0       	rjmp	.+312    	; 0x1c6 <__bad_interrupt>
      8e:	00 00       	nop
      90:	9a c0       	rjmp	.+308    	; 0x1c6 <__bad_interrupt>
      92:	00 00       	nop
      94:	98 c0       	rjmp	.+304    	; 0x1c6 <__bad_interrupt>
      96:	00 00       	nop
      98:	96 c0       	rjmp	.+300    	; 0x1c6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	10 c5       	rjmp	.+2592   	; 0xabe <__vector_39>
      9e:	00 00       	nop
      a0:	92 c0       	rjmp	.+292    	; 0x1c6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	90 c0       	rjmp	.+288    	; 0x1c6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	8e c0       	rjmp	.+284    	; 0x1c6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	8c c0       	rjmp	.+280    	; 0x1c6 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	8a c0       	rjmp	.+276    	; 0x1c6 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	88 c0       	rjmp	.+272    	; 0x1c6 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	86 c0       	rjmp	.+268    	; 0x1c6 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	84 c0       	rjmp	.+264    	; 0x1c6 <__bad_interrupt>
      be:	00 00       	nop
      c0:	82 c0       	rjmp	.+260    	; 0x1c6 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	80 c0       	rjmp	.+256    	; 0x1c6 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	7e c0       	rjmp	.+252    	; 0x1c6 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	7c c0       	rjmp	.+248    	; 0x1c6 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	7a c0       	rjmp	.+244    	; 0x1c6 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	78 c0       	rjmp	.+240    	; 0x1c6 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	76 c0       	rjmp	.+236    	; 0x1c6 <__bad_interrupt>
      da:	00 00       	nop
      dc:	74 c0       	rjmp	.+232    	; 0x1c6 <__bad_interrupt>
      de:	00 00       	nop
      e0:	72 c0       	rjmp	.+228    	; 0x1c6 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	7a 05       	cpc	r23, r10
      e6:	cc 05       	cpc	r28, r12
      e8:	cc 05       	cpc	r28, r12
      ea:	cc 05       	cpc	r28, r12
      ec:	cc 05       	cpc	r28, r12
      ee:	cc 05       	cpc	r28, r12
      f0:	cc 05       	cpc	r28, r12
      f2:	cc 05       	cpc	r28, r12
      f4:	7a 05       	cpc	r23, r10
      f6:	cc 05       	cpc	r28, r12
      f8:	cc 05       	cpc	r28, r12
      fa:	cc 05       	cpc	r28, r12
      fc:	cc 05       	cpc	r28, r12
      fe:	cc 05       	cpc	r28, r12
     100:	cc 05       	cpc	r28, r12
     102:	cc 05       	cpc	r28, r12
     104:	7c 05       	cpc	r23, r12
     106:	cc 05       	cpc	r28, r12
     108:	cc 05       	cpc	r28, r12
     10a:	cc 05       	cpc	r28, r12
     10c:	cc 05       	cpc	r28, r12
     10e:	cc 05       	cpc	r28, r12
     110:	cc 05       	cpc	r28, r12
     112:	cc 05       	cpc	r28, r12
     114:	cc 05       	cpc	r28, r12
     116:	cc 05       	cpc	r28, r12
     118:	cc 05       	cpc	r28, r12
     11a:	cc 05       	cpc	r28, r12
     11c:	cc 05       	cpc	r28, r12
     11e:	cc 05       	cpc	r28, r12
     120:	cc 05       	cpc	r28, r12
     122:	cc 05       	cpc	r28, r12
     124:	7c 05       	cpc	r23, r12
     126:	cc 05       	cpc	r28, r12
     128:	cc 05       	cpc	r28, r12
     12a:	cc 05       	cpc	r28, r12
     12c:	cc 05       	cpc	r28, r12
     12e:	cc 05       	cpc	r28, r12
     130:	cc 05       	cpc	r28, r12
     132:	cc 05       	cpc	r28, r12
     134:	cc 05       	cpc	r28, r12
     136:	cc 05       	cpc	r28, r12
     138:	cc 05       	cpc	r28, r12
     13a:	cc 05       	cpc	r28, r12
     13c:	cc 05       	cpc	r28, r12
     13e:	cc 05       	cpc	r28, r12
     140:	cc 05       	cpc	r28, r12
     142:	cc 05       	cpc	r28, r12
     144:	c8 05       	cpc	r28, r8
     146:	cc 05       	cpc	r28, r12
     148:	cc 05       	cpc	r28, r12
     14a:	cc 05       	cpc	r28, r12
     14c:	cc 05       	cpc	r28, r12
     14e:	cc 05       	cpc	r28, r12
     150:	cc 05       	cpc	r28, r12
     152:	cc 05       	cpc	r28, r12
     154:	a5 05       	cpc	r26, r5
     156:	cc 05       	cpc	r28, r12
     158:	cc 05       	cpc	r28, r12
     15a:	cc 05       	cpc	r28, r12
     15c:	cc 05       	cpc	r28, r12
     15e:	cc 05       	cpc	r28, r12
     160:	cc 05       	cpc	r28, r12
     162:	cc 05       	cpc	r28, r12
     164:	cc 05       	cpc	r28, r12
     166:	cc 05       	cpc	r28, r12
     168:	cc 05       	cpc	r28, r12
     16a:	cc 05       	cpc	r28, r12
     16c:	cc 05       	cpc	r28, r12
     16e:	cc 05       	cpc	r28, r12
     170:	cc 05       	cpc	r28, r12
     172:	cc 05       	cpc	r28, r12
     174:	99 05       	cpc	r25, r9
     176:	cc 05       	cpc	r28, r12
     178:	cc 05       	cpc	r28, r12
     17a:	cc 05       	cpc	r28, r12
     17c:	cc 05       	cpc	r28, r12
     17e:	cc 05       	cpc	r28, r12
     180:	cc 05       	cpc	r28, r12
     182:	cc 05       	cpc	r28, r12
     184:	b7 05       	cpc	r27, r7

00000186 <__ctors_end>:
     186:	11 24       	eor	r1, r1
     188:	1f be       	out	0x3f, r1	; 63
     18a:	cf ef       	ldi	r28, 0xFF	; 255
     18c:	d1 e2       	ldi	r29, 0x21	; 33
     18e:	de bf       	out	0x3e, r29	; 62
     190:	cd bf       	out	0x3d, r28	; 61
     192:	00 e0       	ldi	r16, 0x00	; 0
     194:	0c bf       	out	0x3c, r16	; 60

00000196 <__do_copy_data>:
     196:	12 e0       	ldi	r17, 0x02	; 2
     198:	a0 e0       	ldi	r26, 0x00	; 0
     19a:	b2 e0       	ldi	r27, 0x02	; 2
     19c:	e0 e1       	ldi	r30, 0x10	; 16
     19e:	f9 e1       	ldi	r31, 0x19	; 25
     1a0:	00 e0       	ldi	r16, 0x00	; 0
     1a2:	0b bf       	out	0x3b, r16	; 59
     1a4:	02 c0       	rjmp	.+4      	; 0x1aa <__do_copy_data+0x14>
     1a6:	07 90       	elpm	r0, Z+
     1a8:	0d 92       	st	X+, r0
     1aa:	ac 3c       	cpi	r26, 0xCC	; 204
     1ac:	b1 07       	cpc	r27, r17
     1ae:	d9 f7       	brne	.-10     	; 0x1a6 <__do_copy_data+0x10>

000001b0 <__do_clear_bss>:
     1b0:	22 e0       	ldi	r18, 0x02	; 2
     1b2:	ac ec       	ldi	r26, 0xCC	; 204
     1b4:	b2 e0       	ldi	r27, 0x02	; 2
     1b6:	01 c0       	rjmp	.+2      	; 0x1ba <.do_clear_bss_start>

000001b8 <.do_clear_bss_loop>:
     1b8:	1d 92       	st	X+, r1

000001ba <.do_clear_bss_start>:
     1ba:	a1 3f       	cpi	r26, 0xF1	; 241
     1bc:	b2 07       	cpc	r27, r18
     1be:	e1 f7       	brne	.-8      	; 0x1b8 <.do_clear_bss_loop>
     1c0:	03 d0       	rcall	.+6      	; 0x1c8 <main>
     1c2:	0c 94 86 0c 	jmp	0x190c	; 0x190c <_exit>

000001c6 <__bad_interrupt>:
     1c6:	1c cf       	rjmp	.-456    	; 0x0 <__vectors>

000001c8 <main>:
#include "drivers/can.h"
#include "controller.h"
#include "../../../can/can_protocol.h"

int main(void)
{
     1c8:	cf 93       	push	r28
     1ca:	df 93       	push	r29
     1cc:	cd b7       	in	r28, 0x3d	; 61
     1ce:	de b7       	in	r29, 0x3e	; 62
     1d0:	66 97       	sbiw	r28, 0x16	; 22
     1d2:	0f b6       	in	r0, 0x3f	; 63
     1d4:	f8 94       	cli
     1d6:	de bf       	out	0x3e, r29	; 62
     1d8:	0f be       	out	0x3f, r0	; 63
     1da:	cd bf       	out	0x3d, r28	; 61
	UART_init(MYUBRR);
     1dc:	87 e6       	ldi	r24, 0x67	; 103
     1de:	90 e0       	ldi	r25, 0x00	; 0
     1e0:	03 d5       	rcall	.+2566   	; 0xbe8 <UART_init>
	CAN_init();
     1e2:	03 d1       	rcall	.+518    	; 0x3ea <CAN_init>
	IR_init();
     1e4:	33 d2       	rcall	.+1126   	; 0x64c <IR_init>
	SERVO_init();
     1e6:	12 d4       	rcall	.+2084   	; 0xa0c <SERVO_init>
	MOTOR_init();
     1e8:	80 d3       	rcall	.+1792   	; 0x8ea <MOTOR_init>
	SOLENOID_init();
     1ea:	18 d4       	rcall	.+2096   	; 0xa1c <SOLENOID_init>

	struct can_message_t send_msg;
	struct can_message_t receive_msg;

	uint8_t ir_value = IR_read();
     1ec:	31 d2       	rcall	.+1122   	; 0x650 <IR_read>
     1ee:	f8 2e       	mov	r15, r24
		}
		
		ir_value = IR_read();
		if(ir_value != old_ir_value) {
			// Send score to node 1
			send_msg.id = NODE_2_ID;
     1f0:	02 e0       	ldi	r16, 0x02	; 2
     1f2:	10 e0       	ldi	r17, 0x00	; 0
			send_msg.length = 1;
     1f4:	88 24       	eor	r8, r8
     1f6:	83 94       	inc	r8
		}

		// Apply controller
		float encoder_value = 0xFF * ((float)MOTOR_read_encoder())/((float)MOTOR_max_encoder_value());
		float vel = CONTROLLER_actuate(encoder_value);
		MOTOR_set_dir_right(vel > 0);
     1f8:	71 2c       	mov	r7, r1

	uint8_t ir_value = IR_read();
	uint8_t old_ir_value = ir_value;

	while(1) {
		receive_msg = CAN_data_receive();
     1fa:	ce 01       	movw	r24, r28
     1fc:	0c 96       	adiw	r24, 0x0c	; 12
     1fe:	5e d1       	rcall	.+700    	; 0x4bc <CAN_data_receive>

		if(receive_msg.id == NODE_1_ID) {
     200:	2c 85       	ldd	r18, Y+12	; 0x0c
     202:	3d 85       	ldd	r19, Y+13	; 0x0d
     204:	21 30       	cpi	r18, 0x01	; 1
     206:	31 05       	cpc	r19, r1
     208:	59 f4       	brne	.+22     	; 0x220 <main+0x58>
			// Message is joystick data
			int8_t x = receive_msg.data[X_INDEX];
			int8_t click = receive_msg.data[CLICK_INDEX];
     20a:	e9 88       	ldd	r14, Y+17	; 0x11
			SERVO_write(x);
     20c:	8f 85       	ldd	r24, Y+15	; 0x0f
     20e:	b0 d3       	rcall	.+1888   	; 0x970 <SERVO_write>
			SOLENOID_shoot(click);
     210:	8e 2d       	mov	r24, r14
     212:	06 d4       	rcall	.+2060   	; 0xa20 <SOLENOID_shoot>

			// Slider data
			uint8_t ref = receive_msg.data[RIGHT_INDEX]; // Use right slider position as reference
			CONTROLLER_set_reference(ref);
     214:	6b 89       	ldd	r22, Y+19	; 0x13
     216:	70 e0       	ldi	r23, 0x00	; 0
     218:	80 e0       	ldi	r24, 0x00	; 0
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	f4 d5       	rcall	.+3048   	; 0xe06 <__floatunsisf>
     21e:	41 d0       	rcall	.+130    	; 0x2a2 <CONTROLLER_set_reference>
		}
		
		ir_value = IR_read();
     220:	17 d2       	rcall	.+1070   	; 0x650 <IR_read>
     222:	98 2e       	mov	r9, r24
		if(ir_value != old_ir_value) {
     224:	8f 15       	cp	r24, r15
     226:	39 f0       	breq	.+14     	; 0x236 <main+0x6e>
			// Send score to node 1
			send_msg.id = NODE_2_ID;
     228:	1a 83       	std	Y+2, r17	; 0x02
     22a:	09 83       	std	Y+1, r16	; 0x01
			send_msg.length = 1;
     22c:	8b 82       	std	Y+3, r8	; 0x03
			send_msg.data[IR_INDEX] = ir_value;
     22e:	8c 83       	std	Y+4, r24	; 0x04
			CAN_message_send(&send_msg);
     230:	ce 01       	movw	r24, r28
     232:	01 96       	adiw	r24, 0x01	; 1
     234:	f3 d0       	rcall	.+486    	; 0x41c <CAN_message_send>
			old_ir_value = ir_value;
		}

		// Apply controller
		float encoder_value = 0xFF * ((float)MOTOR_read_encoder())/((float)MOTOR_max_encoder_value());
     236:	bd d2       	rcall	.+1402   	; 0x7b2 <MOTOR_read_encoder>
     238:	7c 01       	movw	r14, r24
     23a:	a1 d2       	rcall	.+1346   	; 0x77e <MOTOR_max_encoder_value>
     23c:	5c 01       	movw	r10, r24
     23e:	b7 01       	movw	r22, r14
     240:	88 27       	eor	r24, r24
     242:	77 fd       	sbrc	r23, 7
     244:	80 95       	com	r24
     246:	98 2f       	mov	r25, r24
     248:	e0 d5       	rcall	.+3008   	; 0xe0a <__floatsisf>
     24a:	20 e0       	ldi	r18, 0x00	; 0
     24c:	30 e0       	ldi	r19, 0x00	; 0
     24e:	4f e7       	ldi	r20, 0x7F	; 127
     250:	53 e4       	ldi	r21, 0x43	; 67
     252:	8f d6       	rcall	.+3358   	; 0xf72 <__mulsf3>
     254:	6b 01       	movw	r12, r22
     256:	7c 01       	movw	r14, r24
     258:	b5 01       	movw	r22, r10
     25a:	88 27       	eor	r24, r24
     25c:	77 fd       	sbrc	r23, 7
     25e:	80 95       	com	r24
     260:	98 2f       	mov	r25, r24
     262:	d3 d5       	rcall	.+2982   	; 0xe0a <__floatsisf>
     264:	9b 01       	movw	r18, r22
     266:	ac 01       	movw	r20, r24
     268:	c7 01       	movw	r24, r14
     26a:	b6 01       	movw	r22, r12
     26c:	38 d5       	rcall	.+2672   	; 0xcde <__divsf3>
		float vel = CONTROLLER_actuate(encoder_value);
     26e:	22 d0       	rcall	.+68     	; 0x2b4 <CONTROLLER_actuate>
     270:	6b 01       	movw	r12, r22
     272:	7c 01       	movw	r14, r24
		MOTOR_set_dir_right(vel > 0);
     274:	b8 2c       	mov	r11, r8
     276:	20 e0       	ldi	r18, 0x00	; 0
     278:	30 e0       	ldi	r19, 0x00	; 0
     27a:	a9 01       	movw	r20, r18
     27c:	76 d6       	rcall	.+3308   	; 0xf6a <__gesf2>
     27e:	18 16       	cp	r1, r24
     280:	0c f0       	brlt	.+2      	; 0x284 <main+0xbc>
     282:	b7 2c       	mov	r11, r7
     284:	8b 2d       	mov	r24, r11
     286:	87 d2       	rcall	.+1294   	; 0x796 <MOTOR_set_dir_right>
		MOTOR_set_velocity(vel);
     288:	c7 01       	movw	r24, r14
     28a:	b6 01       	movw	r22, r12
     28c:	90 d5       	rcall	.+2848   	; 0xdae <__fixunssfsi>
     28e:	86 2f       	mov	r24, r22
     290:	7b d2       	rcall	.+1270   	; 0x788 <MOTOR_set_velocity>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     292:	8f e3       	ldi	r24, 0x3F	; 63
     294:	9c e9       	ldi	r25, 0x9C	; 156
     296:	01 97       	sbiw	r24, 0x01	; 1
     298:	f1 f7       	brne	.-4      	; 0x296 <main+0xce>
     29a:	00 c0       	rjmp	.+0      	; 0x29c <main+0xd4>
     29c:	00 00       	nop
     29e:	f9 2c       	mov	r15, r9
     2a0:	ac cf       	rjmp	.-168    	; 0x1fa <main+0x32>

000002a2 <CONTROLLER_set_reference>:
float integral = 0.0;

volatile uint16_t* timer_source = &TCNT1;

void CONTROLLER_set_reference(float ref) {
	reference = ref;
     2a2:	60 93 d4 02 	sts	0x02D4, r22
     2a6:	70 93 d5 02 	sts	0x02D5, r23
     2aa:	80 93 d6 02 	sts	0x02D6, r24
     2ae:	90 93 d7 02 	sts	0x02D7, r25
     2b2:	08 95       	ret

000002b4 <CONTROLLER_actuate>:
}

float CONTROLLER_actuate(float y) {
     2b4:	4f 92       	push	r4
     2b6:	5f 92       	push	r5
     2b8:	6f 92       	push	r6
     2ba:	7f 92       	push	r7
     2bc:	8f 92       	push	r8
     2be:	9f 92       	push	r9
     2c0:	af 92       	push	r10
     2c2:	bf 92       	push	r11
     2c4:	cf 92       	push	r12
     2c6:	df 92       	push	r13
     2c8:	ef 92       	push	r14
     2ca:	ff 92       	push	r15
     2cc:	cf 93       	push	r28
     2ce:	df 93       	push	r29
     2d0:	6b 01       	movw	r12, r22
     2d2:	7c 01       	movw	r14, r24
	float dt = ((float)*timer_source)/(F_CPU);
     2d4:	c0 91 06 02 	lds	r28, 0x0206
     2d8:	d0 91 07 02 	lds	r29, 0x0207
     2dc:	68 81       	ld	r22, Y
     2de:	79 81       	ldd	r23, Y+1	; 0x01
     2e0:	80 e0       	ldi	r24, 0x00	; 0
     2e2:	90 e0       	ldi	r25, 0x00	; 0
     2e4:	90 d5       	rcall	.+2848   	; 0xe06 <__floatunsisf>
     2e6:	20 e0       	ldi	r18, 0x00	; 0
     2e8:	34 e2       	ldi	r19, 0x24	; 36
     2ea:	44 e7       	ldi	r20, 0x74	; 116
     2ec:	5b e4       	ldi	r21, 0x4B	; 75
     2ee:	f7 d4       	rcall	.+2542   	; 0xcde <__divsf3>
     2f0:	2b 01       	movw	r4, r22
     2f2:	3c 01       	movw	r6, r24
	*timer_source = 0;
     2f4:	19 82       	std	Y+1, r1	; 0x01
     2f6:	18 82       	st	Y, r1
	
	float err = reference - y;
     2f8:	a7 01       	movw	r20, r14
     2fa:	96 01       	movw	r18, r12
     2fc:	60 91 d4 02 	lds	r22, 0x02D4
     300:	70 91 d5 02 	lds	r23, 0x02D5
     304:	80 91 d6 02 	lds	r24, 0x02D6
     308:	90 91 d7 02 	lds	r25, 0x02D7
     30c:	7f d4       	rcall	.+2302   	; 0xc0c <__subsf3>
     30e:	6b 01       	movw	r12, r22
     310:	7c 01       	movw	r14, r24
	
	integral += err * dt;
     312:	a3 01       	movw	r20, r6
     314:	92 01       	movw	r18, r4
     316:	2d d6       	rcall	.+3162   	; 0xf72 <__mulsf3>
     318:	20 91 cc 02 	lds	r18, 0x02CC
     31c:	30 91 cd 02 	lds	r19, 0x02CD
     320:	40 91 ce 02 	lds	r20, 0x02CE
     324:	50 91 cf 02 	lds	r21, 0x02CF
     328:	72 d4       	rcall	.+2276   	; 0xc0e <__addsf3>
     32a:	4b 01       	movw	r8, r22
     32c:	5c 01       	movw	r10, r24
     32e:	60 93 cc 02 	sts	0x02CC, r22
     332:	70 93 cd 02 	sts	0x02CD, r23
     336:	80 93 ce 02 	sts	0x02CE, r24
     33a:	90 93 cf 02 	sts	0x02CF, r25

	float derivative = (err - prev_err)/dt;
     33e:	20 91 d0 02 	lds	r18, 0x02D0
     342:	30 91 d1 02 	lds	r19, 0x02D1
     346:	40 91 d2 02 	lds	r20, 0x02D2
     34a:	50 91 d3 02 	lds	r21, 0x02D3
     34e:	c7 01       	movw	r24, r14
     350:	b6 01       	movw	r22, r12
     352:	5c d4       	rcall	.+2232   	; 0xc0c <__subsf3>
     354:	a3 01       	movw	r20, r6
     356:	92 01       	movw	r18, r4
     358:	c2 d4       	rcall	.+2436   	; 0xcde <__divsf3>
     35a:	2b 01       	movw	r4, r22
     35c:	3c 01       	movw	r6, r24
	prev_err = err;	
     35e:	c0 92 d0 02 	sts	0x02D0, r12
     362:	d0 92 d1 02 	sts	0x02D1, r13
     366:	e0 92 d2 02 	sts	0x02D2, r14
     36a:	f0 92 d3 02 	sts	0x02D3, r15
	
	return Kp*err + Ki*integral + Kd*derivative;
     36e:	20 e0       	ldi	r18, 0x00	; 0
     370:	30 e0       	ldi	r19, 0x00	; 0
     372:	40 e0       	ldi	r20, 0x00	; 0
     374:	5f e3       	ldi	r21, 0x3F	; 63
     376:	c5 01       	movw	r24, r10
     378:	b4 01       	movw	r22, r8
     37a:	fb d5       	rcall	.+3062   	; 0xf72 <__mulsf3>
     37c:	a7 01       	movw	r20, r14
     37e:	96 01       	movw	r18, r12
     380:	46 d4       	rcall	.+2188   	; 0xc0e <__addsf3>
     382:	6b 01       	movw	r12, r22
     384:	7c 01       	movw	r14, r24
     386:	20 e0       	ldi	r18, 0x00	; 0
     388:	30 e0       	ldi	r19, 0x00	; 0
     38a:	a9 01       	movw	r20, r18
     38c:	c3 01       	movw	r24, r6
     38e:	b2 01       	movw	r22, r4
     390:	f0 d5       	rcall	.+3040   	; 0xf72 <__mulsf3>
     392:	9b 01       	movw	r18, r22
     394:	ac 01       	movw	r20, r24
     396:	c7 01       	movw	r24, r14
     398:	b6 01       	movw	r22, r12
     39a:	39 d4       	rcall	.+2162   	; 0xc0e <__addsf3>
     39c:	df 91       	pop	r29
     39e:	cf 91       	pop	r28
     3a0:	ff 90       	pop	r15
     3a2:	ef 90       	pop	r14
     3a4:	df 90       	pop	r13
     3a6:	cf 90       	pop	r12
     3a8:	bf 90       	pop	r11
     3aa:	af 90       	pop	r10
     3ac:	9f 90       	pop	r9
     3ae:	8f 90       	pop	r8
     3b0:	7f 90       	pop	r7
     3b2:	6f 90       	pop	r6
     3b4:	5f 90       	pop	r5
     3b6:	4f 90       	pop	r4
     3b8:	08 95       	ret

000003ba <ADC_init>:
     3ba:	ea e7       	ldi	r30, 0x7A	; 122
     3bc:	f0 e0       	ldi	r31, 0x00	; 0
     3be:	80 81       	ld	r24, Z
     3c0:	80 68       	ori	r24, 0x80	; 128
     3c2:	80 83       	st	Z, r24
     3c4:	80 81       	ld	r24, Z
     3c6:	87 60       	ori	r24, 0x07	; 7
     3c8:	80 83       	st	Z, r24
     3ca:	08 95       	ret

000003cc <ADC_read>:
     3cc:	8f 71       	andi	r24, 0x1F	; 31
     3ce:	80 66       	ori	r24, 0x60	; 96
     3d0:	80 93 7c 00 	sts	0x007C, r24
     3d4:	ea e7       	ldi	r30, 0x7A	; 122
     3d6:	f0 e0       	ldi	r31, 0x00	; 0
     3d8:	80 81       	ld	r24, Z
     3da:	80 64       	ori	r24, 0x40	; 64
     3dc:	80 83       	st	Z, r24
     3de:	80 81       	ld	r24, Z
     3e0:	86 fd       	sbrc	r24, 6
     3e2:	fd cf       	rjmp	.-6      	; 0x3de <ADC_read+0x12>
     3e4:	80 91 79 00 	lds	r24, 0x0079
     3e8:	08 95       	ret

000003ea <CAN_init>:
     3ea:	ab d1       	rcall	.+854    	; 0x742 <MCP2515_init>
     3ec:	40 e0       	ldi	r20, 0x00	; 0
     3ee:	60 ee       	ldi	r22, 0xE0	; 224
     3f0:	8f e0       	ldi	r24, 0x0F	; 15
     3f2:	8a d1       	rcall	.+788    	; 0x708 <MCP2515_bit_modify>
     3f4:	8e e0       	ldi	r24, 0x0E	; 14
     3f6:	49 d1       	rcall	.+658    	; 0x68a <MCP2515_read_data>
     3f8:	80 7e       	andi	r24, 0xE0	; 224
     3fa:	21 f0       	breq	.+8      	; 0x404 <CAN_init+0x1a>
     3fc:	84 e1       	ldi	r24, 0x14	; 20
     3fe:	92 e0       	ldi	r25, 0x02	; 2
     400:	7c c6       	rjmp	.+3320   	; 0x10fa <puts>
     402:	08 95       	ret
     404:	43 e2       	ldi	r20, 0x23	; 35
     406:	6f ef       	ldi	r22, 0xFF	; 255
     408:	8b e2       	ldi	r24, 0x2B	; 43
     40a:	7e d1       	rcall	.+764    	; 0x708 <MCP2515_bit_modify>
     40c:	e9 e6       	ldi	r30, 0x69	; 105
     40e:	f0 e0       	ldi	r31, 0x00	; 0
     410:	80 81       	ld	r24, Z
     412:	80 62       	ori	r24, 0x20	; 32
     414:	80 83       	st	Z, r24
     416:	ea 9a       	sbi	0x1d, 2	; 29
     418:	78 94       	sei
     41a:	08 95       	ret

0000041c <CAN_message_send>:
     41c:	0f 93       	push	r16
     41e:	1f 93       	push	r17
     420:	cf 93       	push	r28
     422:	df 93       	push	r29
     424:	cd b7       	in	r28, 0x3d	; 61
     426:	de b7       	in	r29, 0x3e	; 62
     428:	dc 01       	movw	r26, r24
     42a:	0d b7       	in	r16, 0x3d	; 61
     42c:	1e b7       	in	r17, 0x3e	; 62
     42e:	12 96       	adiw	r26, 0x02	; 2
     430:	4c 91       	ld	r20, X
     432:	12 97       	sbiw	r26, 0x02	; 2
     434:	50 e0       	ldi	r21, 0x00	; 0
     436:	4b 5f       	subi	r20, 0xFB	; 251
     438:	5f 4f       	sbci	r21, 0xFF	; 255
     43a:	8d b7       	in	r24, 0x3d	; 61
     43c:	9e b7       	in	r25, 0x3e	; 62
     43e:	84 1b       	sub	r24, r20
     440:	95 0b       	sbc	r25, r21
     442:	0f b6       	in	r0, 0x3f	; 63
     444:	f8 94       	cli
     446:	9e bf       	out	0x3e, r25	; 62
     448:	0f be       	out	0x3f, r0	; 63
     44a:	8d bf       	out	0x3d, r24	; 61
     44c:	6d b7       	in	r22, 0x3d	; 61
     44e:	7e b7       	in	r23, 0x3e	; 62
     450:	6f 5f       	subi	r22, 0xFF	; 255
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	8d 91       	ld	r24, X+
     456:	9c 91       	ld	r25, X
     458:	11 97       	sbiw	r26, 0x01	; 1
     45a:	96 95       	lsr	r25
     45c:	87 95       	ror	r24
     45e:	96 95       	lsr	r25
     460:	87 95       	ror	r24
     462:	96 95       	lsr	r25
     464:	87 95       	ror	r24
     466:	ed b7       	in	r30, 0x3d	; 61
     468:	fe b7       	in	r31, 0x3e	; 62
     46a:	81 83       	std	Z+1, r24	; 0x01
     46c:	8c 91       	ld	r24, X
     46e:	82 95       	swap	r24
     470:	88 0f       	add	r24, r24
     472:	80 7e       	andi	r24, 0xE0	; 224
     474:	fb 01       	movw	r30, r22
     476:	81 83       	std	Z+1, r24	; 0x01
     478:	12 82       	std	Z+2, r1	; 0x02
     47a:	13 82       	std	Z+3, r1	; 0x03
     47c:	12 96       	adiw	r26, 0x02	; 2
     47e:	8c 91       	ld	r24, X
     480:	12 97       	sbiw	r26, 0x02	; 2
     482:	84 83       	std	Z+4, r24	; 0x04
     484:	46 30       	cpi	r20, 0x06	; 6
     486:	51 05       	cpc	r21, r1
     488:	5c f0       	brlt	.+22     	; 0x4a0 <CAN_message_send+0x84>
     48a:	13 96       	adiw	r26, 0x03	; 3
     48c:	35 96       	adiw	r30, 0x05	; 5
     48e:	25 e0       	ldi	r18, 0x05	; 5
     490:	30 e0       	ldi	r19, 0x00	; 0
     492:	8d 91       	ld	r24, X+
     494:	81 93       	st	Z+, r24
     496:	2f 5f       	subi	r18, 0xFF	; 255
     498:	3f 4f       	sbci	r19, 0xFF	; 255
     49a:	24 17       	cp	r18, r20
     49c:	35 07       	cpc	r19, r21
     49e:	cc f3       	brlt	.-14     	; 0x492 <CAN_message_send+0x76>
     4a0:	81 e3       	ldi	r24, 0x31	; 49
     4a2:	03 d1       	rcall	.+518    	; 0x6aa <MCP2515_write_data>
     4a4:	81 e0       	ldi	r24, 0x01	; 1
     4a6:	24 d1       	rcall	.+584    	; 0x6f0 <MCP2515_request_to_send>
     4a8:	0f b6       	in	r0, 0x3f	; 63
     4aa:	f8 94       	cli
     4ac:	1e bf       	out	0x3e, r17	; 62
     4ae:	0f be       	out	0x3f, r0	; 63
     4b0:	0d bf       	out	0x3d, r16	; 61
     4b2:	df 91       	pop	r29
     4b4:	cf 91       	pop	r28
     4b6:	1f 91       	pop	r17
     4b8:	0f 91       	pop	r16
     4ba:	08 95       	ret

000004bc <CAN_data_receive>:
     4bc:	8f 92       	push	r8
     4be:	9f 92       	push	r9
     4c0:	af 92       	push	r10
     4c2:	bf 92       	push	r11
     4c4:	cf 92       	push	r12
     4c6:	df 92       	push	r13
     4c8:	ef 92       	push	r14
     4ca:	ff 92       	push	r15
     4cc:	0f 93       	push	r16
     4ce:	1f 93       	push	r17
     4d0:	cf 93       	push	r28
     4d2:	df 93       	push	r29
     4d4:	cd b7       	in	r28, 0x3d	; 61
     4d6:	de b7       	in	r29, 0x3e	; 62
     4d8:	2b 97       	sbiw	r28, 0x0b	; 11
     4da:	0f b6       	in	r0, 0x3f	; 63
     4dc:	f8 94       	cli
     4de:	de bf       	out	0x3e, r29	; 62
     4e0:	0f be       	out	0x3f, r0	; 63
     4e2:	cd bf       	out	0x3d, r28	; 61
     4e4:	7c 01       	movw	r14, r24
     4e6:	80 91 e4 02 	lds	r24, 0x02E4
     4ea:	88 23       	and	r24, r24
     4ec:	b1 f1       	breq	.+108    	; 0x55a <CAN_data_receive+0x9e>
     4ee:	81 e6       	ldi	r24, 0x61	; 97
     4f0:	cc d0       	rcall	.+408    	; 0x68a <MCP2515_read_data>
     4f2:	a8 2e       	mov	r10, r24
     4f4:	82 e6       	ldi	r24, 0x62	; 98
     4f6:	c9 d0       	rcall	.+402    	; 0x68a <MCP2515_read_data>
     4f8:	82 95       	swap	r24
     4fa:	86 95       	lsr	r24
     4fc:	87 70       	andi	r24, 0x07	; 7
     4fe:	b1 2c       	mov	r11, r1
     500:	aa 0c       	add	r10, r10
     502:	bb 1c       	adc	r11, r11
     504:	aa 0c       	add	r10, r10
     506:	bb 1c       	adc	r11, r11
     508:	aa 0c       	add	r10, r10
     50a:	bb 1c       	adc	r11, r11
     50c:	a8 2a       	or	r10, r24
     50e:	85 e6       	ldi	r24, 0x65	; 101
     510:	bc d0       	rcall	.+376    	; 0x68a <MCP2515_read_data>
     512:	8f 70       	andi	r24, 0x0F	; 15
     514:	88 2e       	mov	r8, r24
     516:	99 f0       	breq	.+38     	; 0x53e <CAN_data_receive+0x82>
     518:	8e 01       	movw	r16, r28
     51a:	0c 5f       	subi	r16, 0xFC	; 252
     51c:	1f 4f       	sbci	r17, 0xFF	; 255
     51e:	68 01       	movw	r12, r16
     520:	c8 0e       	add	r12, r24
     522:	d1 1c       	adc	r13, r1
     524:	0f 2e       	mov	r0, r31
     526:	f6 e6       	ldi	r31, 0x66	; 102
     528:	9f 2e       	mov	r9, r31
     52a:	f0 2d       	mov	r31, r0
     52c:	89 2d       	mov	r24, r9
     52e:	ad d0       	rcall	.+346    	; 0x68a <MCP2515_read_data>
     530:	f8 01       	movw	r30, r16
     532:	81 93       	st	Z+, r24
     534:	8f 01       	movw	r16, r30
     536:	93 94       	inc	r9
     538:	ec 15       	cp	r30, r12
     53a:	fd 05       	cpc	r31, r13
     53c:	b9 f7       	brne	.-18     	; 0x52c <CAN_data_receive+0x70>
     53e:	10 92 e4 02 	sts	0x02E4, r1
     542:	ba 82       	std	Y+2, r11	; 0x02
     544:	a9 82       	std	Y+1, r10	; 0x01
     546:	8b 82       	std	Y+3, r8	; 0x03
     548:	8b e0       	ldi	r24, 0x0B	; 11
     54a:	fe 01       	movw	r30, r28
     54c:	31 96       	adiw	r30, 0x01	; 1
     54e:	d7 01       	movw	r26, r14
     550:	01 90       	ld	r0, Z+
     552:	0d 92       	st	X+, r0
     554:	8a 95       	dec	r24
     556:	e1 f7       	brne	.-8      	; 0x550 <CAN_data_receive+0x94>
     558:	08 c0       	rjmp	.+16     	; 0x56a <CAN_data_receive+0xae>
     55a:	8b e0       	ldi	r24, 0x0B	; 11
     55c:	e8 e0       	ldi	r30, 0x08	; 8
     55e:	f2 e0       	ldi	r31, 0x02	; 2
     560:	d7 01       	movw	r26, r14
     562:	01 90       	ld	r0, Z+
     564:	0d 92       	st	X+, r0
     566:	8a 95       	dec	r24
     568:	e1 f7       	brne	.-8      	; 0x562 <CAN_data_receive+0xa6>
     56a:	c7 01       	movw	r24, r14
     56c:	2b 96       	adiw	r28, 0x0b	; 11
     56e:	0f b6       	in	r0, 0x3f	; 63
     570:	f8 94       	cli
     572:	de bf       	out	0x3e, r29	; 62
     574:	0f be       	out	0x3f, r0	; 63
     576:	cd bf       	out	0x3d, r28	; 61
     578:	df 91       	pop	r29
     57a:	cf 91       	pop	r28
     57c:	1f 91       	pop	r17
     57e:	0f 91       	pop	r16
     580:	ff 90       	pop	r15
     582:	ef 90       	pop	r14
     584:	df 90       	pop	r13
     586:	cf 90       	pop	r12
     588:	bf 90       	pop	r11
     58a:	af 90       	pop	r10
     58c:	9f 90       	pop	r9
     58e:	8f 90       	pop	r8
     590:	08 95       	ret

00000592 <CAN_error>:
     592:	cf 93       	push	r28
     594:	8d e2       	ldi	r24, 0x2D	; 45
     596:	79 d0       	rcall	.+242    	; 0x68a <MCP2515_read_data>
     598:	c8 2f       	mov	r28, r24
     59a:	82 ff       	sbrs	r24, 2
     59c:	03 c0       	rjmp	.+6      	; 0x5a4 <CAN_error+0x12>
     59e:	8f e3       	ldi	r24, 0x3F	; 63
     5a0:	92 e0       	ldi	r25, 0x02	; 2
     5a2:	ab d5       	rcall	.+2902   	; 0x10fa <puts>
     5a4:	c1 ff       	sbrs	r28, 1
     5a6:	03 c0       	rjmp	.+6      	; 0x5ae <CAN_error+0x1c>
     5a8:	8d e5       	ldi	r24, 0x5D	; 93
     5aa:	92 e0       	ldi	r25, 0x02	; 2
     5ac:	a6 d5       	rcall	.+2892   	; 0x10fa <puts>
     5ae:	cf 91       	pop	r28
     5b0:	08 95       	ret

000005b2 <CAN_int_vect>:
     5b2:	cf 93       	push	r28
     5b4:	8c e2       	ldi	r24, 0x2C	; 44
     5b6:	69 d0       	rcall	.+210    	; 0x68a <MCP2515_read_data>
     5b8:	c8 2f       	mov	r28, r24
     5ba:	85 fd       	sbrc	r24, 5
     5bc:	ea df       	rcall	.-44     	; 0x592 <CAN_error>
     5be:	c0 ff       	sbrs	r28, 0
     5c0:	03 c0       	rjmp	.+6      	; 0x5c8 <CAN_int_vect+0x16>
     5c2:	81 e0       	ldi	r24, 0x01	; 1
     5c4:	80 93 e4 02 	sts	0x02E4, r24
     5c8:	40 e0       	ldi	r20, 0x00	; 0
     5ca:	6f ef       	ldi	r22, 0xFF	; 255
     5cc:	8c e2       	ldi	r24, 0x2C	; 44
     5ce:	9c d0       	rcall	.+312    	; 0x708 <MCP2515_bit_modify>
     5d0:	cf 91       	pop	r28
     5d2:	08 95       	ret

000005d4 <__vector_3>:
     5d4:	1f 92       	push	r1
     5d6:	0f 92       	push	r0
     5d8:	0f b6       	in	r0, 0x3f	; 63
     5da:	0f 92       	push	r0
     5dc:	11 24       	eor	r1, r1
     5de:	0b b6       	in	r0, 0x3b	; 59
     5e0:	0f 92       	push	r0
     5e2:	2f 93       	push	r18
     5e4:	3f 93       	push	r19
     5e6:	4f 93       	push	r20
     5e8:	5f 93       	push	r21
     5ea:	6f 93       	push	r22
     5ec:	7f 93       	push	r23
     5ee:	8f 93       	push	r24
     5f0:	9f 93       	push	r25
     5f2:	af 93       	push	r26
     5f4:	bf 93       	push	r27
     5f6:	ef 93       	push	r30
     5f8:	ff 93       	push	r31
     5fa:	db df       	rcall	.-74     	; 0x5b2 <CAN_int_vect>
     5fc:	ff 91       	pop	r31
     5fe:	ef 91       	pop	r30
     600:	bf 91       	pop	r27
     602:	af 91       	pop	r26
     604:	9f 91       	pop	r25
     606:	8f 91       	pop	r24
     608:	7f 91       	pop	r23
     60a:	6f 91       	pop	r22
     60c:	5f 91       	pop	r21
     60e:	4f 91       	pop	r20
     610:	3f 91       	pop	r19
     612:	2f 91       	pop	r18
     614:	0f 90       	pop	r0
     616:	0b be       	out	0x3b, r0	; 59
     618:	0f 90       	pop	r0
     61a:	0f be       	out	0x3f, r0	; 63
     61c:	0f 90       	pop	r0
     61e:	1f 90       	pop	r1
     620:	18 95       	reti

00000622 <DAC_init>:
     622:	21 c2       	rjmp	.+1090   	; 0xa66 <TWI_Master_Initialise>
     624:	08 95       	ret

00000626 <DAC_write>:
     626:	cf 93       	push	r28
     628:	df 93       	push	r29
     62a:	00 d0       	rcall	.+0      	; 0x62c <DAC_write+0x6>
     62c:	cd b7       	in	r28, 0x3d	; 61
     62e:	de b7       	in	r29, 0x3e	; 62
     630:	90 e5       	ldi	r25, 0x50	; 80
     632:	99 83       	std	Y+1, r25	; 0x01
     634:	1a 82       	std	Y+2, r1	; 0x02
     636:	8b 83       	std	Y+3, r24	; 0x03
     638:	63 e0       	ldi	r22, 0x03	; 3
     63a:	ce 01       	movw	r24, r28
     63c:	01 96       	adiw	r24, 0x01	; 1
     63e:	1d d2       	rcall	.+1082   	; 0xa7a <TWI_Start_Transceiver_With_Data>
     640:	0f 90       	pop	r0
     642:	0f 90       	pop	r0
     644:	0f 90       	pop	r0
     646:	df 91       	pop	r29
     648:	cf 91       	pop	r28
     64a:	08 95       	ret

0000064c <IR_init>:
     64c:	b6 ce       	rjmp	.-660    	; 0x3ba <ADC_init>
     64e:	08 95       	ret

00000650 <IR_read>:
     650:	80 e0       	ldi	r24, 0x00	; 0
     652:	bc de       	rcall	.-648    	; 0x3cc <ADC_read>
     654:	e9 ed       	ldi	r30, 0xD9	; 217
     656:	f2 e0       	ldi	r31, 0x02	; 2
     658:	20 81       	ld	r18, Z
     65a:	20 93 d8 02 	sts	0x02D8, r18
     65e:	aa ed       	ldi	r26, 0xDA	; 218
     660:	b2 e0       	ldi	r27, 0x02	; 2
     662:	4c 91       	ld	r20, X
     664:	40 83       	st	Z, r20
     666:	eb ed       	ldi	r30, 0xDB	; 219
     668:	f2 e0       	ldi	r31, 0x02	; 2
     66a:	90 81       	ld	r25, Z
     66c:	30 e0       	ldi	r19, 0x00	; 0
     66e:	24 0f       	add	r18, r20
     670:	31 1d       	adc	r19, r1
     672:	29 0f       	add	r18, r25
     674:	31 1d       	adc	r19, r1
     676:	9c 93       	st	X, r25
     678:	80 83       	st	Z, r24
     67a:	28 0f       	add	r18, r24
     67c:	31 1d       	adc	r19, r1
     67e:	81 e0       	ldi	r24, 0x01	; 1
     680:	28 3c       	cpi	r18, 0xC8	; 200
     682:	31 05       	cpc	r19, r1
     684:	08 f0       	brcs	.+2      	; 0x688 <IR_read+0x38>
     686:	80 e0       	ldi	r24, 0x00	; 0
     688:	08 95       	ret

0000068a <MCP2515_read_data>:
	SPI_transcieve(address);
	result = SPI_transcieve(0);
	SPI_SS_high();
	sei();
	return result;
}
     68a:	cf 93       	push	r28
     68c:	c8 2f       	mov	r28, r24
     68e:	f8 94       	cli
     690:	e6 d1       	rcall	.+972    	; 0xa5e <SPI_SS_low>
     692:	83 e0       	ldi	r24, 0x03	; 3
     694:	de d1       	rcall	.+956    	; 0xa52 <SPI_transcieve>
     696:	8c 2f       	mov	r24, r28
     698:	dc d1       	rcall	.+952    	; 0xa52 <SPI_transcieve>
     69a:	80 e0       	ldi	r24, 0x00	; 0
     69c:	da d1       	rcall	.+948    	; 0xa52 <SPI_transcieve>
     69e:	c8 2f       	mov	r28, r24
     6a0:	e0 d1       	rcall	.+960    	; 0xa62 <SPI_SS_high>
     6a2:	78 94       	sei
     6a4:	8c 2f       	mov	r24, r28
     6a6:	cf 91       	pop	r28
     6a8:	08 95       	ret

000006aa <MCP2515_write_data>:
     6aa:	ef 92       	push	r14
     6ac:	ff 92       	push	r15
     6ae:	0f 93       	push	r16
     6b0:	1f 93       	push	r17
     6b2:	cf 93       	push	r28
     6b4:	df 93       	push	r29
     6b6:	c8 2f       	mov	r28, r24
     6b8:	7b 01       	movw	r14, r22
     6ba:	8a 01       	movw	r16, r20
     6bc:	f8 94       	cli
     6be:	cf d1       	rcall	.+926    	; 0xa5e <SPI_SS_low>
     6c0:	82 e0       	ldi	r24, 0x02	; 2
     6c2:	c7 d1       	rcall	.+910    	; 0xa52 <SPI_transcieve>
     6c4:	8c 2f       	mov	r24, r28
     6c6:	c5 d1       	rcall	.+906    	; 0xa52 <SPI_transcieve>
     6c8:	10 16       	cp	r1, r16
     6ca:	11 06       	cpc	r1, r17
     6cc:	44 f4       	brge	.+16     	; 0x6de <MCP2515_write_data+0x34>
     6ce:	e7 01       	movw	r28, r14
     6d0:	0e 0d       	add	r16, r14
     6d2:	1f 1d       	adc	r17, r15
     6d4:	89 91       	ld	r24, Y+
     6d6:	bd d1       	rcall	.+890    	; 0xa52 <SPI_transcieve>
     6d8:	c0 17       	cp	r28, r16
     6da:	d1 07       	cpc	r29, r17
     6dc:	d9 f7       	brne	.-10     	; 0x6d4 <MCP2515_write_data+0x2a>
     6de:	c1 d1       	rcall	.+898    	; 0xa62 <SPI_SS_high>
     6e0:	78 94       	sei
     6e2:	df 91       	pop	r29
     6e4:	cf 91       	pop	r28
     6e6:	1f 91       	pop	r17
     6e8:	0f 91       	pop	r16
     6ea:	ff 90       	pop	r15
     6ec:	ef 90       	pop	r14
     6ee:	08 95       	ret

000006f0 <MCP2515_request_to_send>:
     6f0:	cf 93       	push	r28
     6f2:	c8 2f       	mov	r28, r24
     6f4:	f8 94       	cli
     6f6:	b3 d1       	rcall	.+870    	; 0xa5e <SPI_SS_low>
     6f8:	8c 2f       	mov	r24, r28
     6fa:	87 70       	andi	r24, 0x07	; 7
     6fc:	80 68       	ori	r24, 0x80	; 128
     6fe:	a9 d1       	rcall	.+850    	; 0xa52 <SPI_transcieve>
     700:	b0 d1       	rcall	.+864    	; 0xa62 <SPI_SS_high>
     702:	78 94       	sei
     704:	cf 91       	pop	r28
     706:	08 95       	ret

00000708 <MCP2515_bit_modify>:

void MCP2515_bit_modify(uint8_t address, uint8_t mask, uint8_t data) {
     708:	1f 93       	push	r17
     70a:	cf 93       	push	r28
     70c:	df 93       	push	r29
     70e:	18 2f       	mov	r17, r24
     710:	d6 2f       	mov	r29, r22
     712:	c4 2f       	mov	r28, r20
	cli();
     714:	f8 94       	cli
	SPI_SS_low();
     716:	a3 d1       	rcall	.+838    	; 0xa5e <SPI_SS_low>
	SPI_transcieve(MCP_BITMOD);
     718:	85 e0       	ldi	r24, 0x05	; 5
     71a:	9b d1       	rcall	.+822    	; 0xa52 <SPI_transcieve>
	SPI_transcieve(address);
     71c:	81 2f       	mov	r24, r17
     71e:	99 d1       	rcall	.+818    	; 0xa52 <SPI_transcieve>
	SPI_transcieve(mask);
     720:	8d 2f       	mov	r24, r29
     722:	97 d1       	rcall	.+814    	; 0xa52 <SPI_transcieve>
	SPI_transcieve(data);
     724:	8c 2f       	mov	r24, r28
     726:	95 d1       	rcall	.+810    	; 0xa52 <SPI_transcieve>
	SPI_SS_high();
     728:	9c d1       	rcall	.+824    	; 0xa62 <SPI_SS_high>
	sei();
     72a:	78 94       	sei
}
     72c:	df 91       	pop	r29
     72e:	cf 91       	pop	r28
     730:	1f 91       	pop	r17
     732:	08 95       	ret

00000734 <MCP2515_reset>:

void MCP2515_reset() {
	cli();
     734:	f8 94       	cli
	SPI_SS_low(); // Select CAN controller
     736:	93 d1       	rcall	.+806    	; 0xa5e <SPI_SS_low>
	SPI_transcieve(MCP_RESET);
     738:	80 ec       	ldi	r24, 0xC0	; 192
     73a:	8b d1       	rcall	.+790    	; 0xa52 <SPI_transcieve>
	SPI_SS_high(); // Deselect CAN controller
     73c:	92 d1       	rcall	.+804    	; 0xa62 <SPI_SS_high>
	sei();
     73e:	78 94       	sei
     740:	08 95       	ret

00000742 <MCP2515_init>:
#include <avr/interrupt.h>

#include "MCP2515.h"
#include "spi.h"

uint8_t MCP2515_init(){
     742:	cf 93       	push	r28
     744:	df 93       	push	r29
     746:	1f 92       	push	r1
     748:	cd b7       	in	r28, 0x3d	; 61
     74a:	de b7       	in	r29, 0x3e	; 62
	volatile uint8_t value;
	
	SPI_master_init();
     74c:	7b d1       	rcall	.+758    	; 0xa44 <SPI_master_init>
	
	MCP2515_reset();
     74e:	f2 df       	rcall	.-28     	; 0x734 <MCP2515_reset>
     750:	8f e3       	ldi	r24, 0x3F	; 63
     752:	9c e9       	ldi	r25, 0x9C	; 156
     754:	01 97       	sbiw	r24, 0x01	; 1
     756:	f1 f7       	brne	.-4      	; 0x754 <MCP2515_init+0x12>
     758:	00 c0       	rjmp	.+0      	; 0x75a <MCP2515_init+0x18>
     75a:	00 00       	nop
	_delay_ms(10);
	
	// Self test
	value = MCP2515_read_data(MCP_CANSTAT);
     75c:	8e e0       	ldi	r24, 0x0E	; 14
     75e:	95 df       	rcall	.-214    	; 0x68a <MCP2515_read_data>
     760:	89 83       	std	Y+1, r24	; 0x01
	if ((value & MODE_MASK) != MODE_CONFIG) {
     762:	89 81       	ldd	r24, Y+1	; 0x01
     764:	80 7e       	andi	r24, 0xE0	; 224
     766:	80 38       	cpi	r24, 0x80	; 128
     768:	29 f0       	breq	.+10     	; 0x774 <MCP2515_init+0x32>
		printf("MCP2551 is NOT in configuration mode after reset!\n");
     76a:	86 e7       	ldi	r24, 0x76	; 118
     76c:	92 e0       	ldi	r25, 0x02	; 2
     76e:	c5 d4       	rcall	.+2442   	; 0x10fa <puts>
		return 1;
     770:	81 e0       	ldi	r24, 0x01	; 1
     772:	01 c0       	rjmp	.+2      	; 0x776 <MCP2515_init+0x34>
	}
	return 0;
     774:	80 e0       	ldi	r24, 0x00	; 0
}
     776:	0f 90       	pop	r0
     778:	df 91       	pop	r29
     77a:	cf 91       	pop	r28
     77c:	08 95       	ret

0000077e <MOTOR_max_encoder_value>:
     77e:	80 91 e5 02 	lds	r24, 0x02E5
     782:	90 91 e6 02 	lds	r25, 0x02E6
     786:	08 95       	ret

00000788 <MOTOR_set_velocity>:
     788:	80 37       	cpi	r24, 0x70	; 112
     78a:	10 f4       	brcc	.+4      	; 0x790 <MOTOR_set_velocity+0x8>
     78c:	4c cf       	rjmp	.-360    	; 0x626 <DAC_write>
     78e:	08 95       	ret
     790:	80 e7       	ldi	r24, 0x70	; 112
     792:	49 cf       	rjmp	.-366    	; 0x626 <DAC_write>
     794:	08 95       	ret

00000796 <MOTOR_set_dir_right>:
     796:	88 23       	and	r24, r24
     798:	31 f0       	breq	.+12     	; 0x7a6 <MOTOR_set_dir_right+0x10>
     79a:	e2 e0       	ldi	r30, 0x02	; 2
     79c:	f1 e0       	ldi	r31, 0x01	; 1
     79e:	80 81       	ld	r24, Z
     7a0:	82 60       	ori	r24, 0x02	; 2
     7a2:	80 83       	st	Z, r24
     7a4:	08 95       	ret
     7a6:	e2 e0       	ldi	r30, 0x02	; 2
     7a8:	f1 e0       	ldi	r31, 0x01	; 1
     7aa:	80 81       	ld	r24, Z
     7ac:	8d 7f       	andi	r24, 0xFD	; 253
     7ae:	80 83       	st	Z, r24
     7b0:	08 95       	ret

000007b2 <MOTOR_read_encoder>:
     7b2:	cf 93       	push	r28
     7b4:	df 93       	push	r29
     7b6:	1f 92       	push	r1
     7b8:	1f 92       	push	r1
     7ba:	cd b7       	in	r28, 0x3d	; 61
     7bc:	de b7       	in	r29, 0x3e	; 62
     7be:	1a 82       	std	Y+2, r1	; 0x02
     7c0:	19 82       	std	Y+1, r1	; 0x01
     7c2:	e2 e0       	ldi	r30, 0x02	; 2
     7c4:	f1 e0       	ldi	r31, 0x01	; 1
     7c6:	80 81       	ld	r24, Z
     7c8:	8f 7d       	andi	r24, 0xDF	; 223
     7ca:	80 83       	st	Z, r24
     7cc:	80 81       	ld	r24, Z
     7ce:	88 60       	ori	r24, 0x08	; 8
     7d0:	80 83       	st	Z, r24
     7d2:	2f ef       	ldi	r18, 0xFF	; 255
     7d4:	89 ef       	ldi	r24, 0xF9	; 249
     7d6:	90 e0       	ldi	r25, 0x00	; 0
     7d8:	21 50       	subi	r18, 0x01	; 1
     7da:	80 40       	sbci	r24, 0x00	; 0
     7dc:	90 40       	sbci	r25, 0x00	; 0
     7de:	e1 f7       	brne	.-8      	; 0x7d8 <MOTOR_read_encoder+0x26>
     7e0:	00 c0       	rjmp	.+0      	; 0x7e2 <MOTOR_read_encoder+0x30>
     7e2:	00 00       	nop
     7e4:	20 91 06 01 	lds	r18, 0x0106
     7e8:	89 81       	ldd	r24, Y+1	; 0x01
     7ea:	9a 81       	ldd	r25, Y+2	; 0x02
     7ec:	82 2b       	or	r24, r18
     7ee:	9a 83       	std	Y+2, r25	; 0x02
     7f0:	89 83       	std	Y+1, r24	; 0x01
     7f2:	80 81       	ld	r24, Z
     7f4:	87 7f       	andi	r24, 0xF7	; 247
     7f6:	80 83       	st	Z, r24
     7f8:	2f ef       	ldi	r18, 0xFF	; 255
     7fa:	89 ef       	ldi	r24, 0xF9	; 249
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	21 50       	subi	r18, 0x01	; 1
     800:	80 40       	sbci	r24, 0x00	; 0
     802:	90 40       	sbci	r25, 0x00	; 0
     804:	e1 f7       	brne	.-8      	; 0x7fe <MOTOR_read_encoder+0x4c>
     806:	00 c0       	rjmp	.+0      	; 0x808 <MOTOR_read_encoder+0x56>
     808:	00 00       	nop
     80a:	20 91 06 01 	lds	r18, 0x0106
     80e:	89 81       	ldd	r24, Y+1	; 0x01
     810:	9a 81       	ldd	r25, Y+2	; 0x02
     812:	92 2b       	or	r25, r18
     814:	9a 83       	std	Y+2, r25	; 0x02
     816:	89 83       	std	Y+1, r24	; 0x01
     818:	80 81       	ld	r24, Z
     81a:	80 62       	ori	r24, 0x20	; 32
     81c:	80 83       	st	Z, r24
     81e:	89 81       	ldd	r24, Y+1	; 0x01
     820:	9a 81       	ldd	r25, Y+2	; 0x02
     822:	91 95       	neg	r25
     824:	81 95       	neg	r24
     826:	91 09       	sbc	r25, r1
     828:	0f 90       	pop	r0
     82a:	0f 90       	pop	r0
     82c:	df 91       	pop	r29
     82e:	cf 91       	pop	r28
     830:	08 95       	ret

00000832 <MOTOR_calibrate>:
     832:	80 e0       	ldi	r24, 0x00	; 0
     834:	b0 df       	rcall	.-160    	; 0x796 <MOTOR_set_dir_right>
     836:	80 e7       	ldi	r24, 0x70	; 112
     838:	f6 de       	rcall	.-532    	; 0x626 <DAC_write>
     83a:	2f ef       	ldi	r18, 0xFF	; 255
     83c:	8b e7       	ldi	r24, 0x7B	; 123
     83e:	92 e9       	ldi	r25, 0x92	; 146
     840:	21 50       	subi	r18, 0x01	; 1
     842:	80 40       	sbci	r24, 0x00	; 0
     844:	90 40       	sbci	r25, 0x00	; 0
     846:	e1 f7       	brne	.-8      	; 0x840 <MOTOR_calibrate+0xe>
     848:	00 c0       	rjmp	.+0      	; 0x84a <MOTOR_calibrate+0x18>
     84a:	00 00       	nop
     84c:	80 e0       	ldi	r24, 0x00	; 0
     84e:	eb de       	rcall	.-554    	; 0x626 <DAC_write>
     850:	2f ef       	ldi	r18, 0xFF	; 255
     852:	89 ef       	ldi	r24, 0xF9	; 249
     854:	90 e0       	ldi	r25, 0x00	; 0
     856:	21 50       	subi	r18, 0x01	; 1
     858:	80 40       	sbci	r24, 0x00	; 0
     85a:	90 40       	sbci	r25, 0x00	; 0
     85c:	e1 f7       	brne	.-8      	; 0x856 <MOTOR_calibrate+0x24>
     85e:	00 c0       	rjmp	.+0      	; 0x860 <MOTOR_calibrate+0x2e>
     860:	00 00       	nop
     862:	e2 e0       	ldi	r30, 0x02	; 2
     864:	f1 e0       	ldi	r31, 0x01	; 1
     866:	80 81       	ld	r24, Z
     868:	8f 7b       	andi	r24, 0xBF	; 191
     86a:	80 83       	st	Z, r24
     86c:	2f ef       	ldi	r18, 0xFF	; 255
     86e:	89 ef       	ldi	r24, 0xF9	; 249
     870:	90 e0       	ldi	r25, 0x00	; 0
     872:	21 50       	subi	r18, 0x01	; 1
     874:	80 40       	sbci	r24, 0x00	; 0
     876:	90 40       	sbci	r25, 0x00	; 0
     878:	e1 f7       	brne	.-8      	; 0x872 <MOTOR_calibrate+0x40>
     87a:	00 c0       	rjmp	.+0      	; 0x87c <MOTOR_calibrate+0x4a>
     87c:	00 00       	nop
     87e:	80 81       	ld	r24, Z
     880:	80 64       	ori	r24, 0x40	; 64
     882:	80 83       	st	Z, r24
     884:	96 df       	rcall	.-212    	; 0x7b2 <MOTOR_read_encoder>
     886:	9f 93       	push	r25
     888:	8f 93       	push	r24
     88a:	88 ea       	ldi	r24, 0xA8	; 168
     88c:	92 e0       	ldi	r25, 0x02	; 2
     88e:	9f 93       	push	r25
     890:	8f 93       	push	r24
     892:	22 d4       	rcall	.+2116   	; 0x10d8 <printf>
     894:	81 e0       	ldi	r24, 0x01	; 1
     896:	7f df       	rcall	.-258    	; 0x796 <MOTOR_set_dir_right>
     898:	80 e7       	ldi	r24, 0x70	; 112
     89a:	c5 de       	rcall	.-630    	; 0x626 <DAC_write>
     89c:	2f ef       	ldi	r18, 0xFF	; 255
     89e:	8b e7       	ldi	r24, 0x7B	; 123
     8a0:	92 e9       	ldi	r25, 0x92	; 146
     8a2:	21 50       	subi	r18, 0x01	; 1
     8a4:	80 40       	sbci	r24, 0x00	; 0
     8a6:	90 40       	sbci	r25, 0x00	; 0
     8a8:	e1 f7       	brne	.-8      	; 0x8a2 <MOTOR_calibrate+0x70>
     8aa:	00 c0       	rjmp	.+0      	; 0x8ac <MOTOR_calibrate+0x7a>
     8ac:	00 00       	nop
     8ae:	81 df       	rcall	.-254    	; 0x7b2 <MOTOR_read_encoder>
     8b0:	80 93 e5 02 	sts	0x02E5, r24
     8b4:	90 93 e6 02 	sts	0x02E6, r25
     8b8:	9f 93       	push	r25
     8ba:	8f 93       	push	r24
     8bc:	82 eb       	ldi	r24, 0xB2	; 178
     8be:	92 e0       	ldi	r25, 0x02	; 2
     8c0:	9f 93       	push	r25
     8c2:	8f 93       	push	r24
     8c4:	09 d4       	rcall	.+2066   	; 0x10d8 <printf>
     8c6:	2f ef       	ldi	r18, 0xFF	; 255
     8c8:	83 ed       	ldi	r24, 0xD3	; 211
     8ca:	90 e3       	ldi	r25, 0x30	; 48
     8cc:	21 50       	subi	r18, 0x01	; 1
     8ce:	80 40       	sbci	r24, 0x00	; 0
     8d0:	90 40       	sbci	r25, 0x00	; 0
     8d2:	e1 f7       	brne	.-8      	; 0x8cc <MOTOR_calibrate+0x9a>
     8d4:	00 c0       	rjmp	.+0      	; 0x8d6 <MOTOR_calibrate+0xa4>
     8d6:	00 00       	nop
     8d8:	8d b7       	in	r24, 0x3d	; 61
     8da:	9e b7       	in	r25, 0x3e	; 62
     8dc:	08 96       	adiw	r24, 0x08	; 8
     8de:	0f b6       	in	r0, 0x3f	; 63
     8e0:	f8 94       	cli
     8e2:	9e bf       	out	0x3e, r25	; 62
     8e4:	0f be       	out	0x3f, r0	; 63
     8e6:	8d bf       	out	0x3d, r24	; 61
     8e8:	08 95       	ret

000008ea <MOTOR_init>:
     8ea:	9b de       	rcall	.-714    	; 0x622 <DAC_init>
     8ec:	e1 e0       	ldi	r30, 0x01	; 1
     8ee:	f1 e0       	ldi	r31, 0x01	; 1
     8f0:	80 81       	ld	r24, Z
     8f2:	8a 67       	ori	r24, 0x7A	; 122
     8f4:	80 83       	st	Z, r24
     8f6:	10 92 07 01 	sts	0x0107, r1
     8fa:	e2 e0       	ldi	r30, 0x02	; 2
     8fc:	f1 e0       	ldi	r31, 0x01	; 1
     8fe:	80 81       	ld	r24, Z
     900:	82 61       	ori	r24, 0x12	; 18
     902:	80 83       	st	Z, r24
     904:	80 81       	ld	r24, Z
     906:	8f 7b       	andi	r24, 0xBF	; 191
     908:	80 83       	st	Z, r24
     90a:	2f ef       	ldi	r18, 0xFF	; 255
     90c:	89 ef       	ldi	r24, 0xF9	; 249
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	21 50       	subi	r18, 0x01	; 1
     912:	80 40       	sbci	r24, 0x00	; 0
     914:	90 40       	sbci	r25, 0x00	; 0
     916:	e1 f7       	brne	.-8      	; 0x910 <MOTOR_init+0x26>
     918:	00 c0       	rjmp	.+0      	; 0x91a <MOTOR_init+0x30>
     91a:	00 00       	nop
     91c:	80 81       	ld	r24, Z
     91e:	80 64       	ori	r24, 0x40	; 64
     920:	80 83       	st	Z, r24
     922:	87 cf       	rjmp	.-242    	; 0x832 <MOTOR_calibrate>
     924:	08 95       	ret

00000926 <PWM_set_period>:
     926:	a0 e8       	ldi	r26, 0x80	; 128
     928:	b0 e0       	ldi	r27, 0x00	; 0
     92a:	22 e0       	ldi	r18, 0x02	; 2
     92c:	2c 93       	st	X, r18
     92e:	e1 e8       	ldi	r30, 0x81	; 129
     930:	f0 e0       	ldi	r31, 0x00	; 0
     932:	28 e1       	ldi	r18, 0x18	; 24
     934:	20 83       	st	Z, r18
     936:	2c 91       	ld	r18, X
     938:	20 68       	ori	r18, 0x80	; 128
     93a:	2c 93       	st	X, r18
     93c:	20 81       	ld	r18, Z
     93e:	23 60       	ori	r18, 0x03	; 3
     940:	20 83       	st	Z, r18
     942:	20 e0       	ldi	r18, 0x00	; 0
     944:	30 e0       	ldi	r19, 0x00	; 0
     946:	4a e7       	ldi	r20, 0x7A	; 122
     948:	53 e4       	ldi	r21, 0x43	; 67
     94a:	13 d3       	rcall	.+1574   	; 0xf72 <__mulsf3>
     94c:	30 d2       	rcall	.+1120   	; 0xdae <__fixunssfsi>
     94e:	70 93 87 00 	sts	0x0087, r23
     952:	60 93 86 00 	sts	0x0086, r22
     956:	25 9a       	sbi	0x04, 5	; 4
     958:	08 95       	ret

0000095a <PWM_set_pulse_width>:
     95a:	20 e0       	ldi	r18, 0x00	; 0
     95c:	30 e0       	ldi	r19, 0x00	; 0
     95e:	4a e7       	ldi	r20, 0x7A	; 122
     960:	53 e4       	ldi	r21, 0x43	; 67
     962:	07 d3       	rcall	.+1550   	; 0xf72 <__mulsf3>
     964:	24 d2       	rcall	.+1096   	; 0xdae <__fixunssfsi>
     966:	70 93 89 00 	sts	0x0089, r23
     96a:	60 93 88 00 	sts	0x0088, r22
     96e:	08 95       	ret

00000970 <SERVO_write>:
void SERVO_init() {
	PWM_set_period(20.0f);
	SERVO_write((max + min)/2);
}

void SERVO_write(int8_t value) {
     970:	cf 92       	push	r12
     972:	df 92       	push	r13
     974:	ef 92       	push	r14
     976:	ff 92       	push	r15
	float pulse_width = value/100.0f * 0.5f + (max + min)/2;
     978:	68 2f       	mov	r22, r24
     97a:	77 27       	eor	r23, r23
     97c:	67 fd       	sbrc	r22, 7
     97e:	70 95       	com	r23
     980:	87 2f       	mov	r24, r23
     982:	97 2f       	mov	r25, r23
     984:	42 d2       	rcall	.+1156   	; 0xe0a <__floatsisf>
     986:	20 e0       	ldi	r18, 0x00	; 0
     988:	30 e0       	ldi	r19, 0x00	; 0
     98a:	48 ec       	ldi	r20, 0xC8	; 200
     98c:	52 e4       	ldi	r21, 0x42	; 66
     98e:	a7 d1       	rcall	.+846    	; 0xcde <__divsf3>
     990:	20 e0       	ldi	r18, 0x00	; 0
     992:	30 e0       	ldi	r19, 0x00	; 0
     994:	40 e0       	ldi	r20, 0x00	; 0
     996:	5f e3       	ldi	r21, 0x3F	; 63
     998:	ec d2       	rcall	.+1496   	; 0xf72 <__mulsf3>
     99a:	20 e0       	ldi	r18, 0x00	; 0
     99c:	30 e0       	ldi	r19, 0x00	; 0
     99e:	40 ec       	ldi	r20, 0xC0	; 192
     9a0:	5f e3       	ldi	r21, 0x3F	; 63
     9a2:	35 d1       	rcall	.+618    	; 0xc0e <__addsf3>
     9a4:	6b 01       	movw	r12, r22
     9a6:	7c 01       	movw	r14, r24
	if(pulse_width > max) {
     9a8:	26 e6       	ldi	r18, 0x66	; 102
     9aa:	36 e6       	ldi	r19, 0x66	; 102
     9ac:	46 e0       	ldi	r20, 0x06	; 6
     9ae:	50 e4       	ldi	r21, 0x40	; 64
     9b0:	dc d2       	rcall	.+1464   	; 0xf6a <__gesf2>
     9b2:	18 16       	cp	r1, r24
     9b4:	54 f0       	brlt	.+20     	; 0x9ca <SERVO_write+0x5a>
		pulse_width = max;
	}
	if(pulse_width < min) {
     9b6:	26 e6       	ldi	r18, 0x66	; 102
     9b8:	36 e6       	ldi	r19, 0x66	; 102
     9ba:	46 e6       	ldi	r20, 0x66	; 102
     9bc:	5f e3       	ldi	r21, 0x3F	; 63
     9be:	c7 01       	movw	r24, r14
     9c0:	b6 01       	movw	r22, r12
     9c2:	89 d1       	rcall	.+786    	; 0xcd6 <__cmpsf2>
     9c4:	88 23       	and	r24, r24
     9c6:	5c f0       	brlt	.+22     	; 0x9de <SERVO_write+0x6e>
     9c8:	12 c0       	rjmp	.+36     	; 0x9ee <SERVO_write+0x7e>
}

void SERVO_write(int8_t value) {
	float pulse_width = value/100.0f * 0.5f + (max + min)/2;
	if(pulse_width > max) {
		pulse_width = max;
     9ca:	0f 2e       	mov	r0, r31
     9cc:	f6 e6       	ldi	r31, 0x66	; 102
     9ce:	cf 2e       	mov	r12, r31
     9d0:	dc 2c       	mov	r13, r12
     9d2:	f6 e0       	ldi	r31, 0x06	; 6
     9d4:	ef 2e       	mov	r14, r31
     9d6:	f0 e4       	ldi	r31, 0x40	; 64
     9d8:	ff 2e       	mov	r15, r31
     9da:	f0 2d       	mov	r31, r0
     9dc:	08 c0       	rjmp	.+16     	; 0x9ee <SERVO_write+0x7e>
	}
	if(pulse_width < min) {
		pulse_width = min;
     9de:	0f 2e       	mov	r0, r31
     9e0:	f6 e6       	ldi	r31, 0x66	; 102
     9e2:	cf 2e       	mov	r12, r31
     9e4:	dc 2c       	mov	r13, r12
     9e6:	ec 2c       	mov	r14, r12
     9e8:	ff e3       	ldi	r31, 0x3F	; 63
     9ea:	ff 2e       	mov	r15, r31
     9ec:	f0 2d       	mov	r31, r0
	}
	printf("Pulse width %d\n");
     9ee:	8b eb       	ldi	r24, 0xBB	; 187
     9f0:	92 e0       	ldi	r25, 0x02	; 2
     9f2:	9f 93       	push	r25
     9f4:	8f 93       	push	r24
     9f6:	70 d3       	rcall	.+1760   	; 0x10d8 <printf>
	PWM_set_pulse_width(pulse_width);
     9f8:	c7 01       	movw	r24, r14
     9fa:	b6 01       	movw	r22, r12
     9fc:	ae df       	rcall	.-164    	; 0x95a <PWM_set_pulse_width>
     9fe:	0f 90       	pop	r0
     a00:	0f 90       	pop	r0
     a02:	ff 90       	pop	r15
     a04:	ef 90       	pop	r14
     a06:	df 90       	pop	r13
     a08:	cf 90       	pop	r12
     a0a:	08 95       	ret

00000a0c <SERVO_init>:

const float min = 0.9;
const float max = 2.1;

void SERVO_init() {
	PWM_set_period(20.0f);
     a0c:	60 e0       	ldi	r22, 0x00	; 0
     a0e:	70 e0       	ldi	r23, 0x00	; 0
     a10:	80 ea       	ldi	r24, 0xA0	; 160
     a12:	91 e4       	ldi	r25, 0x41	; 65
     a14:	88 df       	rcall	.-240    	; 0x926 <PWM_set_period>
	SERVO_write((max + min)/2);
     a16:	81 e0       	ldi	r24, 0x01	; 1
     a18:	ab cf       	rjmp	.-170    	; 0x970 <SERVO_write>
     a1a:	08 95       	ret

00000a1c <SOLENOID_init>:
#include <util/delay.h>

#include "solenoid.h"

void SOLENOID_init() {
	SOLENOID_DDR |= (1 << SOLENOID_PIN);
     a1c:	6c 9a       	sbi	0x0d, 4	; 13
     a1e:	08 95       	ret

00000a20 <SOLENOID_shoot>:
}

void SOLENOID_shoot(uint8_t enable) {
	static uint8_t enabled = 0;
	if(enable != enabled) {
     a20:	90 91 dc 02 	lds	r25, 0x02DC
     a24:	89 17       	cp	r24, r25
     a26:	69 f0       	breq	.+26     	; 0xa42 <SOLENOID_shoot+0x22>
		if(enable) {
     a28:	88 23       	and	r24, r24
     a2a:	11 f0       	breq	.+4      	; 0xa30 <SOLENOID_shoot+0x10>
			SOLENOID_PORT &= ~(1 << SOLENOID_PIN);
     a2c:	74 98       	cbi	0x0e, 4	; 14
     a2e:	01 c0       	rjmp	.+2      	; 0xa32 <SOLENOID_shoot+0x12>
		} else {
			SOLENOID_PORT |= (1 << SOLENOID_PIN);
     a30:	74 9a       	sbi	0x0e, 4	; 14
     a32:	ef e3       	ldi	r30, 0x3F	; 63
     a34:	fc e9       	ldi	r31, 0x9C	; 156
     a36:	31 97       	sbiw	r30, 0x01	; 1
     a38:	f1 f7       	brne	.-4      	; 0xa36 <SOLENOID_shoot+0x16>
     a3a:	00 c0       	rjmp	.+0      	; 0xa3c <SOLENOID_shoot+0x1c>
     a3c:	00 00       	nop
		}
		_delay_ms(10);
		enabled = enable;
     a3e:	80 93 dc 02 	sts	0x02DC, r24
     a42:	08 95       	ret

00000a44 <SPI_master_init>:
     a44:	87 e8       	ldi	r24, 0x87	; 135
     a46:	84 b9       	out	0x04, r24	; 4
     a48:	28 9a       	sbi	0x05, 0	; 5
     a4a:	8c b5       	in	r24, 0x2c	; 44
     a4c:	81 65       	ori	r24, 0x51	; 81
     a4e:	8c bd       	out	0x2c, r24	; 44
     a50:	08 95       	ret

00000a52 <SPI_transcieve>:
     a52:	8e bd       	out	0x2e, r24	; 46
     a54:	0d b4       	in	r0, 0x2d	; 45
     a56:	07 fe       	sbrs	r0, 7
     a58:	fd cf       	rjmp	.-6      	; 0xa54 <SPI_transcieve+0x2>
     a5a:	8e b5       	in	r24, 0x2e	; 46
     a5c:	08 95       	ret

00000a5e <SPI_SS_low>:
     a5e:	2f 98       	cbi	0x05, 7	; 5
     a60:	08 95       	ret

00000a62 <SPI_SS_high>:
     a62:	2f 9a       	sbi	0x05, 7	; 5
     a64:	08 95       	ret

00000a66 <TWI_Master_Initialise>:
     a66:	8c e0       	ldi	r24, 0x0C	; 12
     a68:	80 93 b8 00 	sts	0x00B8, r24
     a6c:	8f ef       	ldi	r24, 0xFF	; 255
     a6e:	80 93 bb 00 	sts	0x00BB, r24
     a72:	84 e0       	ldi	r24, 0x04	; 4
     a74:	80 93 bc 00 	sts	0x00BC, r24
     a78:	08 95       	ret

00000a7a <TWI_Start_Transceiver_With_Data>:
     a7a:	ec eb       	ldi	r30, 0xBC	; 188
     a7c:	f0 e0       	ldi	r31, 0x00	; 0
     a7e:	20 81       	ld	r18, Z
     a80:	20 fd       	sbrc	r18, 0
     a82:	fd cf       	rjmp	.-6      	; 0xa7e <TWI_Start_Transceiver_With_Data+0x4>
     a84:	60 93 df 02 	sts	0x02DF, r22
     a88:	fc 01       	movw	r30, r24
     a8a:	20 81       	ld	r18, Z
     a8c:	20 93 e0 02 	sts	0x02E0, r18
     a90:	20 fd       	sbrc	r18, 0
     a92:	0c c0       	rjmp	.+24     	; 0xaac <TWI_Start_Transceiver_With_Data+0x32>
     a94:	62 30       	cpi	r22, 0x02	; 2
     a96:	50 f0       	brcs	.+20     	; 0xaac <TWI_Start_Transceiver_With_Data+0x32>
     a98:	dc 01       	movw	r26, r24
     a9a:	11 96       	adiw	r26, 0x01	; 1
     a9c:	e1 ee       	ldi	r30, 0xE1	; 225
     a9e:	f2 e0       	ldi	r31, 0x02	; 2
     aa0:	81 e0       	ldi	r24, 0x01	; 1
     aa2:	9d 91       	ld	r25, X+
     aa4:	91 93       	st	Z+, r25
     aa6:	8f 5f       	subi	r24, 0xFF	; 255
     aa8:	86 13       	cpse	r24, r22
     aaa:	fb cf       	rjmp	.-10     	; 0xaa2 <TWI_Start_Transceiver_With_Data+0x28>
     aac:	10 92 de 02 	sts	0x02DE, r1
     ab0:	88 ef       	ldi	r24, 0xF8	; 248
     ab2:	80 93 13 02 	sts	0x0213, r24
     ab6:	85 ea       	ldi	r24, 0xA5	; 165
     ab8:	80 93 bc 00 	sts	0x00BC, r24
     abc:	08 95       	ret

00000abe <__vector_39>:
     abe:	1f 92       	push	r1
     ac0:	0f 92       	push	r0
     ac2:	0f b6       	in	r0, 0x3f	; 63
     ac4:	0f 92       	push	r0
     ac6:	11 24       	eor	r1, r1
     ac8:	0b b6       	in	r0, 0x3b	; 59
     aca:	0f 92       	push	r0
     acc:	2f 93       	push	r18
     ace:	3f 93       	push	r19
     ad0:	8f 93       	push	r24
     ad2:	9f 93       	push	r25
     ad4:	af 93       	push	r26
     ad6:	bf 93       	push	r27
     ad8:	ef 93       	push	r30
     ada:	ff 93       	push	r31
     adc:	80 91 b9 00 	lds	r24, 0x00B9
     ae0:	90 e0       	ldi	r25, 0x00	; 0
     ae2:	fc 01       	movw	r30, r24
     ae4:	38 97       	sbiw	r30, 0x08	; 8
     ae6:	e1 35       	cpi	r30, 0x51	; 81
     ae8:	f1 05       	cpc	r31, r1
     aea:	08 f0       	brcs	.+2      	; 0xaee <__vector_39+0x30>
     aec:	55 c0       	rjmp	.+170    	; 0xb98 <__vector_39+0xda>
     aee:	ee 58       	subi	r30, 0x8E	; 142
     af0:	ff 4f       	sbci	r31, 0xFF	; 255
     af2:	a2 c2       	rjmp	.+1348   	; 0x1038 <__tablejump2__>
     af4:	10 92 dd 02 	sts	0x02DD, r1
     af8:	e0 91 dd 02 	lds	r30, 0x02DD
     afc:	80 91 df 02 	lds	r24, 0x02DF
     b00:	e8 17       	cp	r30, r24
     b02:	70 f4       	brcc	.+28     	; 0xb20 <__vector_39+0x62>
     b04:	81 e0       	ldi	r24, 0x01	; 1
     b06:	8e 0f       	add	r24, r30
     b08:	80 93 dd 02 	sts	0x02DD, r24
     b0c:	f0 e0       	ldi	r31, 0x00	; 0
     b0e:	e0 52       	subi	r30, 0x20	; 32
     b10:	fd 4f       	sbci	r31, 0xFD	; 253
     b12:	80 81       	ld	r24, Z
     b14:	80 93 bb 00 	sts	0x00BB, r24
     b18:	85 e8       	ldi	r24, 0x85	; 133
     b1a:	80 93 bc 00 	sts	0x00BC, r24
     b1e:	43 c0       	rjmp	.+134    	; 0xba6 <__vector_39+0xe8>
     b20:	80 91 de 02 	lds	r24, 0x02DE
     b24:	81 60       	ori	r24, 0x01	; 1
     b26:	80 93 de 02 	sts	0x02DE, r24
     b2a:	84 e9       	ldi	r24, 0x94	; 148
     b2c:	80 93 bc 00 	sts	0x00BC, r24
     b30:	3a c0       	rjmp	.+116    	; 0xba6 <__vector_39+0xe8>
     b32:	e0 91 dd 02 	lds	r30, 0x02DD
     b36:	81 e0       	ldi	r24, 0x01	; 1
     b38:	8e 0f       	add	r24, r30
     b3a:	80 93 dd 02 	sts	0x02DD, r24
     b3e:	80 91 bb 00 	lds	r24, 0x00BB
     b42:	f0 e0       	ldi	r31, 0x00	; 0
     b44:	e0 52       	subi	r30, 0x20	; 32
     b46:	fd 4f       	sbci	r31, 0xFD	; 253
     b48:	80 83       	st	Z, r24
     b4a:	20 91 dd 02 	lds	r18, 0x02DD
     b4e:	30 e0       	ldi	r19, 0x00	; 0
     b50:	80 91 df 02 	lds	r24, 0x02DF
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	01 97       	sbiw	r24, 0x01	; 1
     b58:	28 17       	cp	r18, r24
     b5a:	39 07       	cpc	r19, r25
     b5c:	24 f4       	brge	.+8      	; 0xb66 <__vector_39+0xa8>
     b5e:	85 ec       	ldi	r24, 0xC5	; 197
     b60:	80 93 bc 00 	sts	0x00BC, r24
     b64:	20 c0       	rjmp	.+64     	; 0xba6 <__vector_39+0xe8>
     b66:	85 e8       	ldi	r24, 0x85	; 133
     b68:	80 93 bc 00 	sts	0x00BC, r24
     b6c:	1c c0       	rjmp	.+56     	; 0xba6 <__vector_39+0xe8>
     b6e:	80 91 bb 00 	lds	r24, 0x00BB
     b72:	e0 91 dd 02 	lds	r30, 0x02DD
     b76:	f0 e0       	ldi	r31, 0x00	; 0
     b78:	e0 52       	subi	r30, 0x20	; 32
     b7a:	fd 4f       	sbci	r31, 0xFD	; 253
     b7c:	80 83       	st	Z, r24
     b7e:	80 91 de 02 	lds	r24, 0x02DE
     b82:	81 60       	ori	r24, 0x01	; 1
     b84:	80 93 de 02 	sts	0x02DE, r24
     b88:	84 e9       	ldi	r24, 0x94	; 148
     b8a:	80 93 bc 00 	sts	0x00BC, r24
     b8e:	0b c0       	rjmp	.+22     	; 0xba6 <__vector_39+0xe8>
     b90:	85 ea       	ldi	r24, 0xA5	; 165
     b92:	80 93 bc 00 	sts	0x00BC, r24
     b96:	07 c0       	rjmp	.+14     	; 0xba6 <__vector_39+0xe8>
     b98:	80 91 b9 00 	lds	r24, 0x00B9
     b9c:	80 93 13 02 	sts	0x0213, r24
     ba0:	84 e0       	ldi	r24, 0x04	; 4
     ba2:	80 93 bc 00 	sts	0x00BC, r24
     ba6:	ff 91       	pop	r31
     ba8:	ef 91       	pop	r30
     baa:	bf 91       	pop	r27
     bac:	af 91       	pop	r26
     bae:	9f 91       	pop	r25
     bb0:	8f 91       	pop	r24
     bb2:	3f 91       	pop	r19
     bb4:	2f 91       	pop	r18
     bb6:	0f 90       	pop	r0
     bb8:	0b be       	out	0x3b, r0	; 59
     bba:	0f 90       	pop	r0
     bbc:	0f be       	out	0x3f, r0	; 63
     bbe:	0f 90       	pop	r0
     bc0:	1f 90       	pop	r1
     bc2:	18 95       	reti

00000bc4 <UART_transmit>:
     bc4:	e0 ec       	ldi	r30, 0xC0	; 192
     bc6:	f0 e0       	ldi	r31, 0x00	; 0
     bc8:	90 81       	ld	r25, Z
     bca:	95 ff       	sbrs	r25, 5
     bcc:	fd cf       	rjmp	.-6      	; 0xbc8 <UART_transmit+0x4>
     bce:	80 93 c6 00 	sts	0x00C6, r24
     bd2:	80 e0       	ldi	r24, 0x00	; 0
     bd4:	90 e0       	ldi	r25, 0x00	; 0
     bd6:	08 95       	ret

00000bd8 <UART_receive>:
     bd8:	e0 ec       	ldi	r30, 0xC0	; 192
     bda:	f0 e0       	ldi	r31, 0x00	; 0
     bdc:	80 81       	ld	r24, Z
     bde:	88 23       	and	r24, r24
     be0:	ec f7       	brge	.-6      	; 0xbdc <UART_receive+0x4>
     be2:	80 91 c6 00 	lds	r24, 0x00C6
     be6:	08 95       	ret

00000be8 <UART_init>:
     be8:	90 93 c5 00 	sts	0x00C5, r25
     bec:	80 93 c4 00 	sts	0x00C4, r24
     bf0:	88 e1       	ldi	r24, 0x18	; 24
     bf2:	80 93 c1 00 	sts	0x00C1, r24
     bf6:	8e e0       	ldi	r24, 0x0E	; 14
     bf8:	80 93 c2 00 	sts	0x00C2, r24
     bfc:	6c ee       	ldi	r22, 0xEC	; 236
     bfe:	75 e0       	ldi	r23, 0x05	; 5
     c00:	82 ee       	ldi	r24, 0xE2	; 226
     c02:	95 e0       	ldi	r25, 0x05	; 5
     c04:	1f d2       	rcall	.+1086   	; 0x1044 <fdevopen>
     c06:	80 e0       	ldi	r24, 0x00	; 0
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	08 95       	ret

00000c0c <__subsf3>:
     c0c:	50 58       	subi	r21, 0x80	; 128

00000c0e <__addsf3>:
     c0e:	bb 27       	eor	r27, r27
     c10:	aa 27       	eor	r26, r26
     c12:	0e d0       	rcall	.+28     	; 0xc30 <__addsf3x>
     c14:	70 c1       	rjmp	.+736    	; 0xef6 <__fp_round>
     c16:	61 d1       	rcall	.+706    	; 0xeda <__fp_pscA>
     c18:	30 f0       	brcs	.+12     	; 0xc26 <__addsf3+0x18>
     c1a:	66 d1       	rcall	.+716    	; 0xee8 <__fp_pscB>
     c1c:	20 f0       	brcs	.+8      	; 0xc26 <__addsf3+0x18>
     c1e:	31 f4       	brne	.+12     	; 0xc2c <__addsf3+0x1e>
     c20:	9f 3f       	cpi	r25, 0xFF	; 255
     c22:	11 f4       	brne	.+4      	; 0xc28 <__addsf3+0x1a>
     c24:	1e f4       	brtc	.+6      	; 0xc2c <__addsf3+0x1e>
     c26:	56 c1       	rjmp	.+684    	; 0xed4 <__fp_nan>
     c28:	0e f4       	brtc	.+2      	; 0xc2c <__addsf3+0x1e>
     c2a:	e0 95       	com	r30
     c2c:	e7 fb       	bst	r30, 7
     c2e:	4c c1       	rjmp	.+664    	; 0xec8 <__fp_inf>

00000c30 <__addsf3x>:
     c30:	e9 2f       	mov	r30, r25
     c32:	72 d1       	rcall	.+740    	; 0xf18 <__fp_split3>
     c34:	80 f3       	brcs	.-32     	; 0xc16 <__addsf3+0x8>
     c36:	ba 17       	cp	r27, r26
     c38:	62 07       	cpc	r22, r18
     c3a:	73 07       	cpc	r23, r19
     c3c:	84 07       	cpc	r24, r20
     c3e:	95 07       	cpc	r25, r21
     c40:	18 f0       	brcs	.+6      	; 0xc48 <__addsf3x+0x18>
     c42:	71 f4       	brne	.+28     	; 0xc60 <__addsf3x+0x30>
     c44:	9e f5       	brtc	.+102    	; 0xcac <__addsf3x+0x7c>
     c46:	8a c1       	rjmp	.+788    	; 0xf5c <__fp_zero>
     c48:	0e f4       	brtc	.+2      	; 0xc4c <__addsf3x+0x1c>
     c4a:	e0 95       	com	r30
     c4c:	0b 2e       	mov	r0, r27
     c4e:	ba 2f       	mov	r27, r26
     c50:	a0 2d       	mov	r26, r0
     c52:	0b 01       	movw	r0, r22
     c54:	b9 01       	movw	r22, r18
     c56:	90 01       	movw	r18, r0
     c58:	0c 01       	movw	r0, r24
     c5a:	ca 01       	movw	r24, r20
     c5c:	a0 01       	movw	r20, r0
     c5e:	11 24       	eor	r1, r1
     c60:	ff 27       	eor	r31, r31
     c62:	59 1b       	sub	r21, r25
     c64:	99 f0       	breq	.+38     	; 0xc8c <__addsf3x+0x5c>
     c66:	59 3f       	cpi	r21, 0xF9	; 249
     c68:	50 f4       	brcc	.+20     	; 0xc7e <__addsf3x+0x4e>
     c6a:	50 3e       	cpi	r21, 0xE0	; 224
     c6c:	68 f1       	brcs	.+90     	; 0xcc8 <__addsf3x+0x98>
     c6e:	1a 16       	cp	r1, r26
     c70:	f0 40       	sbci	r31, 0x00	; 0
     c72:	a2 2f       	mov	r26, r18
     c74:	23 2f       	mov	r18, r19
     c76:	34 2f       	mov	r19, r20
     c78:	44 27       	eor	r20, r20
     c7a:	58 5f       	subi	r21, 0xF8	; 248
     c7c:	f3 cf       	rjmp	.-26     	; 0xc64 <__addsf3x+0x34>
     c7e:	46 95       	lsr	r20
     c80:	37 95       	ror	r19
     c82:	27 95       	ror	r18
     c84:	a7 95       	ror	r26
     c86:	f0 40       	sbci	r31, 0x00	; 0
     c88:	53 95       	inc	r21
     c8a:	c9 f7       	brne	.-14     	; 0xc7e <__addsf3x+0x4e>
     c8c:	7e f4       	brtc	.+30     	; 0xcac <__addsf3x+0x7c>
     c8e:	1f 16       	cp	r1, r31
     c90:	ba 0b       	sbc	r27, r26
     c92:	62 0b       	sbc	r22, r18
     c94:	73 0b       	sbc	r23, r19
     c96:	84 0b       	sbc	r24, r20
     c98:	ba f0       	brmi	.+46     	; 0xcc8 <__addsf3x+0x98>
     c9a:	91 50       	subi	r25, 0x01	; 1
     c9c:	a1 f0       	breq	.+40     	; 0xcc6 <__addsf3x+0x96>
     c9e:	ff 0f       	add	r31, r31
     ca0:	bb 1f       	adc	r27, r27
     ca2:	66 1f       	adc	r22, r22
     ca4:	77 1f       	adc	r23, r23
     ca6:	88 1f       	adc	r24, r24
     ca8:	c2 f7       	brpl	.-16     	; 0xc9a <__addsf3x+0x6a>
     caa:	0e c0       	rjmp	.+28     	; 0xcc8 <__addsf3x+0x98>
     cac:	ba 0f       	add	r27, r26
     cae:	62 1f       	adc	r22, r18
     cb0:	73 1f       	adc	r23, r19
     cb2:	84 1f       	adc	r24, r20
     cb4:	48 f4       	brcc	.+18     	; 0xcc8 <__addsf3x+0x98>
     cb6:	87 95       	ror	r24
     cb8:	77 95       	ror	r23
     cba:	67 95       	ror	r22
     cbc:	b7 95       	ror	r27
     cbe:	f7 95       	ror	r31
     cc0:	9e 3f       	cpi	r25, 0xFE	; 254
     cc2:	08 f0       	brcs	.+2      	; 0xcc6 <__addsf3x+0x96>
     cc4:	b3 cf       	rjmp	.-154    	; 0xc2c <__addsf3+0x1e>
     cc6:	93 95       	inc	r25
     cc8:	88 0f       	add	r24, r24
     cca:	08 f0       	brcs	.+2      	; 0xcce <__addsf3x+0x9e>
     ccc:	99 27       	eor	r25, r25
     cce:	ee 0f       	add	r30, r30
     cd0:	97 95       	ror	r25
     cd2:	87 95       	ror	r24
     cd4:	08 95       	ret

00000cd6 <__cmpsf2>:
     cd6:	d4 d0       	rcall	.+424    	; 0xe80 <__fp_cmp>
     cd8:	08 f4       	brcc	.+2      	; 0xcdc <__cmpsf2+0x6>
     cda:	81 e0       	ldi	r24, 0x01	; 1
     cdc:	08 95       	ret

00000cde <__divsf3>:
     cde:	0c d0       	rcall	.+24     	; 0xcf8 <__divsf3x>
     ce0:	0a c1       	rjmp	.+532    	; 0xef6 <__fp_round>
     ce2:	02 d1       	rcall	.+516    	; 0xee8 <__fp_pscB>
     ce4:	40 f0       	brcs	.+16     	; 0xcf6 <__divsf3+0x18>
     ce6:	f9 d0       	rcall	.+498    	; 0xeda <__fp_pscA>
     ce8:	30 f0       	brcs	.+12     	; 0xcf6 <__divsf3+0x18>
     cea:	21 f4       	brne	.+8      	; 0xcf4 <__divsf3+0x16>
     cec:	5f 3f       	cpi	r21, 0xFF	; 255
     cee:	19 f0       	breq	.+6      	; 0xcf6 <__divsf3+0x18>
     cf0:	eb c0       	rjmp	.+470    	; 0xec8 <__fp_inf>
     cf2:	51 11       	cpse	r21, r1
     cf4:	34 c1       	rjmp	.+616    	; 0xf5e <__fp_szero>
     cf6:	ee c0       	rjmp	.+476    	; 0xed4 <__fp_nan>

00000cf8 <__divsf3x>:
     cf8:	0f d1       	rcall	.+542    	; 0xf18 <__fp_split3>
     cfa:	98 f3       	brcs	.-26     	; 0xce2 <__divsf3+0x4>

00000cfc <__divsf3_pse>:
     cfc:	99 23       	and	r25, r25
     cfe:	c9 f3       	breq	.-14     	; 0xcf2 <__divsf3+0x14>
     d00:	55 23       	and	r21, r21
     d02:	b1 f3       	breq	.-20     	; 0xcf0 <__divsf3+0x12>
     d04:	95 1b       	sub	r25, r21
     d06:	55 0b       	sbc	r21, r21
     d08:	bb 27       	eor	r27, r27
     d0a:	aa 27       	eor	r26, r26
     d0c:	62 17       	cp	r22, r18
     d0e:	73 07       	cpc	r23, r19
     d10:	84 07       	cpc	r24, r20
     d12:	38 f0       	brcs	.+14     	; 0xd22 <__divsf3_pse+0x26>
     d14:	9f 5f       	subi	r25, 0xFF	; 255
     d16:	5f 4f       	sbci	r21, 0xFF	; 255
     d18:	22 0f       	add	r18, r18
     d1a:	33 1f       	adc	r19, r19
     d1c:	44 1f       	adc	r20, r20
     d1e:	aa 1f       	adc	r26, r26
     d20:	a9 f3       	breq	.-22     	; 0xd0c <__divsf3_pse+0x10>
     d22:	33 d0       	rcall	.+102    	; 0xd8a <__divsf3_pse+0x8e>
     d24:	0e 2e       	mov	r0, r30
     d26:	3a f0       	brmi	.+14     	; 0xd36 <__divsf3_pse+0x3a>
     d28:	e0 e8       	ldi	r30, 0x80	; 128
     d2a:	30 d0       	rcall	.+96     	; 0xd8c <__divsf3_pse+0x90>
     d2c:	91 50       	subi	r25, 0x01	; 1
     d2e:	50 40       	sbci	r21, 0x00	; 0
     d30:	e6 95       	lsr	r30
     d32:	00 1c       	adc	r0, r0
     d34:	ca f7       	brpl	.-14     	; 0xd28 <__divsf3_pse+0x2c>
     d36:	29 d0       	rcall	.+82     	; 0xd8a <__divsf3_pse+0x8e>
     d38:	fe 2f       	mov	r31, r30
     d3a:	27 d0       	rcall	.+78     	; 0xd8a <__divsf3_pse+0x8e>
     d3c:	66 0f       	add	r22, r22
     d3e:	77 1f       	adc	r23, r23
     d40:	88 1f       	adc	r24, r24
     d42:	bb 1f       	adc	r27, r27
     d44:	26 17       	cp	r18, r22
     d46:	37 07       	cpc	r19, r23
     d48:	48 07       	cpc	r20, r24
     d4a:	ab 07       	cpc	r26, r27
     d4c:	b0 e8       	ldi	r27, 0x80	; 128
     d4e:	09 f0       	breq	.+2      	; 0xd52 <__divsf3_pse+0x56>
     d50:	bb 0b       	sbc	r27, r27
     d52:	80 2d       	mov	r24, r0
     d54:	bf 01       	movw	r22, r30
     d56:	ff 27       	eor	r31, r31
     d58:	93 58       	subi	r25, 0x83	; 131
     d5a:	5f 4f       	sbci	r21, 0xFF	; 255
     d5c:	2a f0       	brmi	.+10     	; 0xd68 <__divsf3_pse+0x6c>
     d5e:	9e 3f       	cpi	r25, 0xFE	; 254
     d60:	51 05       	cpc	r21, r1
     d62:	68 f0       	brcs	.+26     	; 0xd7e <__divsf3_pse+0x82>
     d64:	b1 c0       	rjmp	.+354    	; 0xec8 <__fp_inf>
     d66:	fb c0       	rjmp	.+502    	; 0xf5e <__fp_szero>
     d68:	5f 3f       	cpi	r21, 0xFF	; 255
     d6a:	ec f3       	brlt	.-6      	; 0xd66 <__divsf3_pse+0x6a>
     d6c:	98 3e       	cpi	r25, 0xE8	; 232
     d6e:	dc f3       	brlt	.-10     	; 0xd66 <__divsf3_pse+0x6a>
     d70:	86 95       	lsr	r24
     d72:	77 95       	ror	r23
     d74:	67 95       	ror	r22
     d76:	b7 95       	ror	r27
     d78:	f7 95       	ror	r31
     d7a:	9f 5f       	subi	r25, 0xFF	; 255
     d7c:	c9 f7       	brne	.-14     	; 0xd70 <__divsf3_pse+0x74>
     d7e:	88 0f       	add	r24, r24
     d80:	91 1d       	adc	r25, r1
     d82:	96 95       	lsr	r25
     d84:	87 95       	ror	r24
     d86:	97 f9       	bld	r25, 7
     d88:	08 95       	ret
     d8a:	e1 e0       	ldi	r30, 0x01	; 1
     d8c:	66 0f       	add	r22, r22
     d8e:	77 1f       	adc	r23, r23
     d90:	88 1f       	adc	r24, r24
     d92:	bb 1f       	adc	r27, r27
     d94:	62 17       	cp	r22, r18
     d96:	73 07       	cpc	r23, r19
     d98:	84 07       	cpc	r24, r20
     d9a:	ba 07       	cpc	r27, r26
     d9c:	20 f0       	brcs	.+8      	; 0xda6 <__divsf3_pse+0xaa>
     d9e:	62 1b       	sub	r22, r18
     da0:	73 0b       	sbc	r23, r19
     da2:	84 0b       	sbc	r24, r20
     da4:	ba 0b       	sbc	r27, r26
     da6:	ee 1f       	adc	r30, r30
     da8:	88 f7       	brcc	.-30     	; 0xd8c <__divsf3_pse+0x90>
     daa:	e0 95       	com	r30
     dac:	08 95       	ret

00000dae <__fixunssfsi>:
     dae:	bc d0       	rcall	.+376    	; 0xf28 <__fp_splitA>
     db0:	88 f0       	brcs	.+34     	; 0xdd4 <__fixunssfsi+0x26>
     db2:	9f 57       	subi	r25, 0x7F	; 127
     db4:	90 f0       	brcs	.+36     	; 0xdda <__fixunssfsi+0x2c>
     db6:	b9 2f       	mov	r27, r25
     db8:	99 27       	eor	r25, r25
     dba:	b7 51       	subi	r27, 0x17	; 23
     dbc:	a0 f0       	brcs	.+40     	; 0xde6 <__fixunssfsi+0x38>
     dbe:	d1 f0       	breq	.+52     	; 0xdf4 <__fixunssfsi+0x46>
     dc0:	66 0f       	add	r22, r22
     dc2:	77 1f       	adc	r23, r23
     dc4:	88 1f       	adc	r24, r24
     dc6:	99 1f       	adc	r25, r25
     dc8:	1a f0       	brmi	.+6      	; 0xdd0 <__fixunssfsi+0x22>
     dca:	ba 95       	dec	r27
     dcc:	c9 f7       	brne	.-14     	; 0xdc0 <__fixunssfsi+0x12>
     dce:	12 c0       	rjmp	.+36     	; 0xdf4 <__fixunssfsi+0x46>
     dd0:	b1 30       	cpi	r27, 0x01	; 1
     dd2:	81 f0       	breq	.+32     	; 0xdf4 <__fixunssfsi+0x46>
     dd4:	c3 d0       	rcall	.+390    	; 0xf5c <__fp_zero>
     dd6:	b1 e0       	ldi	r27, 0x01	; 1
     dd8:	08 95       	ret
     dda:	c0 c0       	rjmp	.+384    	; 0xf5c <__fp_zero>
     ddc:	67 2f       	mov	r22, r23
     dde:	78 2f       	mov	r23, r24
     de0:	88 27       	eor	r24, r24
     de2:	b8 5f       	subi	r27, 0xF8	; 248
     de4:	39 f0       	breq	.+14     	; 0xdf4 <__fixunssfsi+0x46>
     de6:	b9 3f       	cpi	r27, 0xF9	; 249
     de8:	cc f3       	brlt	.-14     	; 0xddc <__fixunssfsi+0x2e>
     dea:	86 95       	lsr	r24
     dec:	77 95       	ror	r23
     dee:	67 95       	ror	r22
     df0:	b3 95       	inc	r27
     df2:	d9 f7       	brne	.-10     	; 0xdea <__fixunssfsi+0x3c>
     df4:	3e f4       	brtc	.+14     	; 0xe04 <__fixunssfsi+0x56>
     df6:	90 95       	com	r25
     df8:	80 95       	com	r24
     dfa:	70 95       	com	r23
     dfc:	61 95       	neg	r22
     dfe:	7f 4f       	sbci	r23, 0xFF	; 255
     e00:	8f 4f       	sbci	r24, 0xFF	; 255
     e02:	9f 4f       	sbci	r25, 0xFF	; 255
     e04:	08 95       	ret

00000e06 <__floatunsisf>:
     e06:	e8 94       	clt
     e08:	09 c0       	rjmp	.+18     	; 0xe1c <__floatsisf+0x12>

00000e0a <__floatsisf>:
     e0a:	97 fb       	bst	r25, 7
     e0c:	3e f4       	brtc	.+14     	; 0xe1c <__floatsisf+0x12>
     e0e:	90 95       	com	r25
     e10:	80 95       	com	r24
     e12:	70 95       	com	r23
     e14:	61 95       	neg	r22
     e16:	7f 4f       	sbci	r23, 0xFF	; 255
     e18:	8f 4f       	sbci	r24, 0xFF	; 255
     e1a:	9f 4f       	sbci	r25, 0xFF	; 255
     e1c:	99 23       	and	r25, r25
     e1e:	a9 f0       	breq	.+42     	; 0xe4a <__floatsisf+0x40>
     e20:	f9 2f       	mov	r31, r25
     e22:	96 e9       	ldi	r25, 0x96	; 150
     e24:	bb 27       	eor	r27, r27
     e26:	93 95       	inc	r25
     e28:	f6 95       	lsr	r31
     e2a:	87 95       	ror	r24
     e2c:	77 95       	ror	r23
     e2e:	67 95       	ror	r22
     e30:	b7 95       	ror	r27
     e32:	f1 11       	cpse	r31, r1
     e34:	f8 cf       	rjmp	.-16     	; 0xe26 <__floatsisf+0x1c>
     e36:	fa f4       	brpl	.+62     	; 0xe76 <__floatsisf+0x6c>
     e38:	bb 0f       	add	r27, r27
     e3a:	11 f4       	brne	.+4      	; 0xe40 <__floatsisf+0x36>
     e3c:	60 ff       	sbrs	r22, 0
     e3e:	1b c0       	rjmp	.+54     	; 0xe76 <__floatsisf+0x6c>
     e40:	6f 5f       	subi	r22, 0xFF	; 255
     e42:	7f 4f       	sbci	r23, 0xFF	; 255
     e44:	8f 4f       	sbci	r24, 0xFF	; 255
     e46:	9f 4f       	sbci	r25, 0xFF	; 255
     e48:	16 c0       	rjmp	.+44     	; 0xe76 <__floatsisf+0x6c>
     e4a:	88 23       	and	r24, r24
     e4c:	11 f0       	breq	.+4      	; 0xe52 <__floatsisf+0x48>
     e4e:	96 e9       	ldi	r25, 0x96	; 150
     e50:	11 c0       	rjmp	.+34     	; 0xe74 <__floatsisf+0x6a>
     e52:	77 23       	and	r23, r23
     e54:	21 f0       	breq	.+8      	; 0xe5e <__floatsisf+0x54>
     e56:	9e e8       	ldi	r25, 0x8E	; 142
     e58:	87 2f       	mov	r24, r23
     e5a:	76 2f       	mov	r23, r22
     e5c:	05 c0       	rjmp	.+10     	; 0xe68 <__floatsisf+0x5e>
     e5e:	66 23       	and	r22, r22
     e60:	71 f0       	breq	.+28     	; 0xe7e <__floatsisf+0x74>
     e62:	96 e8       	ldi	r25, 0x86	; 134
     e64:	86 2f       	mov	r24, r22
     e66:	70 e0       	ldi	r23, 0x00	; 0
     e68:	60 e0       	ldi	r22, 0x00	; 0
     e6a:	2a f0       	brmi	.+10     	; 0xe76 <__floatsisf+0x6c>
     e6c:	9a 95       	dec	r25
     e6e:	66 0f       	add	r22, r22
     e70:	77 1f       	adc	r23, r23
     e72:	88 1f       	adc	r24, r24
     e74:	da f7       	brpl	.-10     	; 0xe6c <__floatsisf+0x62>
     e76:	88 0f       	add	r24, r24
     e78:	96 95       	lsr	r25
     e7a:	87 95       	ror	r24
     e7c:	97 f9       	bld	r25, 7
     e7e:	08 95       	ret

00000e80 <__fp_cmp>:
     e80:	99 0f       	add	r25, r25
     e82:	00 08       	sbc	r0, r0
     e84:	55 0f       	add	r21, r21
     e86:	aa 0b       	sbc	r26, r26
     e88:	e0 e8       	ldi	r30, 0x80	; 128
     e8a:	fe ef       	ldi	r31, 0xFE	; 254
     e8c:	16 16       	cp	r1, r22
     e8e:	17 06       	cpc	r1, r23
     e90:	e8 07       	cpc	r30, r24
     e92:	f9 07       	cpc	r31, r25
     e94:	c0 f0       	brcs	.+48     	; 0xec6 <__fp_cmp+0x46>
     e96:	12 16       	cp	r1, r18
     e98:	13 06       	cpc	r1, r19
     e9a:	e4 07       	cpc	r30, r20
     e9c:	f5 07       	cpc	r31, r21
     e9e:	98 f0       	brcs	.+38     	; 0xec6 <__fp_cmp+0x46>
     ea0:	62 1b       	sub	r22, r18
     ea2:	73 0b       	sbc	r23, r19
     ea4:	84 0b       	sbc	r24, r20
     ea6:	95 0b       	sbc	r25, r21
     ea8:	39 f4       	brne	.+14     	; 0xeb8 <__fp_cmp+0x38>
     eaa:	0a 26       	eor	r0, r26
     eac:	61 f0       	breq	.+24     	; 0xec6 <__fp_cmp+0x46>
     eae:	23 2b       	or	r18, r19
     eb0:	24 2b       	or	r18, r20
     eb2:	25 2b       	or	r18, r21
     eb4:	21 f4       	brne	.+8      	; 0xebe <__fp_cmp+0x3e>
     eb6:	08 95       	ret
     eb8:	0a 26       	eor	r0, r26
     eba:	09 f4       	brne	.+2      	; 0xebe <__fp_cmp+0x3e>
     ebc:	a1 40       	sbci	r26, 0x01	; 1
     ebe:	a6 95       	lsr	r26
     ec0:	8f ef       	ldi	r24, 0xFF	; 255
     ec2:	81 1d       	adc	r24, r1
     ec4:	81 1d       	adc	r24, r1
     ec6:	08 95       	ret

00000ec8 <__fp_inf>:
     ec8:	97 f9       	bld	r25, 7
     eca:	9f 67       	ori	r25, 0x7F	; 127
     ecc:	80 e8       	ldi	r24, 0x80	; 128
     ece:	70 e0       	ldi	r23, 0x00	; 0
     ed0:	60 e0       	ldi	r22, 0x00	; 0
     ed2:	08 95       	ret

00000ed4 <__fp_nan>:
     ed4:	9f ef       	ldi	r25, 0xFF	; 255
     ed6:	80 ec       	ldi	r24, 0xC0	; 192
     ed8:	08 95       	ret

00000eda <__fp_pscA>:
     eda:	00 24       	eor	r0, r0
     edc:	0a 94       	dec	r0
     ede:	16 16       	cp	r1, r22
     ee0:	17 06       	cpc	r1, r23
     ee2:	18 06       	cpc	r1, r24
     ee4:	09 06       	cpc	r0, r25
     ee6:	08 95       	ret

00000ee8 <__fp_pscB>:
     ee8:	00 24       	eor	r0, r0
     eea:	0a 94       	dec	r0
     eec:	12 16       	cp	r1, r18
     eee:	13 06       	cpc	r1, r19
     ef0:	14 06       	cpc	r1, r20
     ef2:	05 06       	cpc	r0, r21
     ef4:	08 95       	ret

00000ef6 <__fp_round>:
     ef6:	09 2e       	mov	r0, r25
     ef8:	03 94       	inc	r0
     efa:	00 0c       	add	r0, r0
     efc:	11 f4       	brne	.+4      	; 0xf02 <__fp_round+0xc>
     efe:	88 23       	and	r24, r24
     f00:	52 f0       	brmi	.+20     	; 0xf16 <__fp_round+0x20>
     f02:	bb 0f       	add	r27, r27
     f04:	40 f4       	brcc	.+16     	; 0xf16 <__fp_round+0x20>
     f06:	bf 2b       	or	r27, r31
     f08:	11 f4       	brne	.+4      	; 0xf0e <__fp_round+0x18>
     f0a:	60 ff       	sbrs	r22, 0
     f0c:	04 c0       	rjmp	.+8      	; 0xf16 <__fp_round+0x20>
     f0e:	6f 5f       	subi	r22, 0xFF	; 255
     f10:	7f 4f       	sbci	r23, 0xFF	; 255
     f12:	8f 4f       	sbci	r24, 0xFF	; 255
     f14:	9f 4f       	sbci	r25, 0xFF	; 255
     f16:	08 95       	ret

00000f18 <__fp_split3>:
     f18:	57 fd       	sbrc	r21, 7
     f1a:	90 58       	subi	r25, 0x80	; 128
     f1c:	44 0f       	add	r20, r20
     f1e:	55 1f       	adc	r21, r21
     f20:	59 f0       	breq	.+22     	; 0xf38 <__fp_splitA+0x10>
     f22:	5f 3f       	cpi	r21, 0xFF	; 255
     f24:	71 f0       	breq	.+28     	; 0xf42 <__fp_splitA+0x1a>
     f26:	47 95       	ror	r20

00000f28 <__fp_splitA>:
     f28:	88 0f       	add	r24, r24
     f2a:	97 fb       	bst	r25, 7
     f2c:	99 1f       	adc	r25, r25
     f2e:	61 f0       	breq	.+24     	; 0xf48 <__fp_splitA+0x20>
     f30:	9f 3f       	cpi	r25, 0xFF	; 255
     f32:	79 f0       	breq	.+30     	; 0xf52 <__fp_splitA+0x2a>
     f34:	87 95       	ror	r24
     f36:	08 95       	ret
     f38:	12 16       	cp	r1, r18
     f3a:	13 06       	cpc	r1, r19
     f3c:	14 06       	cpc	r1, r20
     f3e:	55 1f       	adc	r21, r21
     f40:	f2 cf       	rjmp	.-28     	; 0xf26 <__fp_split3+0xe>
     f42:	46 95       	lsr	r20
     f44:	f1 df       	rcall	.-30     	; 0xf28 <__fp_splitA>
     f46:	08 c0       	rjmp	.+16     	; 0xf58 <__fp_splitA+0x30>
     f48:	16 16       	cp	r1, r22
     f4a:	17 06       	cpc	r1, r23
     f4c:	18 06       	cpc	r1, r24
     f4e:	99 1f       	adc	r25, r25
     f50:	f1 cf       	rjmp	.-30     	; 0xf34 <__fp_splitA+0xc>
     f52:	86 95       	lsr	r24
     f54:	71 05       	cpc	r23, r1
     f56:	61 05       	cpc	r22, r1
     f58:	08 94       	sec
     f5a:	08 95       	ret

00000f5c <__fp_zero>:
     f5c:	e8 94       	clt

00000f5e <__fp_szero>:
     f5e:	bb 27       	eor	r27, r27
     f60:	66 27       	eor	r22, r22
     f62:	77 27       	eor	r23, r23
     f64:	cb 01       	movw	r24, r22
     f66:	97 f9       	bld	r25, 7
     f68:	08 95       	ret

00000f6a <__gesf2>:
     f6a:	8a df       	rcall	.-236    	; 0xe80 <__fp_cmp>
     f6c:	08 f4       	brcc	.+2      	; 0xf70 <__gesf2+0x6>
     f6e:	8f ef       	ldi	r24, 0xFF	; 255
     f70:	08 95       	ret

00000f72 <__mulsf3>:
     f72:	0b d0       	rcall	.+22     	; 0xf8a <__mulsf3x>
     f74:	c0 cf       	rjmp	.-128    	; 0xef6 <__fp_round>
     f76:	b1 df       	rcall	.-158    	; 0xeda <__fp_pscA>
     f78:	28 f0       	brcs	.+10     	; 0xf84 <__mulsf3+0x12>
     f7a:	b6 df       	rcall	.-148    	; 0xee8 <__fp_pscB>
     f7c:	18 f0       	brcs	.+6      	; 0xf84 <__mulsf3+0x12>
     f7e:	95 23       	and	r25, r21
     f80:	09 f0       	breq	.+2      	; 0xf84 <__mulsf3+0x12>
     f82:	a2 cf       	rjmp	.-188    	; 0xec8 <__fp_inf>
     f84:	a7 cf       	rjmp	.-178    	; 0xed4 <__fp_nan>
     f86:	11 24       	eor	r1, r1
     f88:	ea cf       	rjmp	.-44     	; 0xf5e <__fp_szero>

00000f8a <__mulsf3x>:
     f8a:	c6 df       	rcall	.-116    	; 0xf18 <__fp_split3>
     f8c:	a0 f3       	brcs	.-24     	; 0xf76 <__mulsf3+0x4>

00000f8e <__mulsf3_pse>:
     f8e:	95 9f       	mul	r25, r21
     f90:	d1 f3       	breq	.-12     	; 0xf86 <__mulsf3+0x14>
     f92:	95 0f       	add	r25, r21
     f94:	50 e0       	ldi	r21, 0x00	; 0
     f96:	55 1f       	adc	r21, r21
     f98:	62 9f       	mul	r22, r18
     f9a:	f0 01       	movw	r30, r0
     f9c:	72 9f       	mul	r23, r18
     f9e:	bb 27       	eor	r27, r27
     fa0:	f0 0d       	add	r31, r0
     fa2:	b1 1d       	adc	r27, r1
     fa4:	63 9f       	mul	r22, r19
     fa6:	aa 27       	eor	r26, r26
     fa8:	f0 0d       	add	r31, r0
     faa:	b1 1d       	adc	r27, r1
     fac:	aa 1f       	adc	r26, r26
     fae:	64 9f       	mul	r22, r20
     fb0:	66 27       	eor	r22, r22
     fb2:	b0 0d       	add	r27, r0
     fb4:	a1 1d       	adc	r26, r1
     fb6:	66 1f       	adc	r22, r22
     fb8:	82 9f       	mul	r24, r18
     fba:	22 27       	eor	r18, r18
     fbc:	b0 0d       	add	r27, r0
     fbe:	a1 1d       	adc	r26, r1
     fc0:	62 1f       	adc	r22, r18
     fc2:	73 9f       	mul	r23, r19
     fc4:	b0 0d       	add	r27, r0
     fc6:	a1 1d       	adc	r26, r1
     fc8:	62 1f       	adc	r22, r18
     fca:	83 9f       	mul	r24, r19
     fcc:	a0 0d       	add	r26, r0
     fce:	61 1d       	adc	r22, r1
     fd0:	22 1f       	adc	r18, r18
     fd2:	74 9f       	mul	r23, r20
     fd4:	33 27       	eor	r19, r19
     fd6:	a0 0d       	add	r26, r0
     fd8:	61 1d       	adc	r22, r1
     fda:	23 1f       	adc	r18, r19
     fdc:	84 9f       	mul	r24, r20
     fde:	60 0d       	add	r22, r0
     fe0:	21 1d       	adc	r18, r1
     fe2:	82 2f       	mov	r24, r18
     fe4:	76 2f       	mov	r23, r22
     fe6:	6a 2f       	mov	r22, r26
     fe8:	11 24       	eor	r1, r1
     fea:	9f 57       	subi	r25, 0x7F	; 127
     fec:	50 40       	sbci	r21, 0x00	; 0
     fee:	8a f0       	brmi	.+34     	; 0x1012 <__mulsf3_pse+0x84>
     ff0:	e1 f0       	breq	.+56     	; 0x102a <__mulsf3_pse+0x9c>
     ff2:	88 23       	and	r24, r24
     ff4:	4a f0       	brmi	.+18     	; 0x1008 <__mulsf3_pse+0x7a>
     ff6:	ee 0f       	add	r30, r30
     ff8:	ff 1f       	adc	r31, r31
     ffa:	bb 1f       	adc	r27, r27
     ffc:	66 1f       	adc	r22, r22
     ffe:	77 1f       	adc	r23, r23
    1000:	88 1f       	adc	r24, r24
    1002:	91 50       	subi	r25, 0x01	; 1
    1004:	50 40       	sbci	r21, 0x00	; 0
    1006:	a9 f7       	brne	.-22     	; 0xff2 <__mulsf3_pse+0x64>
    1008:	9e 3f       	cpi	r25, 0xFE	; 254
    100a:	51 05       	cpc	r21, r1
    100c:	70 f0       	brcs	.+28     	; 0x102a <__mulsf3_pse+0x9c>
    100e:	5c cf       	rjmp	.-328    	; 0xec8 <__fp_inf>
    1010:	a6 cf       	rjmp	.-180    	; 0xf5e <__fp_szero>
    1012:	5f 3f       	cpi	r21, 0xFF	; 255
    1014:	ec f3       	brlt	.-6      	; 0x1010 <__mulsf3_pse+0x82>
    1016:	98 3e       	cpi	r25, 0xE8	; 232
    1018:	dc f3       	brlt	.-10     	; 0x1010 <__mulsf3_pse+0x82>
    101a:	86 95       	lsr	r24
    101c:	77 95       	ror	r23
    101e:	67 95       	ror	r22
    1020:	b7 95       	ror	r27
    1022:	f7 95       	ror	r31
    1024:	e7 95       	ror	r30
    1026:	9f 5f       	subi	r25, 0xFF	; 255
    1028:	c1 f7       	brne	.-16     	; 0x101a <__mulsf3_pse+0x8c>
    102a:	fe 2b       	or	r31, r30
    102c:	88 0f       	add	r24, r24
    102e:	91 1d       	adc	r25, r1
    1030:	96 95       	lsr	r25
    1032:	87 95       	ror	r24
    1034:	97 f9       	bld	r25, 7
    1036:	08 95       	ret

00001038 <__tablejump2__>:
    1038:	ee 0f       	add	r30, r30
    103a:	ff 1f       	adc	r31, r31

0000103c <__tablejump__>:
    103c:	05 90       	lpm	r0, Z+
    103e:	f4 91       	lpm	r31, Z
    1040:	e0 2d       	mov	r30, r0
    1042:	19 94       	eijmp

00001044 <fdevopen>:
    1044:	0f 93       	push	r16
    1046:	1f 93       	push	r17
    1048:	cf 93       	push	r28
    104a:	df 93       	push	r29
    104c:	ec 01       	movw	r28, r24
    104e:	8b 01       	movw	r16, r22
    1050:	00 97       	sbiw	r24, 0x00	; 0
    1052:	31 f4       	brne	.+12     	; 0x1060 <fdevopen+0x1c>
    1054:	61 15       	cp	r22, r1
    1056:	71 05       	cpc	r23, r1
    1058:	19 f4       	brne	.+6      	; 0x1060 <fdevopen+0x1c>
    105a:	80 e0       	ldi	r24, 0x00	; 0
    105c:	90 e0       	ldi	r25, 0x00	; 0
    105e:	37 c0       	rjmp	.+110    	; 0x10ce <fdevopen+0x8a>
    1060:	6e e0       	ldi	r22, 0x0E	; 14
    1062:	70 e0       	ldi	r23, 0x00	; 0
    1064:	81 e0       	ldi	r24, 0x01	; 1
    1066:	90 e0       	ldi	r25, 0x00	; 0
    1068:	63 d2       	rcall	.+1222   	; 0x1530 <calloc>
    106a:	fc 01       	movw	r30, r24
    106c:	00 97       	sbiw	r24, 0x00	; 0
    106e:	a9 f3       	breq	.-22     	; 0x105a <fdevopen+0x16>
    1070:	80 e8       	ldi	r24, 0x80	; 128
    1072:	83 83       	std	Z+3, r24	; 0x03
    1074:	01 15       	cp	r16, r1
    1076:	11 05       	cpc	r17, r1
    1078:	71 f0       	breq	.+28     	; 0x1096 <fdevopen+0x52>
    107a:	13 87       	std	Z+11, r17	; 0x0b
    107c:	02 87       	std	Z+10, r16	; 0x0a
    107e:	81 e8       	ldi	r24, 0x81	; 129
    1080:	83 83       	std	Z+3, r24	; 0x03
    1082:	80 91 e7 02 	lds	r24, 0x02E7
    1086:	90 91 e8 02 	lds	r25, 0x02E8
    108a:	89 2b       	or	r24, r25
    108c:	21 f4       	brne	.+8      	; 0x1096 <fdevopen+0x52>
    108e:	f0 93 e8 02 	sts	0x02E8, r31
    1092:	e0 93 e7 02 	sts	0x02E7, r30
    1096:	20 97       	sbiw	r28, 0x00	; 0
    1098:	c9 f0       	breq	.+50     	; 0x10cc <fdevopen+0x88>
    109a:	d1 87       	std	Z+9, r29	; 0x09
    109c:	c0 87       	std	Z+8, r28	; 0x08
    109e:	83 81       	ldd	r24, Z+3	; 0x03
    10a0:	82 60       	ori	r24, 0x02	; 2
    10a2:	83 83       	std	Z+3, r24	; 0x03
    10a4:	80 91 e9 02 	lds	r24, 0x02E9
    10a8:	90 91 ea 02 	lds	r25, 0x02EA
    10ac:	89 2b       	or	r24, r25
    10ae:	71 f4       	brne	.+28     	; 0x10cc <fdevopen+0x88>
    10b0:	f0 93 ea 02 	sts	0x02EA, r31
    10b4:	e0 93 e9 02 	sts	0x02E9, r30
    10b8:	80 91 eb 02 	lds	r24, 0x02EB
    10bc:	90 91 ec 02 	lds	r25, 0x02EC
    10c0:	89 2b       	or	r24, r25
    10c2:	21 f4       	brne	.+8      	; 0x10cc <fdevopen+0x88>
    10c4:	f0 93 ec 02 	sts	0x02EC, r31
    10c8:	e0 93 eb 02 	sts	0x02EB, r30
    10cc:	cf 01       	movw	r24, r30
    10ce:	df 91       	pop	r29
    10d0:	cf 91       	pop	r28
    10d2:	1f 91       	pop	r17
    10d4:	0f 91       	pop	r16
    10d6:	08 95       	ret

000010d8 <printf>:
    10d8:	cf 93       	push	r28
    10da:	df 93       	push	r29
    10dc:	cd b7       	in	r28, 0x3d	; 61
    10de:	de b7       	in	r29, 0x3e	; 62
    10e0:	fe 01       	movw	r30, r28
    10e2:	36 96       	adiw	r30, 0x06	; 6
    10e4:	61 91       	ld	r22, Z+
    10e6:	71 91       	ld	r23, Z+
    10e8:	af 01       	movw	r20, r30
    10ea:	80 91 e9 02 	lds	r24, 0x02E9
    10ee:	90 91 ea 02 	lds	r25, 0x02EA
    10f2:	30 d0       	rcall	.+96     	; 0x1154 <vfprintf>
    10f4:	df 91       	pop	r29
    10f6:	cf 91       	pop	r28
    10f8:	08 95       	ret

000010fa <puts>:
    10fa:	0f 93       	push	r16
    10fc:	1f 93       	push	r17
    10fe:	cf 93       	push	r28
    1100:	df 93       	push	r29
    1102:	e0 91 e9 02 	lds	r30, 0x02E9
    1106:	f0 91 ea 02 	lds	r31, 0x02EA
    110a:	23 81       	ldd	r18, Z+3	; 0x03
    110c:	21 ff       	sbrs	r18, 1
    110e:	1b c0       	rjmp	.+54     	; 0x1146 <puts+0x4c>
    1110:	ec 01       	movw	r28, r24
    1112:	00 e0       	ldi	r16, 0x00	; 0
    1114:	10 e0       	ldi	r17, 0x00	; 0
    1116:	89 91       	ld	r24, Y+
    1118:	60 91 e9 02 	lds	r22, 0x02E9
    111c:	70 91 ea 02 	lds	r23, 0x02EA
    1120:	db 01       	movw	r26, r22
    1122:	18 96       	adiw	r26, 0x08	; 8
    1124:	ed 91       	ld	r30, X+
    1126:	fc 91       	ld	r31, X
    1128:	19 97       	sbiw	r26, 0x09	; 9
    112a:	88 23       	and	r24, r24
    112c:	31 f0       	breq	.+12     	; 0x113a <puts+0x40>
    112e:	19 95       	eicall
    1130:	89 2b       	or	r24, r25
    1132:	89 f3       	breq	.-30     	; 0x1116 <puts+0x1c>
    1134:	0f ef       	ldi	r16, 0xFF	; 255
    1136:	1f ef       	ldi	r17, 0xFF	; 255
    1138:	ee cf       	rjmp	.-36     	; 0x1116 <puts+0x1c>
    113a:	8a e0       	ldi	r24, 0x0A	; 10
    113c:	19 95       	eicall
    113e:	89 2b       	or	r24, r25
    1140:	11 f4       	brne	.+4      	; 0x1146 <puts+0x4c>
    1142:	c8 01       	movw	r24, r16
    1144:	02 c0       	rjmp	.+4      	; 0x114a <puts+0x50>
    1146:	8f ef       	ldi	r24, 0xFF	; 255
    1148:	9f ef       	ldi	r25, 0xFF	; 255
    114a:	df 91       	pop	r29
    114c:	cf 91       	pop	r28
    114e:	1f 91       	pop	r17
    1150:	0f 91       	pop	r16
    1152:	08 95       	ret

00001154 <vfprintf>:
    1154:	2f 92       	push	r2
    1156:	3f 92       	push	r3
    1158:	4f 92       	push	r4
    115a:	5f 92       	push	r5
    115c:	6f 92       	push	r6
    115e:	7f 92       	push	r7
    1160:	8f 92       	push	r8
    1162:	9f 92       	push	r9
    1164:	af 92       	push	r10
    1166:	bf 92       	push	r11
    1168:	cf 92       	push	r12
    116a:	df 92       	push	r13
    116c:	ef 92       	push	r14
    116e:	ff 92       	push	r15
    1170:	0f 93       	push	r16
    1172:	1f 93       	push	r17
    1174:	cf 93       	push	r28
    1176:	df 93       	push	r29
    1178:	cd b7       	in	r28, 0x3d	; 61
    117a:	de b7       	in	r29, 0x3e	; 62
    117c:	2c 97       	sbiw	r28, 0x0c	; 12
    117e:	0f b6       	in	r0, 0x3f	; 63
    1180:	f8 94       	cli
    1182:	de bf       	out	0x3e, r29	; 62
    1184:	0f be       	out	0x3f, r0	; 63
    1186:	cd bf       	out	0x3d, r28	; 61
    1188:	7c 01       	movw	r14, r24
    118a:	6b 01       	movw	r12, r22
    118c:	8a 01       	movw	r16, r20
    118e:	fc 01       	movw	r30, r24
    1190:	17 82       	std	Z+7, r1	; 0x07
    1192:	16 82       	std	Z+6, r1	; 0x06
    1194:	83 81       	ldd	r24, Z+3	; 0x03
    1196:	81 ff       	sbrs	r24, 1
    1198:	b0 c1       	rjmp	.+864    	; 0x14fa <vfprintf+0x3a6>
    119a:	ce 01       	movw	r24, r28
    119c:	01 96       	adiw	r24, 0x01	; 1
    119e:	4c 01       	movw	r8, r24
    11a0:	f7 01       	movw	r30, r14
    11a2:	93 81       	ldd	r25, Z+3	; 0x03
    11a4:	f6 01       	movw	r30, r12
    11a6:	93 fd       	sbrc	r25, 3
    11a8:	85 91       	lpm	r24, Z+
    11aa:	93 ff       	sbrs	r25, 3
    11ac:	81 91       	ld	r24, Z+
    11ae:	6f 01       	movw	r12, r30
    11b0:	88 23       	and	r24, r24
    11b2:	09 f4       	brne	.+2      	; 0x11b6 <vfprintf+0x62>
    11b4:	9e c1       	rjmp	.+828    	; 0x14f2 <vfprintf+0x39e>
    11b6:	85 32       	cpi	r24, 0x25	; 37
    11b8:	39 f4       	brne	.+14     	; 0x11c8 <vfprintf+0x74>
    11ba:	93 fd       	sbrc	r25, 3
    11bc:	85 91       	lpm	r24, Z+
    11be:	93 ff       	sbrs	r25, 3
    11c0:	81 91       	ld	r24, Z+
    11c2:	6f 01       	movw	r12, r30
    11c4:	85 32       	cpi	r24, 0x25	; 37
    11c6:	21 f4       	brne	.+8      	; 0x11d0 <vfprintf+0x7c>
    11c8:	b7 01       	movw	r22, r14
    11ca:	90 e0       	ldi	r25, 0x00	; 0
    11cc:	0f d3       	rcall	.+1566   	; 0x17ec <fputc>
    11ce:	e8 cf       	rjmp	.-48     	; 0x11a0 <vfprintf+0x4c>
    11d0:	51 2c       	mov	r5, r1
    11d2:	31 2c       	mov	r3, r1
    11d4:	20 e0       	ldi	r18, 0x00	; 0
    11d6:	20 32       	cpi	r18, 0x20	; 32
    11d8:	a0 f4       	brcc	.+40     	; 0x1202 <vfprintf+0xae>
    11da:	8b 32       	cpi	r24, 0x2B	; 43
    11dc:	69 f0       	breq	.+26     	; 0x11f8 <vfprintf+0xa4>
    11de:	30 f4       	brcc	.+12     	; 0x11ec <vfprintf+0x98>
    11e0:	80 32       	cpi	r24, 0x20	; 32
    11e2:	59 f0       	breq	.+22     	; 0x11fa <vfprintf+0xa6>
    11e4:	83 32       	cpi	r24, 0x23	; 35
    11e6:	69 f4       	brne	.+26     	; 0x1202 <vfprintf+0xae>
    11e8:	20 61       	ori	r18, 0x10	; 16
    11ea:	2c c0       	rjmp	.+88     	; 0x1244 <vfprintf+0xf0>
    11ec:	8d 32       	cpi	r24, 0x2D	; 45
    11ee:	39 f0       	breq	.+14     	; 0x11fe <vfprintf+0xaa>
    11f0:	80 33       	cpi	r24, 0x30	; 48
    11f2:	39 f4       	brne	.+14     	; 0x1202 <vfprintf+0xae>
    11f4:	21 60       	ori	r18, 0x01	; 1
    11f6:	26 c0       	rjmp	.+76     	; 0x1244 <vfprintf+0xf0>
    11f8:	22 60       	ori	r18, 0x02	; 2
    11fa:	24 60       	ori	r18, 0x04	; 4
    11fc:	23 c0       	rjmp	.+70     	; 0x1244 <vfprintf+0xf0>
    11fe:	28 60       	ori	r18, 0x08	; 8
    1200:	21 c0       	rjmp	.+66     	; 0x1244 <vfprintf+0xf0>
    1202:	27 fd       	sbrc	r18, 7
    1204:	27 c0       	rjmp	.+78     	; 0x1254 <vfprintf+0x100>
    1206:	30 ed       	ldi	r19, 0xD0	; 208
    1208:	38 0f       	add	r19, r24
    120a:	3a 30       	cpi	r19, 0x0A	; 10
    120c:	78 f4       	brcc	.+30     	; 0x122c <vfprintf+0xd8>
    120e:	26 ff       	sbrs	r18, 6
    1210:	06 c0       	rjmp	.+12     	; 0x121e <vfprintf+0xca>
    1212:	fa e0       	ldi	r31, 0x0A	; 10
    1214:	5f 9e       	mul	r5, r31
    1216:	30 0d       	add	r19, r0
    1218:	11 24       	eor	r1, r1
    121a:	53 2e       	mov	r5, r19
    121c:	13 c0       	rjmp	.+38     	; 0x1244 <vfprintf+0xf0>
    121e:	8a e0       	ldi	r24, 0x0A	; 10
    1220:	38 9e       	mul	r3, r24
    1222:	30 0d       	add	r19, r0
    1224:	11 24       	eor	r1, r1
    1226:	33 2e       	mov	r3, r19
    1228:	20 62       	ori	r18, 0x20	; 32
    122a:	0c c0       	rjmp	.+24     	; 0x1244 <vfprintf+0xf0>
    122c:	8e 32       	cpi	r24, 0x2E	; 46
    122e:	21 f4       	brne	.+8      	; 0x1238 <vfprintf+0xe4>
    1230:	26 fd       	sbrc	r18, 6
    1232:	5f c1       	rjmp	.+702    	; 0x14f2 <vfprintf+0x39e>
    1234:	20 64       	ori	r18, 0x40	; 64
    1236:	06 c0       	rjmp	.+12     	; 0x1244 <vfprintf+0xf0>
    1238:	8c 36       	cpi	r24, 0x6C	; 108
    123a:	11 f4       	brne	.+4      	; 0x1240 <vfprintf+0xec>
    123c:	20 68       	ori	r18, 0x80	; 128
    123e:	02 c0       	rjmp	.+4      	; 0x1244 <vfprintf+0xf0>
    1240:	88 36       	cpi	r24, 0x68	; 104
    1242:	41 f4       	brne	.+16     	; 0x1254 <vfprintf+0x100>
    1244:	f6 01       	movw	r30, r12
    1246:	93 fd       	sbrc	r25, 3
    1248:	85 91       	lpm	r24, Z+
    124a:	93 ff       	sbrs	r25, 3
    124c:	81 91       	ld	r24, Z+
    124e:	6f 01       	movw	r12, r30
    1250:	81 11       	cpse	r24, r1
    1252:	c1 cf       	rjmp	.-126    	; 0x11d6 <vfprintf+0x82>
    1254:	98 2f       	mov	r25, r24
    1256:	9f 7d       	andi	r25, 0xDF	; 223
    1258:	95 54       	subi	r25, 0x45	; 69
    125a:	93 30       	cpi	r25, 0x03	; 3
    125c:	28 f4       	brcc	.+10     	; 0x1268 <vfprintf+0x114>
    125e:	0c 5f       	subi	r16, 0xFC	; 252
    1260:	1f 4f       	sbci	r17, 0xFF	; 255
    1262:	ff e3       	ldi	r31, 0x3F	; 63
    1264:	f9 83       	std	Y+1, r31	; 0x01
    1266:	0d c0       	rjmp	.+26     	; 0x1282 <vfprintf+0x12e>
    1268:	83 36       	cpi	r24, 0x63	; 99
    126a:	31 f0       	breq	.+12     	; 0x1278 <vfprintf+0x124>
    126c:	83 37       	cpi	r24, 0x73	; 115
    126e:	71 f0       	breq	.+28     	; 0x128c <vfprintf+0x138>
    1270:	83 35       	cpi	r24, 0x53	; 83
    1272:	09 f0       	breq	.+2      	; 0x1276 <vfprintf+0x122>
    1274:	57 c0       	rjmp	.+174    	; 0x1324 <vfprintf+0x1d0>
    1276:	21 c0       	rjmp	.+66     	; 0x12ba <vfprintf+0x166>
    1278:	f8 01       	movw	r30, r16
    127a:	80 81       	ld	r24, Z
    127c:	89 83       	std	Y+1, r24	; 0x01
    127e:	0e 5f       	subi	r16, 0xFE	; 254
    1280:	1f 4f       	sbci	r17, 0xFF	; 255
    1282:	44 24       	eor	r4, r4
    1284:	43 94       	inc	r4
    1286:	51 2c       	mov	r5, r1
    1288:	54 01       	movw	r10, r8
    128a:	14 c0       	rjmp	.+40     	; 0x12b4 <vfprintf+0x160>
    128c:	38 01       	movw	r6, r16
    128e:	f2 e0       	ldi	r31, 0x02	; 2
    1290:	6f 0e       	add	r6, r31
    1292:	71 1c       	adc	r7, r1
    1294:	f8 01       	movw	r30, r16
    1296:	a0 80       	ld	r10, Z
    1298:	b1 80       	ldd	r11, Z+1	; 0x01
    129a:	26 ff       	sbrs	r18, 6
    129c:	03 c0       	rjmp	.+6      	; 0x12a4 <vfprintf+0x150>
    129e:	65 2d       	mov	r22, r5
    12a0:	70 e0       	ldi	r23, 0x00	; 0
    12a2:	02 c0       	rjmp	.+4      	; 0x12a8 <vfprintf+0x154>
    12a4:	6f ef       	ldi	r22, 0xFF	; 255
    12a6:	7f ef       	ldi	r23, 0xFF	; 255
    12a8:	c5 01       	movw	r24, r10
    12aa:	2c 87       	std	Y+12, r18	; 0x0c
    12ac:	94 d2       	rcall	.+1320   	; 0x17d6 <strnlen>
    12ae:	2c 01       	movw	r4, r24
    12b0:	83 01       	movw	r16, r6
    12b2:	2c 85       	ldd	r18, Y+12	; 0x0c
    12b4:	2f 77       	andi	r18, 0x7F	; 127
    12b6:	22 2e       	mov	r2, r18
    12b8:	16 c0       	rjmp	.+44     	; 0x12e6 <vfprintf+0x192>
    12ba:	38 01       	movw	r6, r16
    12bc:	f2 e0       	ldi	r31, 0x02	; 2
    12be:	6f 0e       	add	r6, r31
    12c0:	71 1c       	adc	r7, r1
    12c2:	f8 01       	movw	r30, r16
    12c4:	a0 80       	ld	r10, Z
    12c6:	b1 80       	ldd	r11, Z+1	; 0x01
    12c8:	26 ff       	sbrs	r18, 6
    12ca:	03 c0       	rjmp	.+6      	; 0x12d2 <vfprintf+0x17e>
    12cc:	65 2d       	mov	r22, r5
    12ce:	70 e0       	ldi	r23, 0x00	; 0
    12d0:	02 c0       	rjmp	.+4      	; 0x12d6 <vfprintf+0x182>
    12d2:	6f ef       	ldi	r22, 0xFF	; 255
    12d4:	7f ef       	ldi	r23, 0xFF	; 255
    12d6:	c5 01       	movw	r24, r10
    12d8:	2c 87       	std	Y+12, r18	; 0x0c
    12da:	6b d2       	rcall	.+1238   	; 0x17b2 <strnlen_P>
    12dc:	2c 01       	movw	r4, r24
    12de:	2c 85       	ldd	r18, Y+12	; 0x0c
    12e0:	20 68       	ori	r18, 0x80	; 128
    12e2:	22 2e       	mov	r2, r18
    12e4:	83 01       	movw	r16, r6
    12e6:	23 fc       	sbrc	r2, 3
    12e8:	19 c0       	rjmp	.+50     	; 0x131c <vfprintf+0x1c8>
    12ea:	83 2d       	mov	r24, r3
    12ec:	90 e0       	ldi	r25, 0x00	; 0
    12ee:	48 16       	cp	r4, r24
    12f0:	59 06       	cpc	r5, r25
    12f2:	a0 f4       	brcc	.+40     	; 0x131c <vfprintf+0x1c8>
    12f4:	b7 01       	movw	r22, r14
    12f6:	80 e2       	ldi	r24, 0x20	; 32
    12f8:	90 e0       	ldi	r25, 0x00	; 0
    12fa:	78 d2       	rcall	.+1264   	; 0x17ec <fputc>
    12fc:	3a 94       	dec	r3
    12fe:	f5 cf       	rjmp	.-22     	; 0x12ea <vfprintf+0x196>
    1300:	f5 01       	movw	r30, r10
    1302:	27 fc       	sbrc	r2, 7
    1304:	85 91       	lpm	r24, Z+
    1306:	27 fe       	sbrs	r2, 7
    1308:	81 91       	ld	r24, Z+
    130a:	5f 01       	movw	r10, r30
    130c:	b7 01       	movw	r22, r14
    130e:	90 e0       	ldi	r25, 0x00	; 0
    1310:	6d d2       	rcall	.+1242   	; 0x17ec <fputc>
    1312:	31 10       	cpse	r3, r1
    1314:	3a 94       	dec	r3
    1316:	f1 e0       	ldi	r31, 0x01	; 1
    1318:	4f 1a       	sub	r4, r31
    131a:	51 08       	sbc	r5, r1
    131c:	41 14       	cp	r4, r1
    131e:	51 04       	cpc	r5, r1
    1320:	79 f7       	brne	.-34     	; 0x1300 <vfprintf+0x1ac>
    1322:	de c0       	rjmp	.+444    	; 0x14e0 <vfprintf+0x38c>
    1324:	84 36       	cpi	r24, 0x64	; 100
    1326:	11 f0       	breq	.+4      	; 0x132c <vfprintf+0x1d8>
    1328:	89 36       	cpi	r24, 0x69	; 105
    132a:	31 f5       	brne	.+76     	; 0x1378 <vfprintf+0x224>
    132c:	f8 01       	movw	r30, r16
    132e:	27 ff       	sbrs	r18, 7
    1330:	07 c0       	rjmp	.+14     	; 0x1340 <vfprintf+0x1ec>
    1332:	60 81       	ld	r22, Z
    1334:	71 81       	ldd	r23, Z+1	; 0x01
    1336:	82 81       	ldd	r24, Z+2	; 0x02
    1338:	93 81       	ldd	r25, Z+3	; 0x03
    133a:	0c 5f       	subi	r16, 0xFC	; 252
    133c:	1f 4f       	sbci	r17, 0xFF	; 255
    133e:	08 c0       	rjmp	.+16     	; 0x1350 <vfprintf+0x1fc>
    1340:	60 81       	ld	r22, Z
    1342:	71 81       	ldd	r23, Z+1	; 0x01
    1344:	88 27       	eor	r24, r24
    1346:	77 fd       	sbrc	r23, 7
    1348:	80 95       	com	r24
    134a:	98 2f       	mov	r25, r24
    134c:	0e 5f       	subi	r16, 0xFE	; 254
    134e:	1f 4f       	sbci	r17, 0xFF	; 255
    1350:	2f 76       	andi	r18, 0x6F	; 111
    1352:	b2 2e       	mov	r11, r18
    1354:	97 ff       	sbrs	r25, 7
    1356:	09 c0       	rjmp	.+18     	; 0x136a <vfprintf+0x216>
    1358:	90 95       	com	r25
    135a:	80 95       	com	r24
    135c:	70 95       	com	r23
    135e:	61 95       	neg	r22
    1360:	7f 4f       	sbci	r23, 0xFF	; 255
    1362:	8f 4f       	sbci	r24, 0xFF	; 255
    1364:	9f 4f       	sbci	r25, 0xFF	; 255
    1366:	20 68       	ori	r18, 0x80	; 128
    1368:	b2 2e       	mov	r11, r18
    136a:	2a e0       	ldi	r18, 0x0A	; 10
    136c:	30 e0       	ldi	r19, 0x00	; 0
    136e:	a4 01       	movw	r20, r8
    1370:	6f d2       	rcall	.+1246   	; 0x1850 <__ultoa_invert>
    1372:	a8 2e       	mov	r10, r24
    1374:	a8 18       	sub	r10, r8
    1376:	43 c0       	rjmp	.+134    	; 0x13fe <vfprintf+0x2aa>
    1378:	85 37       	cpi	r24, 0x75	; 117
    137a:	29 f4       	brne	.+10     	; 0x1386 <vfprintf+0x232>
    137c:	2f 7e       	andi	r18, 0xEF	; 239
    137e:	b2 2e       	mov	r11, r18
    1380:	2a e0       	ldi	r18, 0x0A	; 10
    1382:	30 e0       	ldi	r19, 0x00	; 0
    1384:	25 c0       	rjmp	.+74     	; 0x13d0 <vfprintf+0x27c>
    1386:	f2 2f       	mov	r31, r18
    1388:	f9 7f       	andi	r31, 0xF9	; 249
    138a:	bf 2e       	mov	r11, r31
    138c:	8f 36       	cpi	r24, 0x6F	; 111
    138e:	c1 f0       	breq	.+48     	; 0x13c0 <vfprintf+0x26c>
    1390:	18 f4       	brcc	.+6      	; 0x1398 <vfprintf+0x244>
    1392:	88 35       	cpi	r24, 0x58	; 88
    1394:	79 f0       	breq	.+30     	; 0x13b4 <vfprintf+0x260>
    1396:	ad c0       	rjmp	.+346    	; 0x14f2 <vfprintf+0x39e>
    1398:	80 37       	cpi	r24, 0x70	; 112
    139a:	19 f0       	breq	.+6      	; 0x13a2 <vfprintf+0x24e>
    139c:	88 37       	cpi	r24, 0x78	; 120
    139e:	21 f0       	breq	.+8      	; 0x13a8 <vfprintf+0x254>
    13a0:	a8 c0       	rjmp	.+336    	; 0x14f2 <vfprintf+0x39e>
    13a2:	2f 2f       	mov	r18, r31
    13a4:	20 61       	ori	r18, 0x10	; 16
    13a6:	b2 2e       	mov	r11, r18
    13a8:	b4 fe       	sbrs	r11, 4
    13aa:	0d c0       	rjmp	.+26     	; 0x13c6 <vfprintf+0x272>
    13ac:	8b 2d       	mov	r24, r11
    13ae:	84 60       	ori	r24, 0x04	; 4
    13b0:	b8 2e       	mov	r11, r24
    13b2:	09 c0       	rjmp	.+18     	; 0x13c6 <vfprintf+0x272>
    13b4:	24 ff       	sbrs	r18, 4
    13b6:	0a c0       	rjmp	.+20     	; 0x13cc <vfprintf+0x278>
    13b8:	9f 2f       	mov	r25, r31
    13ba:	96 60       	ori	r25, 0x06	; 6
    13bc:	b9 2e       	mov	r11, r25
    13be:	06 c0       	rjmp	.+12     	; 0x13cc <vfprintf+0x278>
    13c0:	28 e0       	ldi	r18, 0x08	; 8
    13c2:	30 e0       	ldi	r19, 0x00	; 0
    13c4:	05 c0       	rjmp	.+10     	; 0x13d0 <vfprintf+0x27c>
    13c6:	20 e1       	ldi	r18, 0x10	; 16
    13c8:	30 e0       	ldi	r19, 0x00	; 0
    13ca:	02 c0       	rjmp	.+4      	; 0x13d0 <vfprintf+0x27c>
    13cc:	20 e1       	ldi	r18, 0x10	; 16
    13ce:	32 e0       	ldi	r19, 0x02	; 2
    13d0:	f8 01       	movw	r30, r16
    13d2:	b7 fe       	sbrs	r11, 7
    13d4:	07 c0       	rjmp	.+14     	; 0x13e4 <vfprintf+0x290>
    13d6:	60 81       	ld	r22, Z
    13d8:	71 81       	ldd	r23, Z+1	; 0x01
    13da:	82 81       	ldd	r24, Z+2	; 0x02
    13dc:	93 81       	ldd	r25, Z+3	; 0x03
    13de:	0c 5f       	subi	r16, 0xFC	; 252
    13e0:	1f 4f       	sbci	r17, 0xFF	; 255
    13e2:	06 c0       	rjmp	.+12     	; 0x13f0 <vfprintf+0x29c>
    13e4:	60 81       	ld	r22, Z
    13e6:	71 81       	ldd	r23, Z+1	; 0x01
    13e8:	80 e0       	ldi	r24, 0x00	; 0
    13ea:	90 e0       	ldi	r25, 0x00	; 0
    13ec:	0e 5f       	subi	r16, 0xFE	; 254
    13ee:	1f 4f       	sbci	r17, 0xFF	; 255
    13f0:	a4 01       	movw	r20, r8
    13f2:	2e d2       	rcall	.+1116   	; 0x1850 <__ultoa_invert>
    13f4:	a8 2e       	mov	r10, r24
    13f6:	a8 18       	sub	r10, r8
    13f8:	fb 2d       	mov	r31, r11
    13fa:	ff 77       	andi	r31, 0x7F	; 127
    13fc:	bf 2e       	mov	r11, r31
    13fe:	b6 fe       	sbrs	r11, 6
    1400:	0b c0       	rjmp	.+22     	; 0x1418 <vfprintf+0x2c4>
    1402:	2b 2d       	mov	r18, r11
    1404:	2e 7f       	andi	r18, 0xFE	; 254
    1406:	a5 14       	cp	r10, r5
    1408:	50 f4       	brcc	.+20     	; 0x141e <vfprintf+0x2ca>
    140a:	b4 fe       	sbrs	r11, 4
    140c:	0a c0       	rjmp	.+20     	; 0x1422 <vfprintf+0x2ce>
    140e:	b2 fc       	sbrc	r11, 2
    1410:	08 c0       	rjmp	.+16     	; 0x1422 <vfprintf+0x2ce>
    1412:	2b 2d       	mov	r18, r11
    1414:	2e 7e       	andi	r18, 0xEE	; 238
    1416:	05 c0       	rjmp	.+10     	; 0x1422 <vfprintf+0x2ce>
    1418:	7a 2c       	mov	r7, r10
    141a:	2b 2d       	mov	r18, r11
    141c:	03 c0       	rjmp	.+6      	; 0x1424 <vfprintf+0x2d0>
    141e:	7a 2c       	mov	r7, r10
    1420:	01 c0       	rjmp	.+2      	; 0x1424 <vfprintf+0x2d0>
    1422:	75 2c       	mov	r7, r5
    1424:	24 ff       	sbrs	r18, 4
    1426:	0d c0       	rjmp	.+26     	; 0x1442 <vfprintf+0x2ee>
    1428:	fe 01       	movw	r30, r28
    142a:	ea 0d       	add	r30, r10
    142c:	f1 1d       	adc	r31, r1
    142e:	80 81       	ld	r24, Z
    1430:	80 33       	cpi	r24, 0x30	; 48
    1432:	11 f4       	brne	.+4      	; 0x1438 <vfprintf+0x2e4>
    1434:	29 7e       	andi	r18, 0xE9	; 233
    1436:	09 c0       	rjmp	.+18     	; 0x144a <vfprintf+0x2f6>
    1438:	22 ff       	sbrs	r18, 2
    143a:	06 c0       	rjmp	.+12     	; 0x1448 <vfprintf+0x2f4>
    143c:	73 94       	inc	r7
    143e:	73 94       	inc	r7
    1440:	04 c0       	rjmp	.+8      	; 0x144a <vfprintf+0x2f6>
    1442:	82 2f       	mov	r24, r18
    1444:	86 78       	andi	r24, 0x86	; 134
    1446:	09 f0       	breq	.+2      	; 0x144a <vfprintf+0x2f6>
    1448:	73 94       	inc	r7
    144a:	23 fd       	sbrc	r18, 3
    144c:	12 c0       	rjmp	.+36     	; 0x1472 <vfprintf+0x31e>
    144e:	20 ff       	sbrs	r18, 0
    1450:	06 c0       	rjmp	.+12     	; 0x145e <vfprintf+0x30a>
    1452:	5a 2c       	mov	r5, r10
    1454:	73 14       	cp	r7, r3
    1456:	18 f4       	brcc	.+6      	; 0x145e <vfprintf+0x30a>
    1458:	53 0c       	add	r5, r3
    145a:	57 18       	sub	r5, r7
    145c:	73 2c       	mov	r7, r3
    145e:	73 14       	cp	r7, r3
    1460:	60 f4       	brcc	.+24     	; 0x147a <vfprintf+0x326>
    1462:	b7 01       	movw	r22, r14
    1464:	80 e2       	ldi	r24, 0x20	; 32
    1466:	90 e0       	ldi	r25, 0x00	; 0
    1468:	2c 87       	std	Y+12, r18	; 0x0c
    146a:	c0 d1       	rcall	.+896    	; 0x17ec <fputc>
    146c:	73 94       	inc	r7
    146e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1470:	f6 cf       	rjmp	.-20     	; 0x145e <vfprintf+0x30a>
    1472:	73 14       	cp	r7, r3
    1474:	10 f4       	brcc	.+4      	; 0x147a <vfprintf+0x326>
    1476:	37 18       	sub	r3, r7
    1478:	01 c0       	rjmp	.+2      	; 0x147c <vfprintf+0x328>
    147a:	31 2c       	mov	r3, r1
    147c:	24 ff       	sbrs	r18, 4
    147e:	11 c0       	rjmp	.+34     	; 0x14a2 <vfprintf+0x34e>
    1480:	b7 01       	movw	r22, r14
    1482:	80 e3       	ldi	r24, 0x30	; 48
    1484:	90 e0       	ldi	r25, 0x00	; 0
    1486:	2c 87       	std	Y+12, r18	; 0x0c
    1488:	b1 d1       	rcall	.+866    	; 0x17ec <fputc>
    148a:	2c 85       	ldd	r18, Y+12	; 0x0c
    148c:	22 ff       	sbrs	r18, 2
    148e:	16 c0       	rjmp	.+44     	; 0x14bc <vfprintf+0x368>
    1490:	21 ff       	sbrs	r18, 1
    1492:	03 c0       	rjmp	.+6      	; 0x149a <vfprintf+0x346>
    1494:	88 e5       	ldi	r24, 0x58	; 88
    1496:	90 e0       	ldi	r25, 0x00	; 0
    1498:	02 c0       	rjmp	.+4      	; 0x149e <vfprintf+0x34a>
    149a:	88 e7       	ldi	r24, 0x78	; 120
    149c:	90 e0       	ldi	r25, 0x00	; 0
    149e:	b7 01       	movw	r22, r14
    14a0:	0c c0       	rjmp	.+24     	; 0x14ba <vfprintf+0x366>
    14a2:	82 2f       	mov	r24, r18
    14a4:	86 78       	andi	r24, 0x86	; 134
    14a6:	51 f0       	breq	.+20     	; 0x14bc <vfprintf+0x368>
    14a8:	21 fd       	sbrc	r18, 1
    14aa:	02 c0       	rjmp	.+4      	; 0x14b0 <vfprintf+0x35c>
    14ac:	80 e2       	ldi	r24, 0x20	; 32
    14ae:	01 c0       	rjmp	.+2      	; 0x14b2 <vfprintf+0x35e>
    14b0:	8b e2       	ldi	r24, 0x2B	; 43
    14b2:	27 fd       	sbrc	r18, 7
    14b4:	8d e2       	ldi	r24, 0x2D	; 45
    14b6:	b7 01       	movw	r22, r14
    14b8:	90 e0       	ldi	r25, 0x00	; 0
    14ba:	98 d1       	rcall	.+816    	; 0x17ec <fputc>
    14bc:	a5 14       	cp	r10, r5
    14be:	30 f4       	brcc	.+12     	; 0x14cc <vfprintf+0x378>
    14c0:	b7 01       	movw	r22, r14
    14c2:	80 e3       	ldi	r24, 0x30	; 48
    14c4:	90 e0       	ldi	r25, 0x00	; 0
    14c6:	92 d1       	rcall	.+804    	; 0x17ec <fputc>
    14c8:	5a 94       	dec	r5
    14ca:	f8 cf       	rjmp	.-16     	; 0x14bc <vfprintf+0x368>
    14cc:	aa 94       	dec	r10
    14ce:	f4 01       	movw	r30, r8
    14d0:	ea 0d       	add	r30, r10
    14d2:	f1 1d       	adc	r31, r1
    14d4:	80 81       	ld	r24, Z
    14d6:	b7 01       	movw	r22, r14
    14d8:	90 e0       	ldi	r25, 0x00	; 0
    14da:	88 d1       	rcall	.+784    	; 0x17ec <fputc>
    14dc:	a1 10       	cpse	r10, r1
    14de:	f6 cf       	rjmp	.-20     	; 0x14cc <vfprintf+0x378>
    14e0:	33 20       	and	r3, r3
    14e2:	09 f4       	brne	.+2      	; 0x14e6 <vfprintf+0x392>
    14e4:	5d ce       	rjmp	.-838    	; 0x11a0 <vfprintf+0x4c>
    14e6:	b7 01       	movw	r22, r14
    14e8:	80 e2       	ldi	r24, 0x20	; 32
    14ea:	90 e0       	ldi	r25, 0x00	; 0
    14ec:	7f d1       	rcall	.+766    	; 0x17ec <fputc>
    14ee:	3a 94       	dec	r3
    14f0:	f7 cf       	rjmp	.-18     	; 0x14e0 <vfprintf+0x38c>
    14f2:	f7 01       	movw	r30, r14
    14f4:	86 81       	ldd	r24, Z+6	; 0x06
    14f6:	97 81       	ldd	r25, Z+7	; 0x07
    14f8:	02 c0       	rjmp	.+4      	; 0x14fe <vfprintf+0x3aa>
    14fa:	8f ef       	ldi	r24, 0xFF	; 255
    14fc:	9f ef       	ldi	r25, 0xFF	; 255
    14fe:	2c 96       	adiw	r28, 0x0c	; 12
    1500:	0f b6       	in	r0, 0x3f	; 63
    1502:	f8 94       	cli
    1504:	de bf       	out	0x3e, r29	; 62
    1506:	0f be       	out	0x3f, r0	; 63
    1508:	cd bf       	out	0x3d, r28	; 61
    150a:	df 91       	pop	r29
    150c:	cf 91       	pop	r28
    150e:	1f 91       	pop	r17
    1510:	0f 91       	pop	r16
    1512:	ff 90       	pop	r15
    1514:	ef 90       	pop	r14
    1516:	df 90       	pop	r13
    1518:	cf 90       	pop	r12
    151a:	bf 90       	pop	r11
    151c:	af 90       	pop	r10
    151e:	9f 90       	pop	r9
    1520:	8f 90       	pop	r8
    1522:	7f 90       	pop	r7
    1524:	6f 90       	pop	r6
    1526:	5f 90       	pop	r5
    1528:	4f 90       	pop	r4
    152a:	3f 90       	pop	r3
    152c:	2f 90       	pop	r2
    152e:	08 95       	ret

00001530 <calloc>:
    1530:	0f 93       	push	r16
    1532:	1f 93       	push	r17
    1534:	cf 93       	push	r28
    1536:	df 93       	push	r29
    1538:	86 9f       	mul	r24, r22
    153a:	80 01       	movw	r16, r0
    153c:	87 9f       	mul	r24, r23
    153e:	10 0d       	add	r17, r0
    1540:	96 9f       	mul	r25, r22
    1542:	10 0d       	add	r17, r0
    1544:	11 24       	eor	r1, r1
    1546:	c8 01       	movw	r24, r16
    1548:	0d d0       	rcall	.+26     	; 0x1564 <malloc>
    154a:	ec 01       	movw	r28, r24
    154c:	00 97       	sbiw	r24, 0x00	; 0
    154e:	21 f0       	breq	.+8      	; 0x1558 <calloc+0x28>
    1550:	a8 01       	movw	r20, r16
    1552:	60 e0       	ldi	r22, 0x00	; 0
    1554:	70 e0       	ldi	r23, 0x00	; 0
    1556:	38 d1       	rcall	.+624    	; 0x17c8 <memset>
    1558:	ce 01       	movw	r24, r28
    155a:	df 91       	pop	r29
    155c:	cf 91       	pop	r28
    155e:	1f 91       	pop	r17
    1560:	0f 91       	pop	r16
    1562:	08 95       	ret

00001564 <malloc>:
    1564:	cf 93       	push	r28
    1566:	df 93       	push	r29
    1568:	82 30       	cpi	r24, 0x02	; 2
    156a:	91 05       	cpc	r25, r1
    156c:	10 f4       	brcc	.+4      	; 0x1572 <malloc+0xe>
    156e:	82 e0       	ldi	r24, 0x02	; 2
    1570:	90 e0       	ldi	r25, 0x00	; 0
    1572:	e0 91 ef 02 	lds	r30, 0x02EF
    1576:	f0 91 f0 02 	lds	r31, 0x02F0
    157a:	20 e0       	ldi	r18, 0x00	; 0
    157c:	30 e0       	ldi	r19, 0x00	; 0
    157e:	a0 e0       	ldi	r26, 0x00	; 0
    1580:	b0 e0       	ldi	r27, 0x00	; 0
    1582:	30 97       	sbiw	r30, 0x00	; 0
    1584:	39 f1       	breq	.+78     	; 0x15d4 <malloc+0x70>
    1586:	40 81       	ld	r20, Z
    1588:	51 81       	ldd	r21, Z+1	; 0x01
    158a:	48 17       	cp	r20, r24
    158c:	59 07       	cpc	r21, r25
    158e:	b8 f0       	brcs	.+46     	; 0x15be <malloc+0x5a>
    1590:	48 17       	cp	r20, r24
    1592:	59 07       	cpc	r21, r25
    1594:	71 f4       	brne	.+28     	; 0x15b2 <malloc+0x4e>
    1596:	82 81       	ldd	r24, Z+2	; 0x02
    1598:	93 81       	ldd	r25, Z+3	; 0x03
    159a:	10 97       	sbiw	r26, 0x00	; 0
    159c:	29 f0       	breq	.+10     	; 0x15a8 <malloc+0x44>
    159e:	13 96       	adiw	r26, 0x03	; 3
    15a0:	9c 93       	st	X, r25
    15a2:	8e 93       	st	-X, r24
    15a4:	12 97       	sbiw	r26, 0x02	; 2
    15a6:	2c c0       	rjmp	.+88     	; 0x1600 <malloc+0x9c>
    15a8:	90 93 f0 02 	sts	0x02F0, r25
    15ac:	80 93 ef 02 	sts	0x02EF, r24
    15b0:	27 c0       	rjmp	.+78     	; 0x1600 <malloc+0x9c>
    15b2:	21 15       	cp	r18, r1
    15b4:	31 05       	cpc	r19, r1
    15b6:	31 f0       	breq	.+12     	; 0x15c4 <malloc+0x60>
    15b8:	42 17       	cp	r20, r18
    15ba:	53 07       	cpc	r21, r19
    15bc:	18 f0       	brcs	.+6      	; 0x15c4 <malloc+0x60>
    15be:	a9 01       	movw	r20, r18
    15c0:	db 01       	movw	r26, r22
    15c2:	01 c0       	rjmp	.+2      	; 0x15c6 <malloc+0x62>
    15c4:	ef 01       	movw	r28, r30
    15c6:	9a 01       	movw	r18, r20
    15c8:	bd 01       	movw	r22, r26
    15ca:	df 01       	movw	r26, r30
    15cc:	02 80       	ldd	r0, Z+2	; 0x02
    15ce:	f3 81       	ldd	r31, Z+3	; 0x03
    15d0:	e0 2d       	mov	r30, r0
    15d2:	d7 cf       	rjmp	.-82     	; 0x1582 <malloc+0x1e>
    15d4:	21 15       	cp	r18, r1
    15d6:	31 05       	cpc	r19, r1
    15d8:	f9 f0       	breq	.+62     	; 0x1618 <malloc+0xb4>
    15da:	28 1b       	sub	r18, r24
    15dc:	39 0b       	sbc	r19, r25
    15de:	24 30       	cpi	r18, 0x04	; 4
    15e0:	31 05       	cpc	r19, r1
    15e2:	80 f4       	brcc	.+32     	; 0x1604 <malloc+0xa0>
    15e4:	8a 81       	ldd	r24, Y+2	; 0x02
    15e6:	9b 81       	ldd	r25, Y+3	; 0x03
    15e8:	61 15       	cp	r22, r1
    15ea:	71 05       	cpc	r23, r1
    15ec:	21 f0       	breq	.+8      	; 0x15f6 <malloc+0x92>
    15ee:	fb 01       	movw	r30, r22
    15f0:	93 83       	std	Z+3, r25	; 0x03
    15f2:	82 83       	std	Z+2, r24	; 0x02
    15f4:	04 c0       	rjmp	.+8      	; 0x15fe <malloc+0x9a>
    15f6:	90 93 f0 02 	sts	0x02F0, r25
    15fa:	80 93 ef 02 	sts	0x02EF, r24
    15fe:	fe 01       	movw	r30, r28
    1600:	32 96       	adiw	r30, 0x02	; 2
    1602:	44 c0       	rjmp	.+136    	; 0x168c <malloc+0x128>
    1604:	fe 01       	movw	r30, r28
    1606:	e2 0f       	add	r30, r18
    1608:	f3 1f       	adc	r31, r19
    160a:	81 93       	st	Z+, r24
    160c:	91 93       	st	Z+, r25
    160e:	22 50       	subi	r18, 0x02	; 2
    1610:	31 09       	sbc	r19, r1
    1612:	39 83       	std	Y+1, r19	; 0x01
    1614:	28 83       	st	Y, r18
    1616:	3a c0       	rjmp	.+116    	; 0x168c <malloc+0x128>
    1618:	20 91 ed 02 	lds	r18, 0x02ED
    161c:	30 91 ee 02 	lds	r19, 0x02EE
    1620:	23 2b       	or	r18, r19
    1622:	41 f4       	brne	.+16     	; 0x1634 <malloc+0xd0>
    1624:	20 91 02 02 	lds	r18, 0x0202
    1628:	30 91 03 02 	lds	r19, 0x0203
    162c:	30 93 ee 02 	sts	0x02EE, r19
    1630:	20 93 ed 02 	sts	0x02ED, r18
    1634:	20 91 00 02 	lds	r18, 0x0200
    1638:	30 91 01 02 	lds	r19, 0x0201
    163c:	21 15       	cp	r18, r1
    163e:	31 05       	cpc	r19, r1
    1640:	41 f4       	brne	.+16     	; 0x1652 <malloc+0xee>
    1642:	2d b7       	in	r18, 0x3d	; 61
    1644:	3e b7       	in	r19, 0x3e	; 62
    1646:	40 91 04 02 	lds	r20, 0x0204
    164a:	50 91 05 02 	lds	r21, 0x0205
    164e:	24 1b       	sub	r18, r20
    1650:	35 0b       	sbc	r19, r21
    1652:	e0 91 ed 02 	lds	r30, 0x02ED
    1656:	f0 91 ee 02 	lds	r31, 0x02EE
    165a:	e2 17       	cp	r30, r18
    165c:	f3 07       	cpc	r31, r19
    165e:	a0 f4       	brcc	.+40     	; 0x1688 <malloc+0x124>
    1660:	2e 1b       	sub	r18, r30
    1662:	3f 0b       	sbc	r19, r31
    1664:	28 17       	cp	r18, r24
    1666:	39 07       	cpc	r19, r25
    1668:	78 f0       	brcs	.+30     	; 0x1688 <malloc+0x124>
    166a:	ac 01       	movw	r20, r24
    166c:	4e 5f       	subi	r20, 0xFE	; 254
    166e:	5f 4f       	sbci	r21, 0xFF	; 255
    1670:	24 17       	cp	r18, r20
    1672:	35 07       	cpc	r19, r21
    1674:	48 f0       	brcs	.+18     	; 0x1688 <malloc+0x124>
    1676:	4e 0f       	add	r20, r30
    1678:	5f 1f       	adc	r21, r31
    167a:	50 93 ee 02 	sts	0x02EE, r21
    167e:	40 93 ed 02 	sts	0x02ED, r20
    1682:	81 93       	st	Z+, r24
    1684:	91 93       	st	Z+, r25
    1686:	02 c0       	rjmp	.+4      	; 0x168c <malloc+0x128>
    1688:	e0 e0       	ldi	r30, 0x00	; 0
    168a:	f0 e0       	ldi	r31, 0x00	; 0
    168c:	cf 01       	movw	r24, r30
    168e:	df 91       	pop	r29
    1690:	cf 91       	pop	r28
    1692:	08 95       	ret

00001694 <free>:
    1694:	cf 93       	push	r28
    1696:	df 93       	push	r29
    1698:	00 97       	sbiw	r24, 0x00	; 0
    169a:	09 f4       	brne	.+2      	; 0x169e <free+0xa>
    169c:	87 c0       	rjmp	.+270    	; 0x17ac <free+0x118>
    169e:	fc 01       	movw	r30, r24
    16a0:	32 97       	sbiw	r30, 0x02	; 2
    16a2:	13 82       	std	Z+3, r1	; 0x03
    16a4:	12 82       	std	Z+2, r1	; 0x02
    16a6:	c0 91 ef 02 	lds	r28, 0x02EF
    16aa:	d0 91 f0 02 	lds	r29, 0x02F0
    16ae:	20 97       	sbiw	r28, 0x00	; 0
    16b0:	81 f4       	brne	.+32     	; 0x16d2 <free+0x3e>
    16b2:	20 81       	ld	r18, Z
    16b4:	31 81       	ldd	r19, Z+1	; 0x01
    16b6:	28 0f       	add	r18, r24
    16b8:	39 1f       	adc	r19, r25
    16ba:	80 91 ed 02 	lds	r24, 0x02ED
    16be:	90 91 ee 02 	lds	r25, 0x02EE
    16c2:	82 17       	cp	r24, r18
    16c4:	93 07       	cpc	r25, r19
    16c6:	79 f5       	brne	.+94     	; 0x1726 <free+0x92>
    16c8:	f0 93 ee 02 	sts	0x02EE, r31
    16cc:	e0 93 ed 02 	sts	0x02ED, r30
    16d0:	6d c0       	rjmp	.+218    	; 0x17ac <free+0x118>
    16d2:	de 01       	movw	r26, r28
    16d4:	20 e0       	ldi	r18, 0x00	; 0
    16d6:	30 e0       	ldi	r19, 0x00	; 0
    16d8:	ae 17       	cp	r26, r30
    16da:	bf 07       	cpc	r27, r31
    16dc:	50 f4       	brcc	.+20     	; 0x16f2 <free+0x5e>
    16de:	12 96       	adiw	r26, 0x02	; 2
    16e0:	4d 91       	ld	r20, X+
    16e2:	5c 91       	ld	r21, X
    16e4:	13 97       	sbiw	r26, 0x03	; 3
    16e6:	9d 01       	movw	r18, r26
    16e8:	41 15       	cp	r20, r1
    16ea:	51 05       	cpc	r21, r1
    16ec:	09 f1       	breq	.+66     	; 0x1730 <free+0x9c>
    16ee:	da 01       	movw	r26, r20
    16f0:	f3 cf       	rjmp	.-26     	; 0x16d8 <free+0x44>
    16f2:	b3 83       	std	Z+3, r27	; 0x03
    16f4:	a2 83       	std	Z+2, r26	; 0x02
    16f6:	40 81       	ld	r20, Z
    16f8:	51 81       	ldd	r21, Z+1	; 0x01
    16fa:	84 0f       	add	r24, r20
    16fc:	95 1f       	adc	r25, r21
    16fe:	8a 17       	cp	r24, r26
    1700:	9b 07       	cpc	r25, r27
    1702:	71 f4       	brne	.+28     	; 0x1720 <free+0x8c>
    1704:	8d 91       	ld	r24, X+
    1706:	9c 91       	ld	r25, X
    1708:	11 97       	sbiw	r26, 0x01	; 1
    170a:	84 0f       	add	r24, r20
    170c:	95 1f       	adc	r25, r21
    170e:	02 96       	adiw	r24, 0x02	; 2
    1710:	91 83       	std	Z+1, r25	; 0x01
    1712:	80 83       	st	Z, r24
    1714:	12 96       	adiw	r26, 0x02	; 2
    1716:	8d 91       	ld	r24, X+
    1718:	9c 91       	ld	r25, X
    171a:	13 97       	sbiw	r26, 0x03	; 3
    171c:	93 83       	std	Z+3, r25	; 0x03
    171e:	82 83       	std	Z+2, r24	; 0x02
    1720:	21 15       	cp	r18, r1
    1722:	31 05       	cpc	r19, r1
    1724:	29 f4       	brne	.+10     	; 0x1730 <free+0x9c>
    1726:	f0 93 f0 02 	sts	0x02F0, r31
    172a:	e0 93 ef 02 	sts	0x02EF, r30
    172e:	3e c0       	rjmp	.+124    	; 0x17ac <free+0x118>
    1730:	d9 01       	movw	r26, r18
    1732:	13 96       	adiw	r26, 0x03	; 3
    1734:	fc 93       	st	X, r31
    1736:	ee 93       	st	-X, r30
    1738:	12 97       	sbiw	r26, 0x02	; 2
    173a:	4d 91       	ld	r20, X+
    173c:	5d 91       	ld	r21, X+
    173e:	a4 0f       	add	r26, r20
    1740:	b5 1f       	adc	r27, r21
    1742:	ea 17       	cp	r30, r26
    1744:	fb 07       	cpc	r31, r27
    1746:	79 f4       	brne	.+30     	; 0x1766 <free+0xd2>
    1748:	80 81       	ld	r24, Z
    174a:	91 81       	ldd	r25, Z+1	; 0x01
    174c:	84 0f       	add	r24, r20
    174e:	95 1f       	adc	r25, r21
    1750:	02 96       	adiw	r24, 0x02	; 2
    1752:	d9 01       	movw	r26, r18
    1754:	11 96       	adiw	r26, 0x01	; 1
    1756:	9c 93       	st	X, r25
    1758:	8e 93       	st	-X, r24
    175a:	82 81       	ldd	r24, Z+2	; 0x02
    175c:	93 81       	ldd	r25, Z+3	; 0x03
    175e:	13 96       	adiw	r26, 0x03	; 3
    1760:	9c 93       	st	X, r25
    1762:	8e 93       	st	-X, r24
    1764:	12 97       	sbiw	r26, 0x02	; 2
    1766:	e0 e0       	ldi	r30, 0x00	; 0
    1768:	f0 e0       	ldi	r31, 0x00	; 0
    176a:	8a 81       	ldd	r24, Y+2	; 0x02
    176c:	9b 81       	ldd	r25, Y+3	; 0x03
    176e:	00 97       	sbiw	r24, 0x00	; 0
    1770:	19 f0       	breq	.+6      	; 0x1778 <free+0xe4>
    1772:	fe 01       	movw	r30, r28
    1774:	ec 01       	movw	r28, r24
    1776:	f9 cf       	rjmp	.-14     	; 0x176a <free+0xd6>
    1778:	ce 01       	movw	r24, r28
    177a:	02 96       	adiw	r24, 0x02	; 2
    177c:	28 81       	ld	r18, Y
    177e:	39 81       	ldd	r19, Y+1	; 0x01
    1780:	82 0f       	add	r24, r18
    1782:	93 1f       	adc	r25, r19
    1784:	20 91 ed 02 	lds	r18, 0x02ED
    1788:	30 91 ee 02 	lds	r19, 0x02EE
    178c:	28 17       	cp	r18, r24
    178e:	39 07       	cpc	r19, r25
    1790:	69 f4       	brne	.+26     	; 0x17ac <free+0x118>
    1792:	30 97       	sbiw	r30, 0x00	; 0
    1794:	29 f4       	brne	.+10     	; 0x17a0 <free+0x10c>
    1796:	10 92 f0 02 	sts	0x02F0, r1
    179a:	10 92 ef 02 	sts	0x02EF, r1
    179e:	02 c0       	rjmp	.+4      	; 0x17a4 <free+0x110>
    17a0:	13 82       	std	Z+3, r1	; 0x03
    17a2:	12 82       	std	Z+2, r1	; 0x02
    17a4:	d0 93 ee 02 	sts	0x02EE, r29
    17a8:	c0 93 ed 02 	sts	0x02ED, r28
    17ac:	df 91       	pop	r29
    17ae:	cf 91       	pop	r28
    17b0:	08 95       	ret

000017b2 <strnlen_P>:
    17b2:	fc 01       	movw	r30, r24
    17b4:	05 90       	lpm	r0, Z+
    17b6:	61 50       	subi	r22, 0x01	; 1
    17b8:	70 40       	sbci	r23, 0x00	; 0
    17ba:	01 10       	cpse	r0, r1
    17bc:	d8 f7       	brcc	.-10     	; 0x17b4 <strnlen_P+0x2>
    17be:	80 95       	com	r24
    17c0:	90 95       	com	r25
    17c2:	8e 0f       	add	r24, r30
    17c4:	9f 1f       	adc	r25, r31
    17c6:	08 95       	ret

000017c8 <memset>:
    17c8:	dc 01       	movw	r26, r24
    17ca:	01 c0       	rjmp	.+2      	; 0x17ce <memset+0x6>
    17cc:	6d 93       	st	X+, r22
    17ce:	41 50       	subi	r20, 0x01	; 1
    17d0:	50 40       	sbci	r21, 0x00	; 0
    17d2:	e0 f7       	brcc	.-8      	; 0x17cc <memset+0x4>
    17d4:	08 95       	ret

000017d6 <strnlen>:
    17d6:	fc 01       	movw	r30, r24
    17d8:	61 50       	subi	r22, 0x01	; 1
    17da:	70 40       	sbci	r23, 0x00	; 0
    17dc:	01 90       	ld	r0, Z+
    17de:	01 10       	cpse	r0, r1
    17e0:	d8 f7       	brcc	.-10     	; 0x17d8 <strnlen+0x2>
    17e2:	80 95       	com	r24
    17e4:	90 95       	com	r25
    17e6:	8e 0f       	add	r24, r30
    17e8:	9f 1f       	adc	r25, r31
    17ea:	08 95       	ret

000017ec <fputc>:
    17ec:	0f 93       	push	r16
    17ee:	1f 93       	push	r17
    17f0:	cf 93       	push	r28
    17f2:	df 93       	push	r29
    17f4:	18 2f       	mov	r17, r24
    17f6:	09 2f       	mov	r16, r25
    17f8:	eb 01       	movw	r28, r22
    17fa:	8b 81       	ldd	r24, Y+3	; 0x03
    17fc:	81 fd       	sbrc	r24, 1
    17fe:	03 c0       	rjmp	.+6      	; 0x1806 <fputc+0x1a>
    1800:	8f ef       	ldi	r24, 0xFF	; 255
    1802:	9f ef       	ldi	r25, 0xFF	; 255
    1804:	20 c0       	rjmp	.+64     	; 0x1846 <fputc+0x5a>
    1806:	82 ff       	sbrs	r24, 2
    1808:	10 c0       	rjmp	.+32     	; 0x182a <fputc+0x3e>
    180a:	4e 81       	ldd	r20, Y+6	; 0x06
    180c:	5f 81       	ldd	r21, Y+7	; 0x07
    180e:	2c 81       	ldd	r18, Y+4	; 0x04
    1810:	3d 81       	ldd	r19, Y+5	; 0x05
    1812:	42 17       	cp	r20, r18
    1814:	53 07       	cpc	r21, r19
    1816:	7c f4       	brge	.+30     	; 0x1836 <fputc+0x4a>
    1818:	e8 81       	ld	r30, Y
    181a:	f9 81       	ldd	r31, Y+1	; 0x01
    181c:	9f 01       	movw	r18, r30
    181e:	2f 5f       	subi	r18, 0xFF	; 255
    1820:	3f 4f       	sbci	r19, 0xFF	; 255
    1822:	39 83       	std	Y+1, r19	; 0x01
    1824:	28 83       	st	Y, r18
    1826:	10 83       	st	Z, r17
    1828:	06 c0       	rjmp	.+12     	; 0x1836 <fputc+0x4a>
    182a:	e8 85       	ldd	r30, Y+8	; 0x08
    182c:	f9 85       	ldd	r31, Y+9	; 0x09
    182e:	81 2f       	mov	r24, r17
    1830:	19 95       	eicall
    1832:	89 2b       	or	r24, r25
    1834:	29 f7       	brne	.-54     	; 0x1800 <fputc+0x14>
    1836:	2e 81       	ldd	r18, Y+6	; 0x06
    1838:	3f 81       	ldd	r19, Y+7	; 0x07
    183a:	2f 5f       	subi	r18, 0xFF	; 255
    183c:	3f 4f       	sbci	r19, 0xFF	; 255
    183e:	3f 83       	std	Y+7, r19	; 0x07
    1840:	2e 83       	std	Y+6, r18	; 0x06
    1842:	81 2f       	mov	r24, r17
    1844:	90 2f       	mov	r25, r16
    1846:	df 91       	pop	r29
    1848:	cf 91       	pop	r28
    184a:	1f 91       	pop	r17
    184c:	0f 91       	pop	r16
    184e:	08 95       	ret

00001850 <__ultoa_invert>:
    1850:	fa 01       	movw	r30, r20
    1852:	aa 27       	eor	r26, r26
    1854:	28 30       	cpi	r18, 0x08	; 8
    1856:	51 f1       	breq	.+84     	; 0x18ac <__ultoa_invert+0x5c>
    1858:	20 31       	cpi	r18, 0x10	; 16
    185a:	81 f1       	breq	.+96     	; 0x18bc <__ultoa_invert+0x6c>
    185c:	e8 94       	clt
    185e:	6f 93       	push	r22
    1860:	6e 7f       	andi	r22, 0xFE	; 254
    1862:	6e 5f       	subi	r22, 0xFE	; 254
    1864:	7f 4f       	sbci	r23, 0xFF	; 255
    1866:	8f 4f       	sbci	r24, 0xFF	; 255
    1868:	9f 4f       	sbci	r25, 0xFF	; 255
    186a:	af 4f       	sbci	r26, 0xFF	; 255
    186c:	b1 e0       	ldi	r27, 0x01	; 1
    186e:	3e d0       	rcall	.+124    	; 0x18ec <__ultoa_invert+0x9c>
    1870:	b4 e0       	ldi	r27, 0x04	; 4
    1872:	3c d0       	rcall	.+120    	; 0x18ec <__ultoa_invert+0x9c>
    1874:	67 0f       	add	r22, r23
    1876:	78 1f       	adc	r23, r24
    1878:	89 1f       	adc	r24, r25
    187a:	9a 1f       	adc	r25, r26
    187c:	a1 1d       	adc	r26, r1
    187e:	68 0f       	add	r22, r24
    1880:	79 1f       	adc	r23, r25
    1882:	8a 1f       	adc	r24, r26
    1884:	91 1d       	adc	r25, r1
    1886:	a1 1d       	adc	r26, r1
    1888:	6a 0f       	add	r22, r26
    188a:	71 1d       	adc	r23, r1
    188c:	81 1d       	adc	r24, r1
    188e:	91 1d       	adc	r25, r1
    1890:	a1 1d       	adc	r26, r1
    1892:	20 d0       	rcall	.+64     	; 0x18d4 <__ultoa_invert+0x84>
    1894:	09 f4       	brne	.+2      	; 0x1898 <__ultoa_invert+0x48>
    1896:	68 94       	set
    1898:	3f 91       	pop	r19
    189a:	2a e0       	ldi	r18, 0x0A	; 10
    189c:	26 9f       	mul	r18, r22
    189e:	11 24       	eor	r1, r1
    18a0:	30 19       	sub	r19, r0
    18a2:	30 5d       	subi	r19, 0xD0	; 208
    18a4:	31 93       	st	Z+, r19
    18a6:	de f6       	brtc	.-74     	; 0x185e <__ultoa_invert+0xe>
    18a8:	cf 01       	movw	r24, r30
    18aa:	08 95       	ret
    18ac:	46 2f       	mov	r20, r22
    18ae:	47 70       	andi	r20, 0x07	; 7
    18b0:	40 5d       	subi	r20, 0xD0	; 208
    18b2:	41 93       	st	Z+, r20
    18b4:	b3 e0       	ldi	r27, 0x03	; 3
    18b6:	0f d0       	rcall	.+30     	; 0x18d6 <__ultoa_invert+0x86>
    18b8:	c9 f7       	brne	.-14     	; 0x18ac <__ultoa_invert+0x5c>
    18ba:	f6 cf       	rjmp	.-20     	; 0x18a8 <__ultoa_invert+0x58>
    18bc:	46 2f       	mov	r20, r22
    18be:	4f 70       	andi	r20, 0x0F	; 15
    18c0:	40 5d       	subi	r20, 0xD0	; 208
    18c2:	4a 33       	cpi	r20, 0x3A	; 58
    18c4:	18 f0       	brcs	.+6      	; 0x18cc <__ultoa_invert+0x7c>
    18c6:	49 5d       	subi	r20, 0xD9	; 217
    18c8:	31 fd       	sbrc	r19, 1
    18ca:	40 52       	subi	r20, 0x20	; 32
    18cc:	41 93       	st	Z+, r20
    18ce:	02 d0       	rcall	.+4      	; 0x18d4 <__ultoa_invert+0x84>
    18d0:	a9 f7       	brne	.-22     	; 0x18bc <__ultoa_invert+0x6c>
    18d2:	ea cf       	rjmp	.-44     	; 0x18a8 <__ultoa_invert+0x58>
    18d4:	b4 e0       	ldi	r27, 0x04	; 4
    18d6:	a6 95       	lsr	r26
    18d8:	97 95       	ror	r25
    18da:	87 95       	ror	r24
    18dc:	77 95       	ror	r23
    18de:	67 95       	ror	r22
    18e0:	ba 95       	dec	r27
    18e2:	c9 f7       	brne	.-14     	; 0x18d6 <__ultoa_invert+0x86>
    18e4:	00 97       	sbiw	r24, 0x00	; 0
    18e6:	61 05       	cpc	r22, r1
    18e8:	71 05       	cpc	r23, r1
    18ea:	08 95       	ret
    18ec:	9b 01       	movw	r18, r22
    18ee:	ac 01       	movw	r20, r24
    18f0:	0a 2e       	mov	r0, r26
    18f2:	06 94       	lsr	r0
    18f4:	57 95       	ror	r21
    18f6:	47 95       	ror	r20
    18f8:	37 95       	ror	r19
    18fa:	27 95       	ror	r18
    18fc:	ba 95       	dec	r27
    18fe:	c9 f7       	brne	.-14     	; 0x18f2 <__ultoa_invert+0xa2>
    1900:	62 0f       	add	r22, r18
    1902:	73 1f       	adc	r23, r19
    1904:	84 1f       	adc	r24, r20
    1906:	95 1f       	adc	r25, r21
    1908:	a0 1d       	adc	r26, r0
    190a:	08 95       	ret

0000190c <_exit>:
    190c:	f8 94       	cli

0000190e <__stop_program>:
    190e:	ff cf       	rjmp	.-2      	; 0x190e <__stop_program>
